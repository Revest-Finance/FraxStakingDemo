{"id":"bf73795d81cbbf97a8a24b4f0f2f5963","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/interfaces/IAddressRegistry.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\n/**\n * @title Provider interface for Revest FNFTs\n * @dev\n *\n */\ninterface IAddressRegistry {\n\n    function initialize(\n        address lock_manager_,\n        address liquidity_,\n        address revest_token_,\n        address token_vault_,\n        address revest_,\n        address fnft_,\n        address metadata_,\n        address admin_,\n        address rewards_\n    ) external;\n\n    function getAdmin() external view returns (address);\n\n    function setAdmin(address admin) external;\n\n    function getLockManager() external view returns (address);\n\n    function setLockManager(address manager) external;\n\n    function getTokenVault() external view returns (address);\n\n    function setTokenVault(address vault) external;\n\n    function getRevestFNFT() external view returns (address);\n\n    function setRevestFNFT(address fnft) external;\n\n    function getMetadataHandler() external view returns (address);\n\n    function setMetadataHandler(address metadata) external;\n\n    function getRevest() external view returns (address);\n\n    function setRevest(address revest) external;\n\n    function getDEX(uint index) external view returns (address);\n\n    function setDex(address dex) external;\n\n    function getRevestToken() external view returns (address);\n\n    function setRevestToken(address token) external;\n\n    function getRewardsHandler() external view returns(address);\n\n    function setRewardsHandler(address esc) external;\n\n    function getAddress(bytes32 id) external view returns (address);\n\n    function getLPs() external view returns (address);\n\n    function setLPs(address liquidToken) external;\n\n}\n"},"contracts/interfaces/IConvexWrapperV2.sol":{"content":"interface IConvexWrapperV2{\n\n   struct EarnedData {\n        address token;\n        uint256 amount;\n    }\n\n  function collateralVault() external view returns(address vault);\n  function convexPoolId() external view returns(uint256 _poolId);\n  function balanceOf(address _account) external view returns(uint256);\n  function totalBalanceOf(address _account) external view returns(uint256);\n  function deposit(uint256 _amount, address _to) external;\n  function stake(uint256 _amount, address _to) external;\n  function withdraw(uint256 _amount) external;\n  function withdrawAndUnwrap(uint256 _amount) external;\n  function getReward(address _account) external;\n  function getReward(address _account, address _forwardTo) external;\n  function rewardLength() external view returns(uint256);\n  function earned(address _account) external returns(EarnedData[] memory claimable);\n  function earnedView(address _account) external view returns(EarnedData[] memory claimable);\n  function setVault(address _vault) external;\n  function user_checkpoint(address[2] calldata _accounts) external returns(bool);\n}\n"},"contracts/interfaces/IDistributor.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\nimport \"./IRegistryProvider.sol\";\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\n\n/**\n * @title Provider interface for Revest FNFTs\n */\ninterface IDistributor {\n\n    function claim() external returns (uint amountTransferred);\n\n    function N_COINS() external view returns (uint n);\n\n    function tokens(uint index) external view returns (address token);\n\n    function user_epoch_of(address _addr) external view returns (uint epoch);\n\n    function tokens_per_day(uint index, uint index2) external view returns (uint tokensPerDay);\n\n    function start_time() external view returns (uint startTime);\n\n    function last_token_times(uint index) external view returns (uint lastTime);//Call with index 0\n\n    function time_cursor() external view returns (uint timeCursor);\n\n    function time_cursor_of(address addr) external view returns (uint timeCursor);\n\n    function ve_supply(uint index) external view returns (uint supply);\n\n}\n"},"contracts/interfaces/IFeeReporter.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\n\ninterface IFeeReporter {\n\n    function getFlatWeiFee(address asset) external view returns (uint);\n\n    function getERC20Fee(address asset) external view returns (uint);\n\n}\n"},"contracts/interfaces/IFNFTHandler.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\n\ninterface IFNFTHandler  {\n    function mint(address account, uint id, uint amount, bytes memory data) external;\n\n    function mintBatchRec(address[] memory recipients, uint[] memory quantities, uint id, uint newSupply, bytes memory data) external;\n\n    function mintBatch(address to, uint[] memory ids, uint[] memory amounts, bytes memory data) external;\n\n    function setURI(string memory newuri) external;\n\n    function burn(address account, uint id, uint amount) external;\n\n    function burnBatch(address account, uint[] memory ids, uint[] memory amounts) external;\n\n    function getBalance(address tokenHolder, uint id) external view returns (uint);\n\n    function getSupply(uint fnftId) external view returns (uint);\n\n    function getNextId() external view returns (uint);\n}\n"},"contracts/interfaces/IFraxFarmBase.sol":{"content":"pragma solidity >=0.8.0;\n\ninterface IFraxFarmBase{\n\n    function totalLiquidityLocked() external view returns (uint256);\n    function lockedLiquidityOf(address account) external view returns (uint256);\n\n    function toggleValidVeFXSProxy(address proxy_address) external;\n    function proxyToggleStaker(address staker_address) external;\n    function stakerSetVeFXSProxy(address proxy_address) external;\n    function getReward(address destination_address) external returns (uint256[] memory);\n\n}"},"contracts/interfaces/IFraxFarmERC20.sol":{"content":"\ninterface IFraxFarmERC20 {\n    \n    struct LockedStake {\n        bytes32 kek_id;\n        uint256 start_timestamp;\n        uint256 liquidity;\n        uint256 ending_timestamp;\n        uint256 lock_multiplier; // 6 decimals of precision. 1x = 1000000\n    }\n\n    function owner() external view returns (address);\n    function stakingToken() external view returns (address);\n    function fraxPerLPToken() external view returns (uint256);\n    function calcCurCombinedWeight(address account) external view\n        returns (\n            uint256 old_combined_weight,\n            uint256 new_vefxs_multiplier,\n            uint256 new_combined_weight\n        );\n    function lockedStakesOf(address account) external view returns (LockedStake[] memory);\n    function lockedStakesOfLength(address account) external view returns (uint256);\n    function lockAdditional(bytes32 kek_id, uint256 addl_liq) external;\n    function lockLonger(bytes32 kek_id, uint256 new_ending_ts) external;\n    function stakeLocked(uint256 liquidity, uint256 secs) external returns (bytes32);\n    function withdrawLocked(bytes32 kek_id, address destination_address) external returns (uint256);\n\n\n\n    function periodFinish() external view returns (uint256);\n    function getAllRewardTokens() external view returns (address[] memory);\n    function earned(address account) external view returns (uint256[] memory new_earned);\n    function totalLiquidityLocked() external view returns (uint256);\n    function lockedLiquidityOf(address account) external view returns (uint256);\n    function totalCombinedWeight() external view returns (uint256);\n    function combinedWeightOf(address account) external view returns (uint256);\n    function lockMultiplier(uint256 secs) external view returns (uint256);\n    function rewardRates(uint256 token_idx) external view returns (uint256 rwd_rate);\n\n    function userStakedFrax(address account) external view returns (uint256);\n    function proxyStakedFrax(address proxy_address) external view returns (uint256);\n    function maxLPForMaxBoost(address account) external view returns (uint256);\n    function minVeFXSForMaxBoost(address account) external view returns (uint256);\n    function minVeFXSForMaxBoostProxy(address proxy_address) external view returns (uint256);\n    function veFXSMultiplier(address account) external view returns (uint256 vefxs_multiplier);\n\n    function toggleValidVeFXSProxy(address proxy_address) external;\n    function proxyToggleStaker(address staker_address) external;\n    function stakerSetVeFXSProxy(address proxy_address) external;\n    function getReward(address destination_address) external returns (uint256[] memory);\n    function vefxs_max_multiplier() external view returns(uint256);\n    function vefxs_boost_scale_factor() external view returns(uint256);\n    function vefxs_per_frax_for_max_boost() external view returns(uint256);\n    function getProxyFor(address addr) external view returns (address);\n\n    function sync() external;\n}"},"contracts/interfaces/ILockManager.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\nimport \"./IRevest.sol\";\n\ninterface ILockManager {\n\n    function createLock(uint fnftId, IRevest.LockParam memory lock) external returns (uint);\n\n    function getLock(uint lockId) external view returns (IRevest.Lock memory);\n\n    function fnftIdToLockId(uint fnftId) external view returns (uint);\n\n    function fnftIdToLock(uint fnftId) external view returns (IRevest.Lock memory);\n\n    function pointFNFTToLock(uint fnftId, uint lockId) external;\n\n    function lockTypes(uint tokenId) external view returns (IRevest.LockType);\n\n    function unlockFNFT(uint fnftId, address sender) external returns (bool);\n\n    function getLockMaturity(uint fnftId) external view returns (bool);\n}\n"},"contracts/interfaces/IOutputReceiver.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\nimport \"./IRegistryProvider.sol\";\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\n\n/**\n * @title Provider interface for Revest FNFTs\n */\ninterface IOutputReceiver is IRegistryProvider, IERC165 {\n\n    function receiveRevestOutput(\n        uint fnftId,\n        address asset,\n        address payable owner,\n        uint quantity\n    ) external;\n\n    function getCustomMetadata(uint fnftId) external view returns (string memory);\n\n    function getValue(uint fnftId) external view returns (uint);\n\n    function getAsset(uint fnftId) external view returns (address);\n\n    function getOutputDisplayValues(uint fnftId) external view returns (bytes memory);\n\n}\n"},"contracts/interfaces/IOutputReceiverV2.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\nimport \"./IOutputReceiver.sol\";\nimport \"./IRevest.sol\";\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\n\n\n/**\n * @title Provider interface for Revest FNFTs\n */\ninterface IOutputReceiverV2 is IOutputReceiver {\n\n    // Future proofing for secondary callbacks during withdrawal\n    // Could just use triggerOutputReceiverUpdate and call withdrawal function\n    // But deliberately using reentry is poor form and reminds me too much of OAuth 2.0 \n    function receiveSecondaryCallback(\n        uint fnftId,\n        address payable owner,\n        uint quantity,\n        IRevest.FNFTConfig memory config,\n        bytes memory args\n    ) external payable;\n\n    // Allows for similar function to address lock, updating state while still locked\n    // Called by the user directly\n    function triggerOutputReceiverUpdate(\n        uint fnftId,\n        bytes memory args\n    ) external;\n\n    // This function should only ever be called when a split or additional deposit has occurred \n    function handleFNFTRemaps(uint fnftId, uint[] memory newFNFTIds, address caller, bool cleanup) external;\n\n}\n"},"contracts/interfaces/IOutputReceiverV3.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\nimport \"./IOutputReceiverV2.sol\";\n\n\n/**\n * @title Provider interface for Revest FNFTs\n */\ninterface IOutputReceiverV3 is IOutputReceiverV2 {\n\n    event DepositERC20OutputReceiver(address indexed mintTo, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\n\n    event DepositERC721OutputReceiver(address indexed mintTo, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\n\n    event DepositERC1155OutputReceiver(address indexed mintTo, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\n\n    event WithdrawERC20OutputReceiver(address indexed caller, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\n\n    event WithdrawERC721OutputReceiver(address indexed caller, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\n\n    event WithdrawERC1155OutputReceiver(address indexed caller, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\n\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external;\n\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint quantity, address caller) external;\n\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external;\n\n}\n"},"contracts/interfaces/IRegistryProvider.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity ^0.8.0;\n\ninterface IRegistryProvider {\n    function setAddressRegistry(address revest) external;\n\n    function getAddressRegistry() external view returns (address);\n}\n"},"contracts/interfaces/IRevest.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\ninterface IRevest {\n    event FNFTTimeLockMinted(\n        address indexed asset,\n        address indexed from,\n        uint indexed fnftId,\n        uint endTime,\n        uint[] quantities,\n        FNFTConfig fnftConfig\n    );\n\n    event FNFTValueLockMinted(\n        address indexed asset,\n        address indexed from,\n        uint indexed fnftId,\n        address compareTo,\n        address oracleDispatch,\n        uint[] quantities,\n        FNFTConfig fnftConfig\n    );\n\n    event FNFTAddressLockMinted(\n        address indexed asset,\n        address indexed from,\n        uint indexed fnftId,\n        address trigger,\n        uint[] quantities,\n        FNFTConfig fnftConfig\n    );\n\n    event FNFTWithdrawn(\n        address indexed from,\n        uint indexed fnftId,\n        uint indexed quantity\n    );\n\n    event FNFTSplit(\n        address indexed from,\n        uint[] indexed newFNFTId,\n        uint[] indexed proportions,\n        uint quantity\n    );\n\n    event FNFTUnlocked(\n        address indexed from,\n        uint indexed fnftId\n    );\n\n    event FNFTMaturityExtended(\n        address indexed from,\n        uint indexed fnftId,\n        uint indexed newExtendedTime\n    );\n\n    event FNFTAddionalDeposited(\n        address indexed from,\n        uint indexed newFNFTId,\n        uint indexed quantity,\n        uint amount\n    );\n\n    struct FNFTConfig {\n        address asset; // The token being stored\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\n        uint depositAmount; // How many tokens\n        uint depositMul; // Deposit multiplier\n        uint split; // Number of splits remaining\n        uint depositStopTime; //\n        bool maturityExtension; // Maturity extensions remaining\n        bool isMulti; //\n        bool nontransferrable; // False by default (transferrable) //\n    }\n\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\n    struct TokenTracker {\n        uint lastBalance;\n        uint lastMul;\n    }\n\n    enum LockType {\n        DoesNotExist,\n        TimeLock,\n        ValueLock,\n        AddressLock\n    }\n\n    struct LockParam {\n        address addressLock;\n        uint timeLockExpiry;\n        LockType lockType;\n        ValueLock valueLock;\n    }\n\n    struct Lock {\n        address addressLock;\n        LockType lockType;\n        ValueLock valueLock;\n        uint timeLockExpiry;\n        uint creationTime;\n        bool unlocked;\n    }\n\n    struct ValueLock {\n        address asset;\n        address compareTo;\n        address oracle;\n        uint unlockValue;\n        bool unlockRisingEdge;\n    }\n\n    function mintTimeLock(\n        uint endTime,\n        address[] memory recipients,\n        uint[] memory quantities,\n        IRevest.FNFTConfig memory fnftConfig\n    ) external payable returns (uint);\n\n    function mintValueLock(\n        address primaryAsset,\n        address compareTo,\n        uint unlockValue,\n        bool unlockRisingEdge,\n        address oracleDispatch,\n        address[] memory recipients,\n        uint[] memory quantities,\n        IRevest.FNFTConfig memory fnftConfig\n    ) external payable returns (uint);\n\n    function mintAddressLock(\n        address trigger,\n        bytes memory arguments,\n        address[] memory recipients,\n        uint[] memory quantities,\n        IRevest.FNFTConfig memory fnftConfig\n    ) external payable returns (uint);\n\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\n\n    function unlockFNFT(uint tokenUID) external;\n\n    function splitFNFT(\n        uint fnftId,\n        uint[] memory proportions,\n        uint quantity\n    ) external returns (uint[] memory newFNFTIds);\n\n    function depositAdditionalToFNFT(\n        uint fnftId,\n        uint amount,\n        uint quantity\n    ) external returns (uint);\n\n    function extendFNFTMaturity(\n        uint fnftId,\n        uint endTime\n    ) external returns (uint);\n\n    function setFlatWeiFee(uint wethFee) external;\n\n    function setERC20Fee(uint erc20) external;\n\n    function getFlatWeiFee() external view returns (uint);\n\n    function getERC20Fee() external view returns (uint);\n\n\n}\n"},"contracts/interfaces/IRewards.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >= 0.8.0;\n\ninterface IRewards{\n    struct EarnedData {\n        address token;\n        uint256 amount;\n    }\n    \n    function initialize(uint256 _pid, bool _startActive) external;\n    function addReward(address _rewardsToken, address _distributor) external;\n    function approveRewardDistributor(\n        address _rewardsToken,\n        address _distributor,\n        bool _approved\n    ) external;\n    function deposit(address _owner, uint256 _amount) external;\n    function withdraw(address _owner, uint256 _amount) external;\n    function getReward(address _forward) external;\n    function notifyRewardAmount(address _rewardsToken, uint256 _reward) external;\n    function balanceOf(address account) external view returns (uint256);\n    function claimableRewards(address _account) external view returns(EarnedData[] memory userRewards);\n    function rewardTokens(uint256 _rid) external view returns (address);\n    function rewardTokenLength() external view returns(uint256);\n    function active() external view returns(bool);\n}\n"},"contracts/interfaces/IRewardsHandler.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\ninterface IRewardsHandler {\n\n    struct UserBalance {\n        uint allocPoint; // Allocation points\n        uint lastMul;\n    }\n\n    function receiveFee(address token, uint amount) external;\n\n    function updateLPShares(uint fnftId, uint newShares) external;\n\n    function updateBasicShares(uint fnftId, uint newShares) external;\n\n    function getAllocPoint(uint fnftId, address token, bool isBasic) external view returns (uint);\n\n    function claimRewards(uint fnftId, address caller) external returns (uint);\n\n    function setStakingContract(address stake) external;\n\n    function getRewards(uint fnftId, address token) external view returns (uint);\n}\n"},"contracts/interfaces/ITokenVault.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\nimport \"./IRevest.sol\";\n\ninterface ITokenVault {\n\n    function createFNFT(\n        uint fnftId,\n        IRevest.FNFTConfig memory fnftConfig,\n        uint quantity,\n        address from\n    ) external;\n\n    function withdrawToken(\n        uint fnftId,\n        uint quantity,\n        address user\n    ) external;\n\n    function depositToken(\n        uint fnftId,\n        uint amount,\n        uint quantity\n    ) external;\n\n    function cloneFNFTConfig(IRevest.FNFTConfig memory old) external returns (IRevest.FNFTConfig memory);\n\n    function mapFNFTToToken(\n        uint fnftId,\n        IRevest.FNFTConfig memory fnftConfig\n    ) external;\n\n    function handleMultipleDeposits(\n        uint fnftId,\n        uint newFNFTId,\n        uint amount\n    ) external;\n\n    function splitFNFT(\n        uint fnftId,\n        uint[] memory newFNFTIds,\n        uint[] memory proportions,\n        uint quantity\n    ) external;\n\n    function getFNFT(uint fnftId) external view returns (IRevest.FNFTConfig memory);\n    function getFNFTCurrentValue(uint fnftId) external view returns (uint);\n    function getNontransferable(uint fnftId) external view returns (bool);\n    function getSplitsRemaining(uint fnftId) external view returns (uint);\n}\n"},"contracts/interfaces/IVotingEscrow.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity >=0.8.0;\n\nimport \"./IRegistryProvider.sol\";\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\n\n/**\n * @title Provider interface for Revest FNFTs\n */\ninterface IVotingEscrow {\n\n    struct Point {\n        int128 bias;\n        int128 slope;\n        uint ts;\n        uint blk;\n    }\n\n    function create_lock(uint _value, uint _unlock_time) external;\n\n    function increase_amount(uint _value) external;\n\n    function increase_unlock_time(uint _unlock_time) external;\n\n    function withdraw() external;\n\n    function smart_wallet_checker() external view returns (address walletCheck);\n\n    function token() external view returns (address tok);\n\n    function locked__end(address _addr) external view returns (uint lockEnd);\n\n    function balanceOf(address _addr) external view returns (uint balance);\n\n    function user_point_epoch(address _addr) external view returns (uint epoch);\n\n    function user_point_history(address _addr, uint index) external view returns (Point memory pt);\n\n}\n"},"contracts/lib/RevestHelper.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/ITokenVault.sol\";\nimport \"../interfaces/ILockManager.sol\";\nimport \"../interfaces/IRevest.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n\nlibrary RevestHelper {\n\n \n    function boolToString(bool arg) internal pure returns (string memory boolean) {\n        boolean = arg ? \"true\" : \"false\";\n    }\n\n    function getLockType(IRevest.LockType lock) internal pure returns (string memory lockType) {\n        if(lock == IRevest.LockType.TimeLock) {\n            lockType = \"Time\";\n        } \n        if(lock == IRevest.LockType.TimeLock) {\n            lockType = \"Value\";\n        }\n        if(lock == IRevest.LockType.TimeLock) {\n            lockType = \"Address\";\n        }\n    } \n\n    function getTicker(address asset) internal view returns (string memory ticker) {\n        try IERC20Metadata(asset).symbol() returns (string memory tick) {\n            ticker = tick;\n        } catch {\n            ticker = '???';\n        }\n    }\n\n    function getName(address asset) internal view returns (string memory ticker) {\n        try IERC20Metadata(asset).name() returns (string memory tick) {\n            ticker = tick;\n        } catch {\n            ticker = 'Unknown Token';\n        }\n    }\n\n    function amountToDecimal(uint amt, address asset) internal view returns (string memory decStr) {\n        uint8 decimals;\n        try IERC20Metadata(asset).decimals() returns (uint8 dec) {\n            decimals = dec;\n        } catch {\n            decimals = 18;\n        }\n        decStr = decimalString(amt, decimals);\n    }\n\n    function toString(uint _i) internal pure returns (string memory _uintAsString) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint j = _i;\n        uint len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint k = len;\n        while (_i != 0) {\n            k = k-1;\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\n            bytes1 b1 = bytes1(temp);\n            bstr[k] = b1;\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n\n    function decimalString(uint256 number, uint8 decimals) internal pure returns(string memory){\n        uint256 tenPowDecimals = 10 ** decimals;\n\n        uint256 temp = number;\n        uint8 digits;\n        uint8 numSigfigs;\n        while (temp != 0) {\n            if (numSigfigs > 0) {\n                // count all digits preceding least significant figure\n                numSigfigs++;\n            } else if (temp % 10 != 0) {\n                numSigfigs++;\n            }\n            digits++;\n            temp /= 10;\n        }\n\n        DecimalStringParams memory params;\n        if((digits - numSigfigs) >= decimals) {\n            // no decimals, ensure we preserve all trailing zeros\n            params.sigfigs = number / tenPowDecimals;\n            params.sigfigIndex = digits - decimals;\n            params.bufferLength = params.sigfigIndex;\n        } else {\n            // chop all trailing zeros for numbers with decimals\n            params.sigfigs = number / (10 ** (digits - numSigfigs));\n            if(tenPowDecimals > number){\n                // number is less tahn one\n                // in this case, there may be leading zeros after the decimal place \n                // that need to be added\n\n                // offset leading zeros by two to account for leading '0.'\n                params.zerosStartIndex = 2;\n                params.zerosEndIndex = decimals - digits + 2;\n                params.sigfigIndex = numSigfigs + params.zerosEndIndex;\n                params.bufferLength = params.sigfigIndex;\n                params.isLessThanOne = true;\n            } else {\n                // In this case, there are digits before and\n                // after the decimal place\n                params.sigfigIndex = numSigfigs + 1;\n                params.decimalIndex = digits - decimals + 1;\n            }\n        }\n        params.bufferLength = params.sigfigIndex;\n        return generateDecimalString(params);\n    }\n\n    // With modifications, the below taken \n    // from https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/NFTDescriptor.sol#L189-L231\n\n    struct DecimalStringParams {\n        // significant figures of decimal\n        uint256 sigfigs;\n        // length of decimal string\n        uint8 bufferLength;\n        // ending index for significant figures (funtion works backwards when copying sigfigs)\n        uint8 sigfigIndex;\n        // index of decimal place (0 if no decimal)\n        uint8 decimalIndex;\n        // start index for trailing/leading 0's for very small/large numbers\n        uint8 zerosStartIndex;\n        // end index for trailing/leading 0's for very small/large numbers\n        uint8 zerosEndIndex;\n        // true if decimal number is less than one\n        bool isLessThanOne;\n    }\n\n    function generateDecimalString(DecimalStringParams memory params) private pure returns (string memory) {\n        bytes memory buffer = new bytes(params.bufferLength);\n        if (params.isLessThanOne) {\n            buffer[0] = '0';\n            buffer[1] = '.';\n        }\n\n        // add leading/trailing 0's\n        for (uint256 zerosCursor = params.zerosStartIndex; zerosCursor < params.zerosEndIndex; zerosCursor++) {\n            buffer[zerosCursor] = bytes1(uint8(48));\n        }\n        // add sigfigs\n        while (params.sigfigs > 0) {\n            if (params.decimalIndex > 0 && params.sigfigIndex == params.decimalIndex) {\n                buffer[--params.sigfigIndex] = '.';\n            }\n            buffer[--params.sigfigIndex] = bytes1(uint8(uint256(48) + (params.sigfigs % 10)));\n            params.sigfigs /= 10;\n        }\n        return string(buffer);\n    }\n}"},"contracts/RevestConvexFrax.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IAddressRegistry.sol\";\nimport \"./interfaces/IOutputReceiverV3.sol\";\nimport \"./interfaces/ITokenVault.sol\";\nimport \"./interfaces/IRevest.sol\";\nimport \"./interfaces/IFNFTHandler.sol\";\nimport \"./interfaces/ILockManager.sol\";\n\nimport \"./interfaces/IFraxFarmERC20.sol\";\nimport \"./interfaces/IFraxFarmBase.sol\";\nimport \"./interfaces/IConvexWrapperV2.sol\";\nimport \"./interfaces/IRewards.sol\";\n\nimport \"./VestedEscrowSmartWallet.sol\";\n\n// OZ imports\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\n\n// Libraries\nimport \"./lib/RevestHelper.sol\";\n\ninterface ITokenVaultTracker {\n    function tokenTrackers(address token) external view returns (IRevest.TokenTracker memory);\n}\n\ninterface IWETH {\n    function deposit() external payable;\n}\n\n/**\n * @title LiquidDriver <> Revest integration for tokenizing xLQDR positions\n * @author RobAnon\n * @dev \n */\ncontract RevestLiquidDriver is IOutputReceiverV3, Ownable, ERC165 {\n    \n    using SafeERC20 for IERC20;\n\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\n\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\n\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\n\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\n\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\n\n\n    // Where to find the Revest address registry that contains info about what contracts live where\n    address public addressRegistry;\n\n    // Token used for voting escrow\n    address public constant TOKEN = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\n\n    // Template address for VE wallets\n    address public immutable TEMPLATE;\n\n    // The file which tells our frontend how to visually represent such an FNFT\n    string public METADATA = \"https://revest.mypinata.cloud/ipfs/QmRLesf7CzwLapJS3aWWM9wS9HqgvX8Z36zQhWSd1uMFmp\";\n\n    // Constant used for approval\n    uint private constant MAX_INT = 2 ** 256 - 1;\n\n    uint private constant DAY = 86400;\n\n    uint private constant MAX_LOCKUP = 2 * 365 days;\n\n    mapping (uint => bytes32) public kekIds;\n\n\n    // Initialize the contract with the needed valeus\n    constructor(address _provider) {\n        addressRegistry = _provider;\n        VestedEscrowSmartWallet wallet = new VestedEscrowSmartWallet();\n        TEMPLATE = address(wallet);\n    }\n\n    modifier onlyRevestController() {\n        require(msg.sender == IAddressRegistry(addressRegistry).getRevest(), 'Unauthorized Access!');\n        _;\n    }\n\n    modifier onlyTokenHolder(uint fnftId) {\n        IAddressRegistry reg = IAddressRegistry(addressRegistry);\n        require(IFNFTHandler(reg.getRevestFNFT()).getBalance(msg.sender, fnftId) > 0, 'E064');\n        _;\n    }\n\n    // Allows core Revest contracts to make sure this contract can do what is needed\n    // Mandatory method\n    function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IOutputReceiver).interfaceId\n            || interfaceId == type(IOutputReceiverV2).interfaceId\n            || interfaceId == type(IOutputReceiverV3).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    function lockTokens(\n        uint endTime,\n        uint amountToLock\n    ) external payable returns (uint fnftId) {    \n\n        /// Mint FNFT\n        {\n            // Initialize the Revest config object\n            IRevest.FNFTConfig memory fnftConfig;\n\n            // Want FNFT to be extendable and support multiple deposits\n            fnftConfig.isMulti = true;\n\n            fnftConfig.maturityExtension = true;\n\n            // Will result in the asset being sent back to this contract upon withdrawal\n            // Results solely in a callback\n            fnftConfig.pipeToContract = address(this);  \n\n            // Set these two arrays according to Revest specifications to say\n            // Who gets these FNFTs and how many copies of them we should create\n            address[] memory recipients = new address[](1);\n            recipients[0] = _msgSender();\n\n            uint[] memory quantities = new uint[](1);\n            quantities[0] = 1;\n\n            address revest = IAddressRegistry(addressRegistry).getRevest();\n\n            \n            fnftId = IRevest(revest).mintTimeLock(endTime, recipients, quantities, fnftConfig);\n        }\n\n        address smartWallAdd;\n        {\n            // We deploy the smart wallet\n            smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\n            VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\n\n            // Transfer the tokens from the user to this wallet\n            IERC20(CURVE_LP).safeTransferFrom(msg.sender, smartWallAdd, amountToLock);\n\n            // We deposit our funds into the wallet, store kek_id\n            kekIds[fnftId] = wallet.createLock(amountToLock, endTime, msg.sender);\n            wallet.cleanMemory();\n            emit DepositERC20OutputReceiver(msg.sender, TOKEN, amountToLock, fnftId, abi.encode(smartWallAdd));\n        }\n    }\n\n\n    function receiveRevestOutput(\n        uint fnftId,\n        address,\n        address payable caller,\n        uint\n    ) external override  {\n        \n        // Security check to make sure the Revest vault is the only contract that can call this method\n        address vault = IAddressRegistry(addressRegistry).getTokenVault();\n        require(_msgSender() == vault, 'E016');\n\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\n\n        uint balance = wallet.withdraw(kekIds[fnftId], caller);\n        wallet.cleanMemory();\n        emit WithdrawERC20OutputReceiver(caller, TOKEN, balance, fnftId, abi.encode(smartWallAdd));\n    }\n\n    // Not applicable, as these cannot be split\n    function handleFNFTRemaps(uint, uint[] memory, address, bool) external pure override {\n        require(false, 'Not applicable');\n    }\n    \n    // Allows custom parameters to be passed during withdrawals\n    // This and the proceeding method are both parts of the V2 output receiver interface\n    // and not typically necessary. For the sake of demonstration, they are included\n    function receiveSecondaryCallback(\n        uint fnftId,\n        address payable owner,\n        uint quantity,\n        IRevest.FNFTConfig memory config,\n        bytes memory args\n    ) external payable override {}\n\n    // Callback from Revest.sol to extend maturity\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external override onlyRevestController {\n        require(expiration - block.timestamp <= MAX_LOCKUP, 'Max lockup is 2 years');\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\n        wallet.increaseUnlockTime(expiration, kekIds[fnftId], caller);\n    }\n\n    /// Prerequisite: User has approved this contract to spend tokens on their behalf\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint, address caller) external override onlyRevestController {\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\n        IERC20(TOKEN).safeTransferFrom(caller, smartWallAdd, amountToDeposit);\n        wallet.increaseAmount(amountToDeposit, kekIds[fnftId], caller);\n    }\n\n    // Not applicable\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external override {}\n\n    // Claims REWARDS on user's behalf\n    function triggerOutputReceiverUpdate(\n        uint fnftId,\n        bytes memory\n    ) external override onlyTokenHolder(fnftId) {\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\n        wallet.claimRewards(msg.sender);\n    }       \n\n\n    /// Admin Functions\n\n    function setAddressRegistry(address addressRegistry_) external override onlyOwner {\n        addressRegistry = addressRegistry_;\n    }\n\n    function setMetadata(string memory _meta) external onlyOwner {\n        METADATA = _meta;\n    }\n\n    /// If funds are mistakenly sent to smart wallets, this will allow the owner to assist in rescue\n    function rescueNativeFunds() external onlyOwner {\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    /// Under no circumstances should this contract ever contain ERC-20 tokens at the end of a transaction\n    /// If it does, someone has mistakenly sent funds to the contract, and this function can rescue their tokens\n    function rescueERC20(address token) external onlyOwner {\n        uint amount = IERC20(token).balanceOf(address(this));\n        IERC20(token).safeTransfer(msg.sender, amount);\n    }\n\n    /// View Functions\n\n    function getCustomMetadata(uint) external view override returns (string memory) {\n        return METADATA;\n    }\n    \n    // Will give balance in LPs\n    function getValue(uint fnftId) public view override returns (uint) {\n        return IConvexWrapperV2(STAKING_TOKEN).totalBalanceOf(Clones.predictDeterministicAddress(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId))));\n    }\n\n    // Must always be in native token\n    function getAsset(uint) external pure override returns (address) {\n        return CURVE_LP;\n    }\n\n    function getOutputDisplayValues(uint fnftId) external view override returns (bytes memory displayData) {\n        (address[] memory tokens, uint256[] memory rewardAmounts) = earned(fnftId);\n        string[] memory rewardsDesc = new string[](rewardAmounts.length);\n        bool hasRewards = rewardAmounts.length > 0;\n        if(hasRewards) {\n            for(uint i = 0; i < tokens.length; i++) {\n                address token = tokens[i];\n                string memory par1 = string(abi.encodePacked(RevestHelper.getName(token),\": \"));\n                string memory par2 = string(abi.encodePacked(RevestHelper.amountToDecimal(rewardAmounts[i], token), \" [\", RevestHelper.getTicker(token), \"] Tokens Available\"));\n                rewardsDesc[i] = string(abi.encodePacked(par1, par2));\n            }\n        }\n        address smartWallet = getAddressForFNFT(fnftId);\n        uint maxExtension = block.timestamp / (1 days) * (1 days) + MAX_LOCKUP; //Ensures no confusion with time zones and date-selectors\n        displayData = abi.encode(smartWallet, rewardsDesc, hasRewards, maxExtension, TOKEN);\n    }\n\n    function getAddressRegistry() external view override returns (address) {\n        return addressRegistry;\n    }\n\n    function getRevest() internal view returns (IRevest) {\n        return IRevest(IAddressRegistry(addressRegistry).getRevest());\n    }\n\n    function getAddressForFNFT(uint fnftId) public view returns (address smartWallAdd) {\n        smartWallAdd = Clones.predictDeterministicAddress(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\n    }\n\n    \n    //helper function to combine earned tokens on staking contract and any tokens that are on this vault\n    function earned(uint fnftId) internal view returns (address[] memory token_addresses, uint256[] memory total_earned) {\n        //get list of reward tokens\n        address smartWallAdd = getAddressForFNFT(fnftId);\n\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\n        uint256[] memory stakedearned = IFraxFarmERC20(STAKING_ADDRESS).earned(smartWallAdd);\n        IConvexWrapperV2.EarnedData[] memory convexrewards = IConvexWrapperV2(STAKING_TOKEN).earnedView(smartWallAdd);\n\n        uint256 extraRewardsLength = IRewards(REWARDS).rewardTokenLength();\n        token_addresses = new address[](rewardTokens.length + extraRewardsLength + convexrewards.length);\n        total_earned = new uint256[](rewardTokens.length + extraRewardsLength + convexrewards.length);\n\n        //add any tokens that happen to be already claimed but sitting on the vault\n        //(ex. withdraw claiming REWARDS)\n        for(uint256 i = 0; i < rewardTokens.length; i++){\n            token_addresses[i] = rewardTokens[i];\n            total_earned[i] = stakedearned[i] + IERC20(rewardTokens[i]).balanceOf(smartWallAdd);\n        }\n\n        IRewards.EarnedData[] memory extraRewards = IRewards(REWARDS).claimableRewards(smartWallAdd);\n        for(uint256 i = 0; i < extraRewards.length; i++){\n            token_addresses[i+rewardTokens.length] = extraRewards[i].token;\n            total_earned[i+rewardTokens.length] = extraRewards[i].amount;\n        }\n\n        //add convex farm earned tokens\n        for(uint256 i = 0; i < convexrewards.length; i++){\n            token_addresses[i+rewardTokens.length+extraRewardsLength] = convexrewards[i].token;\n            total_earned[i+rewardTokens.length+extraRewardsLength] = convexrewards[i].amount;\n        }\n    }\n    \n}\n"},"contracts/VestedEscrowSmartWallet.sol":{"content":"// SPDX-License-Identifier: GNU-GPL v3.0 or later\n\nimport \"./interfaces/IFraxFarmERC20.sol\";\nimport \"./interfaces/IFraxFarmBase.sol\";\nimport \"./interfaces/IConvexWrapperV2.sol\";\nimport \"./interfaces/IRewards.sol\";\n\nimport \"./interfaces/IDistributor.sol\";\nimport \"./interfaces/IRewardsHandler.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n\npragma solidity ^0.8.0;\n\n/// @author RobAnon\ncontract VestedEscrowSmartWallet {\n\n    using SafeERC20 for IERC20;\n\n    uint private constant MAX_INT = 2 ** 256 - 1;\n\n    address private immutable MASTER;\n\n    // Hardcoded for MVP\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\n\n    address public constant FXS = 0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0;\n    address public constant CRV = 0xD533a949740bb3306d119CC777fa900bA034cd52;\n    address public constant CVX = 0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B;\n\n\n\n    constructor() {\n        MASTER = msg.sender;\n    }\n\n    modifier onlyMaster() {\n        require(msg.sender == MASTER, 'Unauthorized!');\n        _;\n    }\n\n    function createLock(uint value, uint unlockTime, address user) external onlyMaster returns (bytes32 kek_id) {\n        // Set all approvals up, don't if they're already set\n        if(IERC20(STAKING_TOKEN).allowance(address(this), STAKING_ADDRESS) != MAX_INT) {\n            IERC20(STAKING_TOKEN).approve(STAKING_ADDRESS, MAX_INT);\n        }\n        if(IERC20(CURVE_LP).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\n            IERC20(CURVE_LP).approve(STAKING_TOKEN, MAX_INT);\n        }\n        if(IERC20(CONVEX_DEPOSIT_TOKEN).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\n            IERC20(CONVEX_DEPOSIT_TOKEN).approve(STAKING_TOKEN, MAX_INT);\n        }\n\n        //deposit into wrapper\n        IConvexWrapperV2(STAKING_TOKEN).deposit(value, address(this));\n\n        //stake\n        kek_id = IFraxFarmERC20(STAKING_ADDRESS).stakeLocked(value, unlockTime - block.timestamp);\n        _checkpointRewards(user);\n    }\n\n    function increaseAmount(uint amount, bytes32 kek_id, address user) external onlyMaster {\n        if(amount > 0){\n            //deposit into wrapper\n            IConvexWrapperV2(STAKING_TOKEN).deposit(amount, address(this));\n\n            //add stake\n            IFraxFarmERC20(STAKING_ADDRESS).lockAdditional(kek_id, amount);\n        }\n        \n        //checkpoint rewards\n        _checkpointRewards(user);\n        _cleanMemory();\n    }\n\n    function increaseUnlockTime(uint unlockTime, bytes32 kek_id, address user) external onlyMaster {\n        //update time\n        IFraxFarmERC20(STAKING_ADDRESS).lockLonger(kek_id, unlockTime);\n        //checkpoint rewards\n        _checkpointRewards(user);\n        _cleanMemory();\n    }\n\n    function withdraw(bytes32 kek_id, address user) external onlyMaster returns (uint balance) {\n        // Withdraw\n        IFraxFarmERC20(STAKING_ADDRESS).withdrawLocked(kek_id, address(this));\n\n        // Unwrap\n        IConvexWrapperV2(STAKING_TOKEN).withdrawAndUnwrap(IERC20(STAKING_TOKEN).balanceOf(address(this)));\n\n        // Handle transfer\n        balance = IERC20(CURVE_LP).balanceOf(address(this));\n        IERC20(CURVE_LP).safeTransfer(user, balance);\n        _checkpointRewards(user);\n    }\n\n    function claimRewards(address user) external onlyMaster {\n        _getReward(true, user); // Since this is just a demo, falling into edge cases acceptable.\n        // Full produce will require proper edge-case handling for _getRewards\n        _cleanMemory();\n    }\n\n    /// Credit to doublesharp for the brilliant gas-saving concept\n    /// Self-destructing clone pattern\n    function cleanMemory() external onlyMaster {\n        _cleanMemory();\n    }\n\n    function _cleanMemory() internal {\n        selfdestruct(payable(MASTER));\n    }\n\n    //get reward with claim option.\n    //_claim bool is for the off chance that rewardCollectionPause is true so getReward() fails but\n    //there are tokens on this vault for cases such as withdraw() also calling claim.\n    //can also be used to rescue tokens on the vault\n    function _getReward(bool _claim, address user) internal {\n\n        //claim\n        if(_claim){\n            //claim frax farm\n            IFraxFarmERC20(STAKING_ADDRESS).getReward(address(this));\n            //claim convex farm and forward to owner\n            IConvexWrapperV2(STAKING_TOKEN).getReward(address(this), user);\n\n            //double check there have been no crv/cvx claims directly to this address\n            uint256 b = IERC20(CRV).balanceOf(address(this));\n            if(b > 0){\n                IERC20(CRV).safeTransfer(user, b);\n            }\n            b = IERC20(CVX).balanceOf(address(this));\n            if(b > 0){\n                IERC20(CVX).safeTransfer(user, b);\n            }\n        }\n\n        //process fxs fees\n        _processFxs(user);\n\n        //get list of reward tokens\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\n\n        //transfer\n        _transferTokens(rewardTokens, user);\n\n        //extra rewards\n        _processExtraRewards(user);\n    }\n\n    //checkpoint and add/remove weight to convex rewards contract\n    function _checkpointRewards(address user) internal{\n        //if rewards are active, checkpoint\n        if(IRewards(REWARDS).active()){\n            //using liquidity shares from staking contract will handle rebasing tokens correctly\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\n            //get current balance of reward contract\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\n            if(userLiq >= bal){\n                //add the difference to reward contract\n                IRewards(REWARDS).deposit(user, userLiq - bal);\n            }else{\n                //remove the difference from the reward contract\n                IRewards(REWARDS).withdraw(user, bal - userLiq);\n            }\n        }\n    }\n\n    //apply fees to FXS and send remaining to owner\n    function _processFxs(address user) internal{\n\n        // Transfer any FXS present to user\n        uint sendAmount = IERC20(FXS).balanceOf(address(this));\n        if(sendAmount > 0){\n            IERC20(FXS).transfer(user, sendAmount);\n        }\n    }\n\n    //get extra rewards\n    function _processExtraRewards(address user) internal{\n        if(IRewards(REWARDS).active()){\n            //check if there is a balance because the reward contract could have be activated later\n            //dont use _checkpointRewards since difference of 0 will still call deposit() and cost gas\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\n            if(bal == 0 && userLiq > 0){\n                //bal == 0 and liq > 0 can only happen if rewards were turned on after staking\n                IRewards(REWARDS).deposit(user,userLiq);\n            }\n            IRewards(REWARDS).getReward(user);\n        }\n    }\n\n    //transfer other reward tokens besides FXS(which needs to have fees applied)\n    function _transferTokens(address[] memory _tokens, address user) internal{\n        //transfer all tokens\n        for(uint256 i = 0; i < _tokens.length; i++){\n            if(_tokens[i] != FXS){\n                uint256 bal = IERC20(_tokens[i]).balanceOf(address(this));\n                if(bal > 0){\n                    IERC20(_tokens[i]).safeTransfer(user, bal);\n                }\n            }\n        }\n    }\n\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IConvexWrapperV2.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IConvexWrapperV2.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IFraxFarmBase.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IFraxFarmBase.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IFraxFarmERC20.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IFraxFarmERC20.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.4;\"\n--> contracts/interfaces/IFraxFarmERC20.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.4;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IFraxFarmERC20.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.4;\"\n--> contracts/interfaces/IConvexWrapperV2.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.4;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IConvexWrapperV2.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[827],"Ownable":[103]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":104,"sourceUnit":828,"src":"58:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":827,"src":"614:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"614:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"90:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":103,"linearizedBaseContracts":[103,827],"name":"Ownable","nameLocation":"603:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"644:6:0","nodeType":"VariableDeclaration","scope":103,"src":"628:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"628:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"663:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"700:13:0","nodeType":"VariableDeclaration","scope":13,"src":"684:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"731:8:0","nodeType":"VariableDeclaration","scope":13,"src":"715:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"683:57:0"},"src":"657:84:0"},{"body":{"id":22,"nodeType":"Block","src":"857:40:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"877:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"877:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"867:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"867:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"867:23:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"747:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"854:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"857:0:0"},"scope":103,"src":"843:54:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"1028:30:0","statements":[{"expression":{"id":29,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1045:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":28,"id":30,"nodeType":"Return","src":"1038:13:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"903:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":32,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"982:5:0","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"987:2:0"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32,"src":"1019:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1018:9:0"},"scope":103,"src":"973:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":45,"nodeType":"Block","src":"1167:96:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":36,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1185:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1185:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"1196:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1196:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1185:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1210:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":35,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1177:68:0"},{"id":44,"nodeType":"PlaceholderStatement","src":"1255:1:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1064:77:0","text":" @dev Throws if called by any account other than the owner."},"id":46,"name":"onlyOwner","nameLocation":"1155:9:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"1164:2:0"},"src":"1146:117:0","virtual":false,"visibility":"internal"},{"body":{"id":59,"nodeType":"Block","src":"1659:38:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1687:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1679:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:0","typeDescriptions":{}}},"id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1679:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":52,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"1669:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1669:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":58,"nodeType":"ExpressionStatement","src":"1669:21:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1269:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":60,"implemented":true,"kind":"function","modifiers":[{"id":50,"kind":"modifierInvocation","modifierName":{"id":49,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1649:9:0"},"nodeType":"ModifierInvocation","src":"1649:9:0"}],"name":"renounceOwnership","nameLocation":"1614:17:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1631:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[],"src":"1659:0:0"},"scope":103,"src":"1605:92:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":82,"nodeType":"Block","src":"1916:119:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":69,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1934:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1954:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":71,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1946:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:0","typeDescriptions":{}}},"id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1946:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1934:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1958:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":68,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1926:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1926:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77,"nodeType":"ExpressionStatement","src":"1926:73:0"},{"expression":{"arguments":[{"id":79,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2019:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":78,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2009:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2009:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2009:19:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1703:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":83,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1906:9:0"},"nodeType":"ModifierInvocation","src":"1906:9:0"}],"name":"transferOwnership","nameLocation":"1855:17:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"newOwner","nameLocation":"1881:8:0","nodeType":"VariableDeclaration","scope":83,"src":"1873:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"1873:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1872:18:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"1916:0:0"},"scope":103,"src":"1846:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":101,"nodeType":"Block","src":"2086:124:0","statements":[{"assignments":[89],"declarations":[{"constant":false,"id":89,"mutability":"mutable","name":"oldOwner","nameLocation":"2104:8:0","nodeType":"VariableDeclaration","scope":101,"src":"2096:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":88,"name":"address","nodeType":"ElementaryTypeName","src":"2096:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":91,"initialValue":{"id":90,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2115:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2096:25:0"},{"expression":{"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":92,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2131:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":93,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2140:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2131:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":95,"nodeType":"ExpressionStatement","src":"2131:17:0"},{"eventCall":{"arguments":[{"id":97,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"2184:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":98,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2194:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":96,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2163:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2163:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":100,"nodeType":"EmitStatement","src":"2158:45:0"}]},"id":102,"implemented":true,"kind":"function","modifiers":[],"name":"_setOwner","nameLocation":"2050:9:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2068:8:0","nodeType":"VariableDeclaration","scope":102,"src":"2060:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2059:18:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"2086:0:0"},"scope":103,"src":"2041:169:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":104,"src":"585:1627:0","usedErrors":[]}],"src":"33:2180:0"},"id":0},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[183]},"id":184,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"58:629:1","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"},"fullyImplemented":true,"id":183,"linearizedBaseContracts":[183],"name":"Clones","nameLocation":"696:6:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":125,"nodeType":"Block","src":"981:440:1","statements":[{"AST":{"nodeType":"YulBlock","src":"1000:348:1","statements":[{"nodeType":"YulVariableDeclaration","src":"1014:22:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1031:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1025:5:1"},"nodeType":"YulFunctionCall","src":"1025:11:1"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1018:3:1","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1056:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"1061:66:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1049:6:1"},"nodeType":"YulFunctionCall","src":"1049:79:1"},"nodeType":"YulExpressionStatement","src":"1049:79:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1152:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"1157:4:1","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1148:3:1"},"nodeType":"YulFunctionCall","src":"1148:14:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1168:4:1","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1174:14:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1164:3:1"},"nodeType":"YulFunctionCall","src":"1164:25:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1141:6:1"},"nodeType":"YulFunctionCall","src":"1141:49:1"},"nodeType":"YulExpressionStatement","src":"1141:49:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1214:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"1219:4:1","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:1"},"nodeType":"YulFunctionCall","src":"1210:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"1226:66:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1203:6:1"},"nodeType":"YulFunctionCall","src":"1203:90:1"},"nodeType":"YulExpressionStatement","src":"1203:90:1"},{"nodeType":"YulAssignment","src":"1306:32:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1325:1:1","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1328:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"1333:4:1","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1318:6:1"},"nodeType":"YulFunctionCall","src":"1318:20:1"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1306:8:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":109,"isOffset":false,"isSlot":false,"src":"1174:14:1","valueSize":1},{"declaration":112,"isOffset":false,"isSlot":false,"src":"1306:8:1","valueSize":1}],"id":114,"nodeType":"InlineAssembly","src":"991:357:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":116,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"1365:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1377:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"1377:7:1","typeDescriptions":{}}},"id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1377:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1365:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a20637265617465206661696c6564","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1389:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""},"value":"ERC1167: create failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""}],"id":115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1357:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1357:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"1357:57:1"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"709:192:1","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":126,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"915:5:1","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"implementation","nameLocation":"929:14:1","nodeType":"VariableDeclaration","scope":126,"src":"921:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"920:24:1"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"instance","nameLocation":"971:8:1","nodeType":"VariableDeclaration","scope":126,"src":"963:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"963:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"962:18:1"},"scope":183,"src":"906:515:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":147,"nodeType":"Block","src":"1898:448:1","statements":[{"AST":{"nodeType":"YulBlock","src":"1917:355:1","statements":[{"nodeType":"YulVariableDeclaration","src":"1931:22:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1948:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1942:5:1"},"nodeType":"YulFunctionCall","src":"1942:11:1"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1935:3:1","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1973:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"1978:66:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1966:6:1"},"nodeType":"YulFunctionCall","src":"1966:79:1"},"nodeType":"YulExpressionStatement","src":"1966:79:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2069:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2074:4:1","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2065:3:1"},"nodeType":"YulFunctionCall","src":"2065:14:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2085:4:1","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2091:14:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2081:3:1"},"nodeType":"YulFunctionCall","src":"2081:25:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2058:6:1"},"nodeType":"YulFunctionCall","src":"2058:49:1"},"nodeType":"YulExpressionStatement","src":"2058:49:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2131:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2136:4:1","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2127:3:1"},"nodeType":"YulFunctionCall","src":"2127:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"2143:66:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2120:6:1"},"nodeType":"YulFunctionCall","src":"2120:90:1"},"nodeType":"YulExpressionStatement","src":"2120:90:1"},{"nodeType":"YulAssignment","src":"2223:39:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2243:1:1","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2246:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2251:4:1","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2257:4:1"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2235:7:1"},"nodeType":"YulFunctionCall","src":"2235:27:1"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2223:8:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":129,"isOffset":false,"isSlot":false,"src":"2091:14:1","valueSize":1},{"declaration":134,"isOffset":false,"isSlot":false,"src":"2223:8:1","valueSize":1},{"declaration":131,"isOffset":false,"isSlot":false,"src":"2257:4:1","valueSize":1}],"id":136,"nodeType":"InlineAssembly","src":"1908:364:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":138,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"2289:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2309:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2301:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2301:7:1","typeDescriptions":{}}},"id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2301:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2289:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a2063726561746532206661696c6564","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2313:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""},"value":"ERC1167: create2 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""}],"id":137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2281:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"2281:58:1"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"1427:364:1","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":148,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"1805:18:1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"implementation","nameLocation":"1832:14:1","nodeType":"VariableDeclaration","scope":148,"src":"1824:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"1824:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"salt","nameLocation":"1856:4:1","nodeType":"VariableDeclaration","scope":148,"src":"1848:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1848:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1823:38:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"instance","nameLocation":"1888:8:1","nodeType":"VariableDeclaration","scope":148,"src":"1880:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:18:1"},"scope":183,"src":"1796:550:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":161,"nodeType":"Block","src":"2621:539:1","statements":[{"AST":{"nodeType":"YulBlock","src":"2640:514:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2654:22:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2671:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2665:5:1"},"nodeType":"YulFunctionCall","src":"2665:11:1"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2658:3:1","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2696:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2701:66:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2689:6:1"},"nodeType":"YulFunctionCall","src":"2689:79:1"},"nodeType":"YulExpressionStatement","src":"2689:79:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2792:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2797:4:1","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:1"},"nodeType":"YulFunctionCall","src":"2788:14:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2808:4:1","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2814:14:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2804:3:1"},"nodeType":"YulFunctionCall","src":"2804:25:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2781:6:1"},"nodeType":"YulFunctionCall","src":"2781:49:1"},"nodeType":"YulExpressionStatement","src":"2781:49:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2854:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2859:4:1","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2850:3:1"},"nodeType":"YulFunctionCall","src":"2850:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"2866:66:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2843:6:1"},"nodeType":"YulFunctionCall","src":"2843:90:1"},"nodeType":"YulExpressionStatement","src":"2843:90:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2957:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2962:4:1","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2953:3:1"},"nodeType":"YulFunctionCall","src":"2953:14:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2973:4:1","type":"","value":"0x60"},{"name":"deployer","nodeType":"YulIdentifier","src":"2979:8:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2969:3:1"},"nodeType":"YulFunctionCall","src":"2969:19:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2946:6:1"},"nodeType":"YulFunctionCall","src":"2946:43:1"},"nodeType":"YulExpressionStatement","src":"2946:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3013:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3018:4:1","type":"","value":"0x4c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3009:3:1"},"nodeType":"YulFunctionCall","src":"3009:14:1"},{"name":"salt","nodeType":"YulIdentifier","src":"3025:4:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3002:6:1"},"nodeType":"YulFunctionCall","src":"3002:28:1"},"nodeType":"YulExpressionStatement","src":"3002:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3054:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3059:4:1","type":"","value":"0x6c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:1"},"nodeType":"YulFunctionCall","src":"3050:14:1"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3076:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3081:4:1","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3066:9:1"},"nodeType":"YulFunctionCall","src":"3066:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3043:6:1"},"nodeType":"YulFunctionCall","src":"3043:44:1"},"nodeType":"YulExpressionStatement","src":"3043:44:1"},{"nodeType":"YulAssignment","src":"3100:44:1","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3127:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3132:4:1","type":"","value":"0x37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3123:3:1"},"nodeType":"YulFunctionCall","src":"3123:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"3139:4:1","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3113:9:1"},"nodeType":"YulFunctionCall","src":"3113:31:1"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3100:9:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":155,"isOffset":false,"isSlot":false,"src":"2979:8:1","valueSize":1},{"declaration":151,"isOffset":false,"isSlot":false,"src":"2814:14:1","valueSize":1},{"declaration":158,"isOffset":false,"isSlot":false,"src":"3100:9:1","valueSize":1},{"declaration":153,"isOffset":false,"isSlot":false,"src":"3025:4:1","valueSize":1}],"id":160,"nodeType":"InlineAssembly","src":"2631:523:1"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"2352:99:1","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":162,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"2465:27:1","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"implementation","nameLocation":"2510:14:1","nodeType":"VariableDeclaration","scope":162,"src":"2502:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"salt","nameLocation":"2542:4:1","nodeType":"VariableDeclaration","scope":162,"src":"2534:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2534:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"deployer","nameLocation":"2564:8:1","nodeType":"VariableDeclaration","scope":162,"src":"2556:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"2556:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2492:86:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"predicted","nameLocation":"2610:9:1","nodeType":"VariableDeclaration","scope":162,"src":"2602:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2601:19:1"},"scope":183,"src":"2456:704:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"3415:88:1","statements":[{"expression":{"arguments":[{"id":173,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3460:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":174,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3476:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":177,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3490:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$183","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$183","typeString":"library Clones"}],"id":176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3482:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"3482:7:1","typeDescriptions":{}}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3482:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":172,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[162,182],"referencedDeclaration":162,"src":"3432:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3432:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":171,"id":180,"nodeType":"Return","src":"3425:71:1"}]},"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"3166:99:1","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3279:27:1","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"implementation","nameLocation":"3315:14:1","nodeType":"VariableDeclaration","scope":182,"src":"3307:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":167,"mutability":"mutable","name":"salt","nameLocation":"3339:4:1","nodeType":"VariableDeclaration","scope":182,"src":"3331:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3331:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3306:38:1"},"returnParameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"predicted","nameLocation":"3400:9:1","nodeType":"VariableDeclaration","scope":182,"src":"3392:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"3392:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3391:19:1"},"scope":183,"src":"3270:233:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":184,"src":"688:2817:1","usedErrors":[]}],"src":"33:3473:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[261]},"id":262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":185,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"58:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":261,"linearizedBaseContracts":[261],"name":"IERC20","nameLocation":"139:6:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"152:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"232:11:2","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"243:2:2"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"269:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"268:9:2"},"scope":261,"src":"223:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"284:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":200,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"370:9:2","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"388:7:2","nodeType":"VariableDeclaration","scope":200,"src":"380:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:17:2"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"420:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"419:9:2"},"scope":261,"src":"361:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"435:209:2","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"658:8:2","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"recipient","nameLocation":"675:9:2","nodeType":"VariableDeclaration","scope":210,"src":"667:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"amount","nameLocation":"694:6:2","nodeType":"VariableDeclaration","scope":210,"src":"686:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"666:35:2"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":210,"src":"720:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":207,"name":"bool","nodeType":"ElementaryTypeName","src":"720:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"719:6:2"},"scope":261,"src":"649:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"732:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":220,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1010:9:2","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"owner","nameLocation":"1028:5:2","nodeType":"VariableDeclaration","scope":220,"src":"1020:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"spender","nameLocation":"1043:7:2","nodeType":"VariableDeclaration","scope":220,"src":"1035:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1019:32:2"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"1075:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1074:9:2"},"scope":261,"src":"1001:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"1090:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":230,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1746:7:2","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"spender","nameLocation":"1762:7:2","nodeType":"VariableDeclaration","scope":230,"src":"1754:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"amount","nameLocation":"1779:6:2","nodeType":"VariableDeclaration","scope":230,"src":"1771:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:33:2"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":230,"src":"1805:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":227,"name":"bool","nodeType":"ElementaryTypeName","src":"1805:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1804:6:2"},"scope":261,"src":"1737:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"1817:296:2","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2127:12:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"sender","nameLocation":"2157:6:2","nodeType":"VariableDeclaration","scope":242,"src":"2149:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"recipient","nameLocation":"2181:9:2","nodeType":"VariableDeclaration","scope":242,"src":"2173:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"amount","nameLocation":"2208:6:2","nodeType":"VariableDeclaration","scope":242,"src":"2200:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2139:81:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"2239:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"2239:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2238:6:2"},"scope":261,"src":"2118:127:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"2251:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":251,"name":"Transfer","nameLocation":"2420:8:2","nodeType":"EventDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2445:4:2","nodeType":"VariableDeclaration","scope":251,"src":"2429:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2467:2:2","nodeType":"VariableDeclaration","scope":251,"src":"2451:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"2451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2479:5:2","nodeType":"VariableDeclaration","scope":251,"src":"2471:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2471:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2428:57:2"},"src":"2414:72:2"},{"anonymous":false,"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"2492:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":260,"name":"Approval","nameLocation":"2651:8:2","nodeType":"EventDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2676:5:2","nodeType":"VariableDeclaration","scope":260,"src":"2660:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"2660:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2699:7:2","nodeType":"VariableDeclaration","scope":260,"src":"2683:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"2683:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2716:5:2","nodeType":"VariableDeclaration","scope":260,"src":"2708:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2659:63:2"},"src":"2645:78:2"}],"scope":262,"src":"129:2596:2","usedErrors":[]}],"src":"33:2693:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[261],"IERC20Metadata":[286]},"id":287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":263,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":287,"sourceUnit":262,"src":"58:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":266,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"228:6:3"},"id":267,"nodeType":"InheritanceSpecifier","src":"228:6:3"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"83:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":286,"linearizedBaseContracts":[286,261],"name":"IERC20Metadata","nameLocation":"210:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"241:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":273,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"309:4:3","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"313:2:3"},"returnParameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"339:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":270,"name":"string","nodeType":"ElementaryTypeName","src":"339:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"338:15:3"},"scope":286,"src":"300:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"360:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":279,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"430:6:3","nodeType":"FunctionDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"436:2:3"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"462:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":276,"name":"string","nodeType":"ElementaryTypeName","src":"462:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"461:15:3"},"scope":286,"src":"421:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"483:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":285,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"562:8:3","nodeType":"FunctionDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[],"src":"570:2:3"},"returnParameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"596:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":282,"name":"uint8","nodeType":"ElementaryTypeName","src":"596:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"595:7:3"},"scope":286,"src":"553:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":287,"src":"200:405:3","usedErrors":[]}],"src":"33:573:3"},"id":3},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[806],"IERC20":[261],"SafeERC20":[510]},"id":511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":288,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":262,"src":"58:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":807,"src":"82:36:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"120:457:4","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":510,"linearizedBaseContracts":[510],"name":"SafeERC20","nameLocation":"586:9:4","nodeType":"ContractDefinition","nodes":[{"id":294,"libraryName":{"id":292,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":806,"src":"608:7:4"},"nodeType":"UsingForDirective","src":"602:26:4","typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":316,"nodeType":"Block","src":"736:103:4","statements":[{"expression":{"arguments":[{"id":305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"766:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":308,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"796:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":210,"src":"796:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"796:23:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":311,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"821:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"825:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":306,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"773:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"773:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":304,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"746:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"746:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"746:86:4"}]},"id":317,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"643:12:4","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"token","nameLocation":"672:5:4","nodeType":"VariableDeclaration","scope":317,"src":"665:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},"typeName":{"id":296,"nodeType":"UserDefinedTypeName","pathNode":{"id":295,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"665:6:4"},"referencedDeclaration":261,"src":"665:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"to","nameLocation":"695:2:4","nodeType":"VariableDeclaration","scope":317,"src":"687:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"687:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"value","nameLocation":"715:5:4","nodeType":"VariableDeclaration","scope":317,"src":"707:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"707:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"655:71:4"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[],"src":"736:0:4"},"scope":510,"src":"634:205:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":342,"nodeType":"Block","src":"973:113:4","statements":[{"expression":{"arguments":[{"id":330,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1003:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":333,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1033:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":242,"src":"1033:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1033:27:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":336,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1062:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":337,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1068:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"1072:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":331,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1010:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1010:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1010:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":329,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"983:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"ExpressionStatement","src":"983:96:4"}]},"id":343,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"854:16:4","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"token","nameLocation":"887:5:4","nodeType":"VariableDeclaration","scope":343,"src":"880:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},"typeName":{"id":319,"nodeType":"UserDefinedTypeName","pathNode":{"id":318,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"880:6:4"},"referencedDeclaration":261,"src":"880:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"from","nameLocation":"910:4:4","nodeType":"VariableDeclaration","scope":343,"src":"902:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"to","nameLocation":"932:2:4","nodeType":"VariableDeclaration","scope":343,"src":"924:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"value","nameLocation":"952:5:4","nodeType":"VariableDeclaration","scope":343,"src":"944:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"870:93:4"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[],"src":"973:0:4"},"scope":510,"src":"845:241:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"1452:497:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1701:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1710:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1701:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1700:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":363,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1741:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$510","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$510","typeString":"library SafeERC20"}],"id":362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1733:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"1733:7:4","typeDescriptions":{}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1733:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":365,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1748:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":359,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1717:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":220,"src":"1717:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1717:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1760:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1717:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1716:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1700:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1776:56:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1679:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1679:163:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"1679:163:4"},{"expression":{"arguments":[{"id":375,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1872:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":378,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1902:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":230,"src":"1902:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1902:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":381,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1926:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1935:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":376,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1879:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1879:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1879:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":374,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"1852:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1852:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"ExpressionStatement","src":"1852:90:4"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"1092:249:4","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":387,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1355:11:4","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"token","nameLocation":"1383:5:4","nodeType":"VariableDeclaration","scope":387,"src":"1376:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},"typeName":{"id":346,"nodeType":"UserDefinedTypeName","pathNode":{"id":345,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"1376:6:4"},"referencedDeclaration":261,"src":"1376:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"spender","nameLocation":"1406:7:4","nodeType":"VariableDeclaration","scope":387,"src":"1398:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"1398:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"value","nameLocation":"1431:5:4","nodeType":"VariableDeclaration","scope":387,"src":"1423:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1366:76:4"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"1452:0:4"},"scope":510,"src":"1346:603:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":422,"nodeType":"Block","src":"2071:194:4","statements":[{"assignments":[398],"declarations":[{"constant":false,"id":398,"mutability":"mutable","name":"newAllowance","nameLocation":"2089:12:4","nodeType":"VariableDeclaration","scope":422,"src":"2081:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":409,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":403,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2128:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$510","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$510","typeString":"library SafeERC20"}],"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2120:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"2120:7:4","typeDescriptions":{}}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2120:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2135:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":399,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2104:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":220,"src":"2104:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2104:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2146:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2104:47:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2081:70:4"},{"expression":{"arguments":[{"id":411,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2181:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":414,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2211:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":230,"src":"2211:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2211:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":417,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2235:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":418,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2244:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":412,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2188:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2188:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2188:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":410,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2161:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"2161:97:4"}]},"id":423,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"1964:21:4","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"token","nameLocation":"2002:5:4","nodeType":"VariableDeclaration","scope":423,"src":"1995:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},"typeName":{"id":389,"nodeType":"UserDefinedTypeName","pathNode":{"id":388,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"1995:6:4"},"referencedDeclaration":261,"src":"1995:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"spender","nameLocation":"2025:7:4","nodeType":"VariableDeclaration","scope":423,"src":"2017:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"value","nameLocation":"2050:5:4","nodeType":"VariableDeclaration","scope":423,"src":"2042:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1985:76:4"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"2071:0:4"},"scope":510,"src":"1955:310:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":470,"nodeType":"Block","src":"2387:370:4","statements":[{"id":469,"nodeType":"UncheckedBlock","src":"2397:354:4","statements":[{"assignments":[434],"declarations":[{"constant":false,"id":434,"mutability":"mutable","name":"oldAllowance","nameLocation":"2429:12:4","nodeType":"VariableDeclaration","scope":469,"src":"2421:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2421:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":443,"initialValue":{"arguments":[{"arguments":[{"id":439,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2468:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$510","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$510","typeString":"library SafeERC20"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2460:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:4","typeDescriptions":{}}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":441,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2475:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":435,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2444:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":220,"src":"2444:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2444:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2421:62:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":445,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2505:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2521:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2505:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2528:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2497:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"2497:75:4"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"newAllowance","nameLocation":"2594:12:4","nodeType":"VariableDeclaration","scope":469,"src":"2586:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"2586:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":453,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2609:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2624:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2609:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2586:43:4"},{"expression":{"arguments":[{"id":458,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2663:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":461,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2693:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":230,"src":"2693:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2693:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":464,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2717:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":465,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"2726:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":459,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2670:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2670:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2670:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":457,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2643:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2643:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"ExpressionStatement","src":"2643:97:4"}]}]},"id":471,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2280:21:4","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"token","nameLocation":"2318:5:4","nodeType":"VariableDeclaration","scope":471,"src":"2311:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},"typeName":{"id":425,"nodeType":"UserDefinedTypeName","pathNode":{"id":424,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"2311:6:4"},"referencedDeclaration":261,"src":"2311:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"spender","nameLocation":"2341:7:4","nodeType":"VariableDeclaration","scope":471,"src":"2333:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"2333:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"value","nameLocation":"2366:5:4","nodeType":"VariableDeclaration","scope":471,"src":"2358:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2358:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:76:4"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"2387:0:4"},"scope":510,"src":"2271:486:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":508,"nodeType":"Block","src":"3210:636:4","statements":[{"assignments":[481],"declarations":[{"constant":false,"id":481,"mutability":"mutable","name":"returndata","nameLocation":"3572:10:4","nodeType":"VariableDeclaration","scope":508,"src":"3559:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":480,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":490,"initialValue":{"arguments":[{"id":487,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3613:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3619:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":484,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3593:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3585:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:4","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3585:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":601,"src":"3585:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3585:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3559:95:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":491,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"3668:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3668:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3688:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3668:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":507,"nodeType":"IfStatement","src":"3664:176:4","trueBody":{"id":506,"nodeType":"Block","src":"3691:149:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":498,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"3763:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3776:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":499,"name":"bool","nodeType":"ElementaryTypeName","src":"3776:4:4","typeDescriptions":{}}}],"id":501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3775:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":496,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3752:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"3752:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3752:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3784:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3744:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3744:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"ExpressionStatement","src":"3744:85:4"}]}}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"2763:372:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":509,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3149:19:4","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"token","nameLocation":"3176:5:4","nodeType":"VariableDeclaration","scope":509,"src":"3169:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"},"typeName":{"id":474,"nodeType":"UserDefinedTypeName","pathNode":{"id":473,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"3169:6:4"},"referencedDeclaration":261,"src":"3169:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"data","nameLocation":"3196:4:4","nodeType":"VariableDeclaration","scope":509,"src":"3183:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"3183:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3168:33:4"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"3210:0:4"},"scope":510,"src":"3140:706:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":511,"src":"578:3270:4","usedErrors":[]}],"src":"33:3816:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[806]},"id":807,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":512,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"58:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":806,"linearizedBaseContracts":[806],"name":"Address","nameLocation":"134:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":529,"nodeType":"Block","src":"784:311:5","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"size","nameLocation":"989:4:5","nodeType":"VariableDeclaration","scope":529,"src":"981:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":523,"nodeType":"VariableDeclarationStatement","src":"981:12:5"},{"AST":{"nodeType":"YulBlock","src":"1012:52:5","statements":[{"nodeType":"YulAssignment","src":"1026:28:5","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1046:7:5"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1034:11:5"},"nodeType":"YulFunctionCall","src":"1034:20:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1026:4:5"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":516,"isOffset":false,"isSlot":false,"src":"1046:7:5","valueSize":1},{"declaration":522,"isOffset":false,"isSlot":false,"src":"1026:4:5","valueSize":1}],"id":524,"nodeType":"InlineAssembly","src":"1003:61:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1080:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1087:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1080:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":520,"id":528,"nodeType":"Return","src":"1073:15:5"}]},"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"148:565:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":530,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"727:10:5","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"account","nameLocation":"746:7:5","nodeType":"VariableDeclaration","scope":530,"src":"738:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:17:5"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"778:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":518,"name":"bool","nodeType":"ElementaryTypeName","src":"778:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"777:6:5"},"scope":806,"src":"718:377:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":563,"nodeType":"Block","src":"2083:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":541,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2109:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$806","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$806","typeString":"library Address"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2101:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:5","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2101:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2101:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":544,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2126:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2101:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2134:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2093:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2093:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"ExpressionStatement","src":"2093:73:5"},{"assignments":[550,null],"declarations":[{"constant":false,"id":550,"mutability":"mutable","name":"success","nameLocation":"2183:7:5","nodeType":"VariableDeclaration","scope":563,"src":"2178:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":549,"name":"bool","nodeType":"ElementaryTypeName","src":"2178:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":557,"initialValue":{"arguments":[{"hexValue":"","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2226:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":551,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2196:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2196:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":553,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2218:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2196:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2196:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2177:52:5"},{"expression":{"arguments":[{"id":559,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2247:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2256:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2239:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2239:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"2239:78:5"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"1101:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":564,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2021:9:5","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"recipient","nameLocation":"2047:9:5","nodeType":"VariableDeclaration","scope":564,"src":"2031:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"2031:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"amount","nameLocation":"2066:6:5","nodeType":"VariableDeclaration","scope":564,"src":"2058:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2058:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2030:43:5"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"2083:0:5"},"scope":806,"src":"2012:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":580,"nodeType":"Block","src":"3155:84:5","statements":[{"expression":{"arguments":[{"id":575,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"3185:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3193:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3199:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":574,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[581,601],"referencedDeclaration":601,"src":"3172:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3172:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":573,"id":579,"nodeType":"Return","src":"3165:67:5"}]},"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"2330:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":581,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3075:12:5","nodeType":"FunctionDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"target","nameLocation":"3096:6:5","nodeType":"VariableDeclaration","scope":581,"src":"3088:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"3088:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"data","nameLocation":"3117:4:5","nodeType":"VariableDeclaration","scope":581,"src":"3104:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":568,"name":"bytes","nodeType":"ElementaryTypeName","src":"3104:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3087:35:5"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":581,"src":"3141:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":571,"name":"bytes","nodeType":"ElementaryTypeName","src":"3141:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3140:14:5"},"scope":806,"src":"3066:173:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"3608:76:5","statements":[{"expression":{"arguments":[{"id":594,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"3647:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"3655:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3661:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":597,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"3664:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":593,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[621,671],"referencedDeclaration":671,"src":"3625:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3625:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":592,"id":599,"nodeType":"Return","src":"3618:59:5"}]},"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"3245:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3470:12:5","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"target","nameLocation":"3500:6:5","nodeType":"VariableDeclaration","scope":601,"src":"3492:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"data","nameLocation":"3529:4:5","nodeType":"VariableDeclaration","scope":601,"src":"3516:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":585,"name":"bytes","nodeType":"ElementaryTypeName","src":"3516:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"errorMessage","nameLocation":"3557:12:5","nodeType":"VariableDeclaration","scope":601,"src":"3543:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":587,"name":"string","nodeType":"ElementaryTypeName","src":"3543:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3482:93:5"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"3594:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"3594:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3593:14:5"},"scope":806,"src":"3461:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":620,"nodeType":"Block","src":"4189:111:5","statements":[{"expression":{"arguments":[{"id":614,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4228:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4236:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4242:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":613,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[621,671],"referencedDeclaration":671,"src":"4206:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4206:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":612,"id":619,"nodeType":"Return","src":"4199:94:5"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"3690:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":621,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4055:21:5","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"target","nameLocation":"4094:6:5","nodeType":"VariableDeclaration","scope":621,"src":"4086:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4086:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"data","nameLocation":"4123:4:5","nodeType":"VariableDeclaration","scope":621,"src":"4110:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":605,"name":"bytes","nodeType":"ElementaryTypeName","src":"4110:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"value","nameLocation":"4145:5:5","nodeType":"VariableDeclaration","scope":621,"src":"4137:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4137:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4076:80:5"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"4175:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"4175:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4174:14:5"},"scope":806,"src":"4046:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":670,"nodeType":"Block","src":"4727:321:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":638,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4753:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$806","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$806","typeString":"library Address"}],"id":637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4745:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"4745:7:5","typeDescriptions":{}}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4745:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4745:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4770:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4745:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4777:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4737:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4737:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"4737:81:5"},{"expression":{"arguments":[{"arguments":[{"id":648,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4847:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":647,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4836:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4836:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4856:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4828:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4828:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"4828:60:5"},{"assignments":[654,656],"declarations":[{"constant":false,"id":654,"mutability":"mutable","name":"success","nameLocation":"4905:7:5","nodeType":"VariableDeclaration","scope":670,"src":"4900:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":653,"name":"bool","nodeType":"ElementaryTypeName","src":"4900:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"returndata","nameLocation":"4927:10:5","nodeType":"VariableDeclaration","scope":670,"src":"4914:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":655,"name":"bytes","nodeType":"ElementaryTypeName","src":"4914:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":663,"initialValue":{"arguments":[{"id":661,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4967:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":657,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4941:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4941:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4960:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4941:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4941:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4899:73:5"},{"expression":{"arguments":[{"id":665,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"5007:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":666,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5016:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":667,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"5028:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":664,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"4989:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4989:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":634,"id":669,"nodeType":"Return","src":"4982:59:5"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"4306:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":671,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4557:21:5","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"target","nameLocation":"4596:6:5","nodeType":"VariableDeclaration","scope":671,"src":"4588:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"4588:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"data","nameLocation":"4625:4:5","nodeType":"VariableDeclaration","scope":671,"src":"4612:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":625,"name":"bytes","nodeType":"ElementaryTypeName","src":"4612:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"value","nameLocation":"4647:5:5","nodeType":"VariableDeclaration","scope":671,"src":"4639:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"4639:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"errorMessage","nameLocation":"4676:12:5","nodeType":"VariableDeclaration","scope":671,"src":"4662:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":629,"name":"string","nodeType":"ElementaryTypeName","src":"4662:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4578:116:5"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":671,"src":"4713:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":632,"name":"bytes","nodeType":"ElementaryTypeName","src":"4713:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4712:14:5"},"scope":806,"src":"4548:500:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":687,"nodeType":"Block","src":"5325:97:5","statements":[{"expression":{"arguments":[{"id":682,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5361:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":683,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5369:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5375:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":681,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[688,723],"referencedDeclaration":723,"src":"5342:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5342:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":680,"id":686,"nodeType":"Return","src":"5335:80:5"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"5054:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":688,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5234:18:5","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"target","nameLocation":"5261:6:5","nodeType":"VariableDeclaration","scope":688,"src":"5253:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"5253:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"data","nameLocation":"5282:4:5","nodeType":"VariableDeclaration","scope":688,"src":"5269:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":675,"name":"bytes","nodeType":"ElementaryTypeName","src":"5269:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5252:35:5"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"5311:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":678,"name":"bytes","nodeType":"ElementaryTypeName","src":"5311:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5310:14:5"},"scope":806,"src":"5225:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"5764:229:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":702,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5793:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":701,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5782:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5782:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5802:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5774:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5774:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"5774:67:5"},{"assignments":[708,710],"declarations":[{"constant":false,"id":708,"mutability":"mutable","name":"success","nameLocation":"5858:7:5","nodeType":"VariableDeclaration","scope":722,"src":"5853:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":707,"name":"bool","nodeType":"ElementaryTypeName","src":"5853:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"returndata","nameLocation":"5880:10:5","nodeType":"VariableDeclaration","scope":722,"src":"5867:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":709,"name":"bytes","nodeType":"ElementaryTypeName","src":"5867:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[{"id":713,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"5912:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":711,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5894:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"5894:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5894:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5852:65:5"},{"expression":{"arguments":[{"id":717,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5952:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":718,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"5961:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":719,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5973:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":716,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"5934:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5934:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":699,"id":721,"nodeType":"Return","src":"5927:59:5"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"5428:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5615:18:5","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"target","nameLocation":"5651:6:5","nodeType":"VariableDeclaration","scope":723,"src":"5643:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"5643:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"data","nameLocation":"5680:4:5","nodeType":"VariableDeclaration","scope":723,"src":"5667:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":692,"name":"bytes","nodeType":"ElementaryTypeName","src":"5667:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"errorMessage","nameLocation":"5708:12:5","nodeType":"VariableDeclaration","scope":723,"src":"5694:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":694,"name":"string","nodeType":"ElementaryTypeName","src":"5694:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5633:93:5"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"5750:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"5750:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5749:14:5"},"scope":806,"src":"5606:387:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"6269:101:5","statements":[{"expression":{"arguments":[{"id":734,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6307:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":735,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6315:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6321:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":733,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[740,775],"referencedDeclaration":775,"src":"6286:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6286:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":732,"id":738,"nodeType":"Return","src":"6279:84:5"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"5999:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6181:20:5","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"target","nameLocation":"6210:6:5","nodeType":"VariableDeclaration","scope":740,"src":"6202:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"6202:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"data","nameLocation":"6231:4:5","nodeType":"VariableDeclaration","scope":740,"src":"6218:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":727,"name":"bytes","nodeType":"ElementaryTypeName","src":"6218:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6201:35:5"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"6255:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":730,"name":"bytes","nodeType":"ElementaryTypeName","src":"6255:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6254:14:5"},"scope":806,"src":"6172:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"6711:233:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":754,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"6740:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":753,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6729:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6729:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6749:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6721:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6721:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"6721:69:5"},{"assignments":[760,762],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"success","nameLocation":"6807:7:5","nodeType":"VariableDeclaration","scope":774,"src":"6802:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":759,"name":"bool","nodeType":"ElementaryTypeName","src":"6802:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"returndata","nameLocation":"6829:10:5","nodeType":"VariableDeclaration","scope":774,"src":"6816:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"6816:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":767,"initialValue":{"arguments":[{"id":765,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"6863:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":763,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"6843:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"6843:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6843:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6801:67:5"},{"expression":{"arguments":[{"id":769,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6903:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":770,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"6912:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":771,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6924:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":768,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"6885:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6885:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":751,"id":773,"nodeType":"Return","src":"6878:59:5"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"6376:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6565:20:5","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"target","nameLocation":"6603:6:5","nodeType":"VariableDeclaration","scope":775,"src":"6595:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"6595:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"data","nameLocation":"6632:4:5","nodeType":"VariableDeclaration","scope":775,"src":"6619:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":744,"name":"bytes","nodeType":"ElementaryTypeName","src":"6619:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"errorMessage","nameLocation":"6660:12:5","nodeType":"VariableDeclaration","scope":775,"src":"6646:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":746,"name":"string","nodeType":"ElementaryTypeName","src":"6646:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6585:93:5"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":775,"src":"6697:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"6697:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6696:14:5"},"scope":806,"src":"6556:388:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"7110:532:5","statements":[{"condition":{"id":786,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7124:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":802,"nodeType":"Block","src":"7181:455:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":790,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7265:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7265:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7265:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":800,"nodeType":"Block","src":"7573:53:5","statements":[{"expression":{"arguments":[{"id":797,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7598:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":796,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7591:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7591:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"ExpressionStatement","src":"7591:20:5"}]},"id":801,"nodeType":"IfStatement","src":"7261:365:5","trueBody":{"id":795,"nodeType":"Block","src":"7288:279:5","statements":[{"AST":{"nodeType":"YulBlock","src":"7408:145:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7430:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7459:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7453:5:5"},"nodeType":"YulFunctionCall","src":"7453:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7434:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7502:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7506:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7498:3:5"},"nodeType":"YulFunctionCall","src":"7498:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7519:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7491:6:5"},"nodeType":"YulFunctionCall","src":"7491:44:5"},"nodeType":"YulExpressionStatement","src":"7491:44:5"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":779,"isOffset":false,"isSlot":false,"src":"7459:10:5","valueSize":1},{"declaration":779,"isOffset":false,"isSlot":false,"src":"7506:10:5","valueSize":1}],"id":794,"nodeType":"InlineAssembly","src":"7399:154:5"}]}}]},"id":803,"nodeType":"IfStatement","src":"7120:516:5","trueBody":{"id":789,"nodeType":"Block","src":"7133:42:5","statements":[{"expression":{"id":787,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7154:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":785,"id":788,"nodeType":"Return","src":"7147:17:5"}]}}]},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCallResult","nameLocation":"6959:17:5","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"success","nameLocation":"6991:7:5","nodeType":"VariableDeclaration","scope":805,"src":"6986:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":776,"name":"bool","nodeType":"ElementaryTypeName","src":"6986:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"returndata","nameLocation":"7021:10:5","nodeType":"VariableDeclaration","scope":805,"src":"7008:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":778,"name":"bytes","nodeType":"ElementaryTypeName","src":"7008:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"errorMessage","nameLocation":"7055:12:5","nodeType":"VariableDeclaration","scope":805,"src":"7041:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":780,"name":"string","nodeType":"ElementaryTypeName","src":"7041:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6976:97:5"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":805,"src":"7096:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"7096:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7095:14:5"},"scope":806,"src":"6950:692:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":807,"src":"126:7518:5","usedErrors":[]}],"src":"33:7612:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[827]},"id":828,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":808,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:6"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":827,"linearizedBaseContracts":[827],"name":"Context","nameLocation":"572:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":816,"nodeType":"Block","src":"648:34:6","statements":[{"expression":{"expression":{"id":813,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"665:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"665:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":812,"id":815,"nodeType":"Return","src":"658:17:6"}]},"id":817,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"595:10:6","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"605:2:6"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":817,"src":"639:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"638:9:6"},"scope":827,"src":"586:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"755:32:6","statements":[{"expression":{"expression":{"id":822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"772:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"772:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":821,"id":824,"nodeType":"Return","src":"765:15:6"}]},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"697:8:6","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"705:2:6"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"739:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":819,"name":"bytes","nodeType":"ElementaryTypeName","src":"739:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"738:16:6"},"scope":827,"src":"688:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":828,"src":"554:235:6","usedErrors":[]}],"src":"33:757:6"},"id":6},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[851],"IERC165":[863]},"id":852,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":829,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":830,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":852,"sourceUnit":864,"src":"58:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":832,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":863,"src":"688:7:7"},"id":833,"nodeType":"InheritanceSpecifier","src":"688:7:7"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"83:576:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":851,"linearizedBaseContracts":[851,863],"name":"ERC165","nameLocation":"678:6:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[862],"body":{"id":849,"nodeType":"Block","src":"854:64:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"871:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":844,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"891:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$863_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$863_$","typeString":"type(contract IERC165)"}],"id":843,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"886:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"886:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$863","typeString":"type(contract IERC165)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"886:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"871:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":841,"id":848,"nodeType":"Return","src":"864:47:7"}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"702:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":850,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:7","nodeType":"FunctionDefinition","overrides":{"id":838,"nodeType":"OverrideSpecifier","overrides":[],"src":"830:8:7"},"parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:7","nodeType":"VariableDeclaration","scope":850,"src":"790:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":835,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:7"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"848:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":839,"name":"bool","nodeType":"ElementaryTypeName","src":"848:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"847:6:7"},"scope":851,"src":"763:155:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":852,"src":"660:260:7","usedErrors":[]}],"src":"33:888:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[863]},"id":864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":853,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"58:279:8","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":863,"linearizedBaseContracts":[863],"name":"IERC165","nameLocation":"348:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"362:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":862,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"716:17:8","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"interfaceId","nameLocation":"741:11:8","nodeType":"VariableDeclaration","scope":862,"src":"734:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":856,"name":"bytes4","nodeType":"ElementaryTypeName","src":"734:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"733:20:8"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"777:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":859,"name":"bool","nodeType":"ElementaryTypeName","src":"777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"776:6:8"},"scope":863,"src":"707:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":864,"src":"338:447:8","usedErrors":[]}],"src":"33:753:8"},"id":8},"contracts/RevestConvexFrax.sol":{"ast":{"absolutePath":"contracts/RevestConvexFrax.sol","exportedSymbols":{"Address":[806],"Clones":[183],"Context":[827],"ERC165":[851],"IAddressRegistry":[2821],"IConvexWrapperV2":[2925],"IDistributor":[2995],"IERC165":[863],"IERC20":[261],"IERC20Metadata":[286],"IFNFTHandler":[3083],"IFraxFarmBase":[3138],"IFraxFarmERC20":[3372],"ILockManager":[3440],"IOutputReceiver":[3489],"IOutputReceiverV2":[3531],"IOutputReceiverV3":[3648],"IRegistryProvider":[3661],"IRevest":[3947],"IRewards":[4037],"IRewardsHandler":[4100],"ITokenVault":[4202],"ITokenVaultTracker":[892],"IWETH":[896],"Ownable":[103],"RevestHelper":[4848],"RevestLiquidDriver":[2022],"SafeERC20":[510],"VestedEscrowSmartWallet":[2687]},"id":2023,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":865,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"51:23:9"},{"absolutePath":"contracts/interfaces/IAddressRegistry.sol","file":"./interfaces/IAddressRegistry.sol","id":866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":2822,"src":"76:43:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IOutputReceiverV3.sol","file":"./interfaces/IOutputReceiverV3.sol","id":867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":3649,"src":"120:44:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ITokenVault.sol","file":"./interfaces/ITokenVault.sol","id":868,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":4203,"src":"165:38:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRevest.sol","file":"./interfaces/IRevest.sol","id":869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":3948,"src":"204:34:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IFNFTHandler.sol","file":"./interfaces/IFNFTHandler.sol","id":870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":3084,"src":"239:39:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILockManager.sol","file":"./interfaces/ILockManager.sol","id":871,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":3441,"src":"279:39:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IFraxFarmERC20.sol","file":"./interfaces/IFraxFarmERC20.sol","id":872,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":3373,"src":"320:41:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IFraxFarmBase.sol","file":"./interfaces/IFraxFarmBase.sol","id":873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":3139,"src":"362:40:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IConvexWrapperV2.sol","file":"./interfaces/IConvexWrapperV2.sol","id":874,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":2926,"src":"403:43:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewards.sol","file":"./interfaces/IRewards.sol","id":875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":4038,"src":"447:35:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/VestedEscrowSmartWallet.sol","file":"./VestedEscrowSmartWallet.sol","id":876,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":2688,"src":"484:39:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":262,"src":"539:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":878,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":287,"src":"596:75:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":879,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":852,"src":"672:64:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":880,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":511,"src":"737:65:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":104,"src":"803:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":882,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":184,"src":"856:50:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/RevestHelper.sol","file":"./lib/RevestHelper.sol","id":883,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2023,"sourceUnit":4849,"src":"921:32:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":892,"linearizedBaseContracts":[892],"name":"ITokenVaultTracker","nameLocation":"965:18:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"628645c0","id":891,"implemented":false,"kind":"function","modifiers":[],"name":"tokenTrackers","nameLocation":"999:13:9","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"token","nameLocation":"1021:5:9","nodeType":"VariableDeclaration","scope":891,"src":"1013:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"1013:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1012:15:9"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"1051:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTracker_$3781_memory_ptr","typeString":"struct IRevest.TokenTracker"},"typeName":{"id":888,"nodeType":"UserDefinedTypeName","pathNode":{"id":887,"name":"IRevest.TokenTracker","nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"1051:20:9"},"referencedDeclaration":3781,"src":"1051:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTracker_$3781_storage_ptr","typeString":"struct IRevest.TokenTracker"}},"visibility":"internal"}],"src":"1050:29:9"},"scope":892,"src":"990:90:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2023,"src":"955:127:9","usedErrors":[]},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":896,"linearizedBaseContracts":[896],"name":"IWETH","nameLocation":"1094:5:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":895,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1115:7:9","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"1122:2:9"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"1141:0:9"},"scope":896,"src":"1106:36:9","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2023,"src":"1084:60:9","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":898,"name":"IOutputReceiverV3","nodeType":"IdentifierPath","referencedDeclaration":3648,"src":"1289:17:9"},"id":899,"nodeType":"InheritanceSpecifier","src":"1289:17:9"},{"baseName":{"id":900,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":103,"src":"1308:7:9"},"id":901,"nodeType":"InheritanceSpecifier","src":"1308:7:9"},{"baseName":{"id":902,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":851,"src":"1317:6:9"},"id":903,"nodeType":"InheritanceSpecifier","src":"1317:6:9"}],"contractDependencies":[2687],"contractKind":"contract","documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"1146:111:9","text":" @title LiquidDriver <> Revest integration for tokenizing xLQDR positions\n @author RobAnon\n @dev "},"fullyImplemented":true,"id":2022,"linearizedBaseContracts":[2022,851,103,827,3648,3531,3489,863,3661],"name":"RevestLiquidDriver","nameLocation":"1267:18:9","nodeType":"ContractDefinition","nodes":[{"id":907,"libraryName":{"id":904,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"1341:9:9"},"nodeType":"UsingForDirective","src":"1335:27:9","typeName":{"id":906,"nodeType":"UserDefinedTypeName","pathNode":{"id":905,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"1355:6:9"},"referencedDeclaration":261,"src":"1355:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"f443faeb","id":910,"mutability":"constant","name":"CURVE_LP","nameLocation":"1392:8:9","nodeType":"VariableDeclaration","scope":2022,"src":"1368:77:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"1368:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307866343332313139333543373831443563613161343164323034314633393742384137333636433741","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1403:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xf43211935C781D5ca1a41d2041F397B8A7366C7A"},"visibility":"public"},{"constant":true,"functionSelector":"0479d644","id":913,"mutability":"constant","name":"STAKING_TOKEN","nameLocation":"1476:13:9","nodeType":"VariableDeclaration","scope":2022,"src":"1452:82:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834363539643566463633413145314544443644354444394343333135653036336339353934376430","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1492:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0"},"visibility":"public"},{"constant":true,"functionSelector":"8c20570b","id":916,"mutability":"constant","name":"STAKING_ADDRESS","nameLocation":"1584:15:9","nodeType":"VariableDeclaration","scope":2022,"src":"1560:84:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307861353337643634383831623834666166666239416534336339353145456246333638623731636441","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1602:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xa537d64881b84faffb9Ae43c951EEbF368b71cdA"},"visibility":"public"},{"constant":true,"functionSelector":"109bbf05","id":919,"mutability":"constant","name":"CONVEX_DEPOSIT_TOKEN","nameLocation":"1675:20:9","nodeType":"VariableDeclaration","scope":2022,"src":"1651:89:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307843303765353430446246656343463734333145413234373845623238413033393138633143333045","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1698:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E"},"visibility":"public"},{"constant":true,"functionSelector":"c0034e0c","id":922,"mutability":"constant","name":"REWARDS","nameLocation":"1771:7:9","nodeType":"VariableDeclaration","scope":2022,"src":"1747:76:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833343635423832313132373835303561653943366235626130384543443961663935314136383936","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3465B8211278505ae9C6b5ba08ECD9af951A6896"},"visibility":"public"},{"constant":false,"functionSelector":"f3ad65f4","id":924,"mutability":"mutable","name":"addressRegistry","nameLocation":"1946:15:9","nodeType":"VariableDeclaration","scope":2022,"src":"1931:30:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"1931:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"82bfefc8","id":927,"mutability":"constant","name":"TOKEN","nameLocation":"2028:5:9","nodeType":"VariableDeclaration","scope":2022,"src":"2004:74:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"2004:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307866343332313139333543373831443563613161343164323034314633393742384137333636433741","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2036:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xf43211935C781D5ca1a41d2041F397B8A7366C7A"},"visibility":"public"},{"constant":false,"functionSelector":"8bfd9174","id":929,"mutability":"immutable","name":"TEMPLATE","nameLocation":"2149:8:9","nodeType":"VariableDeclaration","scope":2022,"src":"2124:33:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"2124:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"38c3df07","id":932,"mutability":"mutable","name":"METADATA","nameLocation":"2258:8:9","nodeType":"VariableDeclaration","scope":2022,"src":"2244:108:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":930,"name":"string","nodeType":"ElementaryTypeName","src":"2244:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"68747470733a2f2f7265766573742e6d7970696e6174612e636c6f75642f697066732f516d524c65736637437a774c61704a53336157574d397753394871677658385a33367a516857536431754d466d70","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2269:83:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ab237339f92724b0a4f4ddb53a2c6efe32c1e64adeaf8d02337ccfa5cccbe63","typeString":"literal_string \"https://revest.mypinata.cloud/ipfs/QmRLesf7CzwLapJS3aWWM9wS9HqgvX8Z36zQhWSd1uMFmp\""},"value":"https://revest.mypinata.cloud/ipfs/QmRLesf7CzwLapJS3aWWM9wS9HqgvX8Z36zQhWSd1uMFmp"},"visibility":"public"},{"constant":true,"id":939,"mutability":"constant","name":"MAX_INT","nameLocation":"2415:7:9","nodeType":"VariableDeclaration","scope":2022,"src":"2393:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint","nodeType":"ElementaryTypeName","src":"2393:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2425:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323536","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2430:3:9","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"2425:8:9","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2425:12:9","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}},"visibility":"private"},{"constant":true,"id":942,"mutability":"constant","name":"DAY","nameLocation":"2466:3:9","nodeType":"VariableDeclaration","scope":2022,"src":"2444:33:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint","nodeType":"ElementaryTypeName","src":"2444:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3836343030","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:5:9","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"visibility":"private"},{"constant":true,"id":947,"mutability":"constant","name":"MAX_LOCKUP","nameLocation":"2506:10:9","nodeType":"VariableDeclaration","scope":2022,"src":"2484:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint","nodeType":"ElementaryTypeName","src":"2484:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_63072000_by_1","typeString":"int_const 63072000"},"id":946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2519:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2523:8:9","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"2519:12:9","typeDescriptions":{"typeIdentifier":"t_rational_63072000_by_1","typeString":"int_const 63072000"}},"visibility":"private"},{"constant":false,"functionSelector":"4c238851","id":951,"mutability":"mutable","name":"kekIds","nameLocation":"2571:6:9","nodeType":"VariableDeclaration","scope":2022,"src":"2538:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":950,"keyType":{"id":948,"name":"uint","nodeType":"ElementaryTypeName","src":"2547:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2538:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueType":{"id":949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2555:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"body":{"id":975,"nodeType":"Block","src":"2670:152:9","statements":[{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":956,"name":"addressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"2680:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":957,"name":"_provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2698:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2680:27:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":959,"nodeType":"ExpressionStatement","src":"2680:27:9"},{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"wallet","nameLocation":"2741:6:9","nodeType":"VariableDeclaration","scope":975,"src":"2717:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"},"typeName":{"id":961,"nodeType":"UserDefinedTypeName","pathNode":{"id":960,"name":"VestedEscrowSmartWallet","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"2717:23:9"},"referencedDeclaration":2687,"src":"2717:23:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"visibility":"internal"}],"id":967,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2750:27:9","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_VestedEscrowSmartWallet_$2687_$","typeString":"function () returns (contract VestedEscrowSmartWallet)"},"typeName":{"id":964,"nodeType":"UserDefinedTypeName","pathNode":{"id":963,"name":"VestedEscrowSmartWallet","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"2754:23:9"},"referencedDeclaration":2687,"src":"2754:23:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"nodeType":"VariableDeclarationStatement","src":"2717:62:9"},{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":968,"name":"TEMPLATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"2789:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":971,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2808:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2800:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"2800:7:9","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2789:26:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":974,"nodeType":"ExpressionStatement","src":"2789:26:9"}]},"id":976,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"_provider","nameLocation":"2659:9:9","nodeType":"VariableDeclaration","scope":976,"src":"2651:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2650:19:9"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[],"src":"2670:0:9"},"scope":2022,"src":"2639:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":991,"nodeType":"Block","src":"2860:120:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2878:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2878:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":982,"name":"addressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"2909:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":981,"name":"IAddressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"2892:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAddressRegistry_$2821_$","typeString":"type(contract IAddressRegistry)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2892:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAddressRegistry_$2821","typeString":"contract IAddressRegistry"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getRevest","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"2892:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2892:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2878:59:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a65642041636365737321","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2939:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_760a1e64bec12b2abe45c38b6154155372bcdc8e8a725e7d20a01af9513a7e5a","typeString":"literal_string \"Unauthorized Access!\""},"value":"Unauthorized Access!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_760a1e64bec12b2abe45c38b6154155372bcdc8e8a725e7d20a01af9513a7e5a","typeString":"literal_string \"Unauthorized Access!\""}],"id":978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2870:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2870:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"ExpressionStatement","src":"2870:92:9"},{"id":990,"nodeType":"PlaceholderStatement","src":"2972:1:9"}]},"id":992,"name":"onlyRevestController","nameLocation":"2837:20:9","nodeType":"ModifierDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[],"src":"2857:2:9"},"src":"2828:152:9","virtual":false,"visibility":"internal"},{"body":{"id":1020,"nodeType":"Block","src":"3024:179:9","statements":[{"assignments":[998],"declarations":[{"constant":false,"id":998,"mutability":"mutable","name":"reg","nameLocation":"3051:3:9","nodeType":"VariableDeclaration","scope":1020,"src":"3034:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressRegistry_$2821","typeString":"contract IAddressRegistry"},"typeName":{"id":997,"nodeType":"UserDefinedTypeName","pathNode":{"id":996,"name":"IAddressRegistry","nodeType":"IdentifierPath","referencedDeclaration":2821,"src":"3034:16:9"},"referencedDeclaration":2821,"src":"3034:16:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressRegistry_$2821","typeString":"contract IAddressRegistry"}},"visibility":"internal"}],"id":1002,"initialValue":{"arguments":[{"id":1000,"name":"addressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3074:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"IAddressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"3057:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAddressRegistry_$2821_$","typeString":"type(contract IAddressRegistry)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3057:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAddressRegistry_$2821","typeString":"contract IAddressRegistry"}},"nodeType":"VariableDeclarationStatement","src":"3034:56:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3153:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3153:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1012,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"3165:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1005,"name":"reg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3121:3:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressRegistry_$2821","typeString":"contract IAddressRegistry"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getRevestFNFT","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"3121:17:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3121:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1004,"name":"IFNFTHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"3108:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFNFTHandler_$3083_$","typeString":"type(contract IFNFTHandler)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3108:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFNFTHandler_$3083","typeString":"contract IFNFTHandler"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBalance","nodeType":"MemberAccess","referencedDeclaration":3070,"src":"3108:44:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3108:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3108:68:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45303634","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3178:6:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab10996ac65df5c99a1fd43bc616cdf767a8e223f9df1cf8ebb449b799335032","typeString":"literal_string \"E064\""},"value":"E064"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab10996ac65df5c99a1fd43bc616cdf767a8e223f9df1cf8ebb449b799335032","typeString":"literal_string \"E064\""}],"id":1003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3100:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3100:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"3100:85:9"},{"id":1019,"nodeType":"PlaceholderStatement","src":"3195:1:9"}]},"id":1021,"name":"onlyTokenHolder","nameLocation":"2995:15:9","nodeType":"ModifierDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"fnftId","nameLocation":"3016:6:9","nodeType":"VariableDeclaration","scope":1021,"src":"3011:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint","nodeType":"ElementaryTypeName","src":"3011:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3010:13:9"},"src":"2986:217:9","virtual":false,"visibility":"internal"},{"baseFunctions":[850,862],"body":{"id":1057,"nodeType":"Block","src":"3418:256:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1031,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3435:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1033,"name":"IOutputReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"3455:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOutputReceiver_$3489_$","typeString":"type(contract IOutputReceiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IOutputReceiver_$3489_$","typeString":"type(contract IOutputReceiver)"}],"id":1032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3450:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IOutputReceiver_$3489","typeString":"type(contract IOutputReceiver)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"3450:33:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3435:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3499:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1039,"name":"IOutputReceiverV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"3519:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOutputReceiverV2_$3531_$","typeString":"type(contract IOutputReceiverV2)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IOutputReceiverV2_$3531_$","typeString":"type(contract IOutputReceiverV2)"}],"id":1038,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3514:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3514:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IOutputReceiverV2_$3531","typeString":"type(contract IOutputReceiverV2)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"3514:35:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3499:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3435:114:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3565:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1046,"name":"IOutputReceiverV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"3585:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOutputReceiverV3_$3648_$","typeString":"type(contract IOutputReceiverV3)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IOutputReceiverV3_$3648_$","typeString":"type(contract IOutputReceiverV3)"}],"id":1045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3580:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3580:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IOutputReceiverV3_$3648","typeString":"type(contract IOutputReceiverV3)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"3580:35:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3565:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3435:180:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1053,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3655:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1051,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3631:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RevestLiquidDriver_$2022_$","typeString":"type(contract super RevestLiquidDriver)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":850,"src":"3631:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3631:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3435:232:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1030,"id":1056,"nodeType":"Return","src":"3428:239:9"}]},"functionSelector":"01ffc9a7","id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3327:17:9","nodeType":"FunctionDefinition","overrides":{"id":1027,"nodeType":"OverrideSpecifier","overrides":[{"id":1025,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":851,"src":"3386:6:9"},{"id":1026,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":863,"src":"3394:7:9"}],"src":"3377:25:9"},"parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"interfaceId","nameLocation":"3352:11:9","nodeType":"VariableDeclaration","scope":1058,"src":"3345:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1022,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3345:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3344:20:9"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"3412:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1028,"name":"bool","nodeType":"ElementaryTypeName","src":"3412:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3411:6:9"},"scope":2022,"src":"3318:356:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1214,"nodeType":"Block","src":"3794:1770:9","statements":[{"documentation":"Mint FNFT","id":1149,"nodeType":"Block","src":"3831:1000:9","statements":[{"assignments":[1071],"declarations":[{"constant":false,"id":1071,"mutability":"mutable","name":"fnftConfig","nameLocation":"3922:10:9","nodeType":"VariableDeclaration","scope":1149,"src":"3896:36:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":1070,"nodeType":"UserDefinedTypeName","pathNode":{"id":1069,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"3896:18:9"},"referencedDeclaration":3776,"src":"3896:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"id":1072,"nodeType":"VariableDeclarationStatement","src":"3896:36:9"},{"expression":{"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1073,"name":"fnftConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4019:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig memory"}},"id":1075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isMulti","nodeType":"MemberAccess","referencedDeclaration":3773,"src":"4019:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4040:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4019:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1078,"nodeType":"ExpressionStatement","src":"4019:25:9"},{"expression":{"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1079,"name":"fnftConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4059:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig memory"}},"id":1081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"maturityExtension","nodeType":"MemberAccess","referencedDeclaration":3771,"src":"4059:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4090:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4059:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1084,"nodeType":"ExpressionStatement","src":"4059:35:9"},{"expression":{"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1085,"name":"fnftConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4242:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig memory"}},"id":1087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pipeToContract","nodeType":"MemberAccess","referencedDeclaration":3761,"src":"4242:25:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1090,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_RevestLiquidDriver_$2022","typeString":"contract RevestLiquidDriver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RevestLiquidDriver_$2022","typeString":"contract RevestLiquidDriver"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:9","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4270:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4242:41:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1093,"nodeType":"ExpressionStatement","src":"4242:41:9"},{"assignments":[1098],"declarations":[{"constant":false,"id":1098,"mutability":"mutable","name":"recipients","nameLocation":"4476:10:9","nodeType":"VariableDeclaration","scope":1149,"src":"4459:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1097,"nodeType":"ArrayTypeName","src":"4459:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1104,"initialValue":{"arguments":[{"hexValue":"31","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4503:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4489:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"4493:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1100,"nodeType":"ArrayTypeName","src":"4493:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4489:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4459:46:9"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1105,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"4519:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1107,"indexExpression":{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4519:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1108,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"4535:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4535:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4519:28:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1111,"nodeType":"ExpressionStatement","src":"4519:28:9"},{"assignments":[1116],"declarations":[{"constant":false,"id":1116,"mutability":"mutable","name":"quantities","nameLocation":"4576:10:9","nodeType":"VariableDeclaration","scope":1149,"src":"4562:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1114,"name":"uint","nodeType":"ElementaryTypeName","src":"4562:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ArrayTypeName","src":"4562:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1122,"initialValue":{"arguments":[{"hexValue":"31","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4600:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4589:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1117,"name":"uint","nodeType":"ElementaryTypeName","src":"4593:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1118,"nodeType":"ArrayTypeName","src":"4593:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4589:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4562:40:9"},{"expression":{"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1123,"name":"quantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4616:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1125,"indexExpression":{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4627:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4616:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4632:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4616:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1128,"nodeType":"ExpressionStatement","src":"4616:17:9"},{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"revest","nameLocation":"4656:6:9","nodeType":"VariableDeclaration","scope":1149,"src":"4648:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1136,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1132,"name":"addressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"4682:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1131,"name":"IAddressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"4665:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAddressRegistry_$2821_$","typeString":"type(contract IAddressRegistry)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4665:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAddressRegistry_$2821","typeString":"contract IAddressRegistry"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getRevest","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"4665:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4665:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4648:62:9"},{"expression":{"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1137,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"4738:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1142,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"4776:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1143,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"4785:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1144,"name":"quantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4797:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1145,"name":"fnftConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4809:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig memory"}],"expression":{"arguments":[{"id":1139,"name":"revest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4755:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1138,"name":"IRevest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"4747:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRevest_$3947_$","typeString":"type(contract IRevest)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4747:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRevest_$3947","typeString":"contract IRevest"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mintTimeLock","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"4747:28:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_FNFTConfig_$3776_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address[] memory,uint256[] memory,struct IRevest.FNFTConfig memory) payable external returns (uint256)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4747:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4738:82:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1148,"nodeType":"ExpressionStatement","src":"4738:82:9"}]},{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"smartWallAdd","nameLocation":"4849:12:9","nodeType":"VariableDeclaration","scope":1214,"src":"4841:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"4841:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1152,"nodeType":"VariableDeclarationStatement","src":"4841:20:9"},{"id":1213,"nodeType":"Block","src":"4871:687:9","statements":[{"expression":{"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1153,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4927:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1156,"name":"TEMPLATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"4968:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1160,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4999:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5006:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1158,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4988:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4988:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4988:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1157,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4978:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4978:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1154,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"4942:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$183_$","typeString":"type(library Clones)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cloneDeterministic","nodeType":"MemberAccess","referencedDeclaration":148,"src":"4942:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) returns (address)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4942:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4927:88:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1166,"nodeType":"ExpressionStatement","src":"4927:88:9"},{"assignments":[1169],"declarations":[{"constant":false,"id":1169,"mutability":"mutable","name":"wallet","nameLocation":"5053:6:9","nodeType":"VariableDeclaration","scope":1213,"src":"5029:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"},"typeName":{"id":1168,"nodeType":"UserDefinedTypeName","pathNode":{"id":1167,"name":"VestedEscrowSmartWallet","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"5029:23:9"},"referencedDeclaration":2687,"src":"5029:23:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"visibility":"internal"}],"id":1173,"initialValue":{"arguments":[{"id":1171,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5086:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1170,"name":"VestedEscrowSmartWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5062:23:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VestedEscrowSmartWallet_$2687_$","typeString":"type(contract VestedEscrowSmartWallet)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5062:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"nodeType":"VariableDeclarationStatement","src":"5029:70:9"},{"expression":{"arguments":[{"expression":{"id":1178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5212:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5212:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5224:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1181,"name":"amountToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5238:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1175,"name":"CURVE_LP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"5185:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1174,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5178:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5178:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":343,"src":"5178:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$261_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5178:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"5178:73:9"},{"expression":{"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1184,"name":"kekIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"5332:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":1186,"indexExpression":{"id":1185,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5339:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5332:14:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1189,"name":"amountToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5367:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1190,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"5381:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5390:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5390:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1187,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5349:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createLock","nodeType":"MemberAccess","referencedDeclaration":2198,"src":"5349:17:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$_t_bytes32_$","typeString":"function (uint256,uint256,address) external returns (bytes32)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5349:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5332:69:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1195,"nodeType":"ExpressionStatement","src":"5332:69:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1196,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5415:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cleanMemory","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"5415:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5415:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1200,"nodeType":"ExpressionStatement","src":"5415:20:9"},{"eventCall":{"arguments":[{"expression":{"id":1202,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5481:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5481:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1204,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5493:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1205,"name":"amountToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5500:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1206,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5514:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1209,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5533:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5522:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5522:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5522:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1201,"name":"DepositERC20OutputReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"5454:26:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5454:93:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"EmitStatement","src":"5449:98:9"}]}]},"functionSelector":"89158d8e","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"lockTokens","nameLocation":"3689:10:9","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"endTime","nameLocation":"3714:7:9","nodeType":"VariableDeclaration","scope":1215,"src":"3709:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint","nodeType":"ElementaryTypeName","src":"3709:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"amountToLock","nameLocation":"3736:12:9","nodeType":"VariableDeclaration","scope":1215,"src":"3731:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint","nodeType":"ElementaryTypeName","src":"3731:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3699:55:9"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"fnftId","nameLocation":"3786:6:9","nodeType":"VariableDeclaration","scope":1215,"src":"3781:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint","nodeType":"ElementaryTypeName","src":"3781:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3780:13:9"},"scope":2022,"src":"3680:1884:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3460],"body":{"id":1290,"nodeType":"Block","src":"5709:624:9","statements":[{"assignments":[1228],"declarations":[{"constant":false,"id":1228,"mutability":"mutable","name":"vault","nameLocation":"5839:5:9","nodeType":"VariableDeclaration","scope":1290,"src":"5831:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"5831:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1234,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1230,"name":"addressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"5864:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1229,"name":"IAddressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"5847:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAddressRegistry_$2821_$","typeString":"type(contract IAddressRegistry)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5847:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAddressRegistry_$2821","typeString":"contract IAddressRegistry"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTokenVault","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"5847:47:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5847:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5831:65:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1236,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"5914:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5914:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1238,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"5930:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5914:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45303136","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5937:6:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c143d1811330319e6c2041c116672d668e927038b5ab21cc328926db9c9ddf0d","typeString":"literal_string \"E016\""},"value":"E016"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c143d1811330319e6c2041c116672d668e927038b5ab21cc328926db9c9ddf0d","typeString":"literal_string \"E016\""}],"id":1235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5906:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5906:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"ExpressionStatement","src":"5906:38:9"},{"assignments":[1244],"declarations":[{"constant":false,"id":1244,"mutability":"mutable","name":"smartWallAdd","nameLocation":"5963:12:9","nodeType":"VariableDeclaration","scope":1290,"src":"5955:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"5955:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1256,"initialValue":{"arguments":[{"id":1247,"name":"TEMPLATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"6004:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1251,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"6035:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1252,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6042:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1249,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6024:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6024:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6024:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1248,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6014:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6014:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1245,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"5978:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$183_$","typeString":"type(library Clones)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cloneDeterministic","nodeType":"MemberAccess","referencedDeclaration":148,"src":"5978:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) returns (address)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5978:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5955:96:9"},{"assignments":[1259],"declarations":[{"constant":false,"id":1259,"mutability":"mutable","name":"wallet","nameLocation":"6085:6:9","nodeType":"VariableDeclaration","scope":1290,"src":"6061:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"},"typeName":{"id":1258,"nodeType":"UserDefinedTypeName","pathNode":{"id":1257,"name":"VestedEscrowSmartWallet","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"6061:23:9"},"referencedDeclaration":2687,"src":"6061:23:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"visibility":"internal"}],"id":1263,"initialValue":{"arguments":[{"id":1261,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"6118:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1260,"name":"VestedEscrowSmartWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"6094:23:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VestedEscrowSmartWallet_$2687_$","typeString":"type(contract VestedEscrowSmartWallet)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6094:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"nodeType":"VariableDeclarationStatement","src":"6061:70:9"},{"assignments":[1265],"declarations":[{"constant":false,"id":1265,"mutability":"mutable","name":"balance","nameLocation":"6147:7:9","nodeType":"VariableDeclaration","scope":1290,"src":"6142:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint","nodeType":"ElementaryTypeName","src":"6142:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1273,"initialValue":{"arguments":[{"baseExpression":{"id":1268,"name":"kekIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6173:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":1270,"indexExpression":{"id":1269,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6180:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6173:14:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1271,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6189:6:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":1266,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6157:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":2330,"src":"6157:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$_t_uint256_$","typeString":"function (bytes32,address) external returns (uint256)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6157:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6142:54:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1274,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6206:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cleanMemory","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"6206:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6206:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1278,"nodeType":"ExpressionStatement","src":"6206:20:9"},{"eventCall":{"arguments":[{"id":1280,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6269:6:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1281,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"6277:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1282,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"6284:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1283,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6293:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1286,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"6312:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1284,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6301:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6301:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6301:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1279,"name":"WithdrawERC20OutputReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"6241:27:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6241:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"EmitStatement","src":"6236:90:9"}]},"functionSelector":"aca1c665","id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"receiveRevestOutput","nameLocation":"5580:19:9","nodeType":"FunctionDefinition","overrides":{"id":1225,"nodeType":"OverrideSpecifier","overrides":[],"src":"5699:8:9"},"parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"fnftId","nameLocation":"5614:6:9","nodeType":"VariableDeclaration","scope":1291,"src":"5609:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint","nodeType":"ElementaryTypeName","src":"5609:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"5630:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"caller","nameLocation":"5663:6:9","nodeType":"VariableDeclaration","scope":1291,"src":"5647:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"5647:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"5679:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint","nodeType":"ElementaryTypeName","src":"5679:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5599:90:9"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"5709:0:9"},"scope":2022,"src":"5571:762:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3530],"body":{"id":1309,"nodeType":"Block","src":"6472:49:9","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6490:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"4e6f74206170706c696361626c65","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6497:16:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_002c3a0d8c9ff41ec8db058c98ae237ebd5201bae49e6ac9b3a3d5192c67a209","typeString":"literal_string \"Not applicable\""},"value":"Not applicable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_002c3a0d8c9ff41ec8db058c98ae237ebd5201bae49e6ac9b3a3d5192c67a209","typeString":"literal_string \"Not applicable\""}],"id":1304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6482:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6482:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"6482:32:9"}]},"functionSelector":"644bf7d8","id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"handleFNFTRemaps","nameLocation":"6396:16:9","nodeType":"FunctionDefinition","overrides":{"id":1302,"nodeType":"OverrideSpecifier","overrides":[],"src":"6463:8:9"},"parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"6413:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint","nodeType":"ElementaryTypeName","src":"6413:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"6419:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1294,"name":"uint","nodeType":"ElementaryTypeName","src":"6419:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1295,"nodeType":"ArrayTypeName","src":"6419:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"6434:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"6434:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"6443:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1299,"name":"bool","nodeType":"ElementaryTypeName","src":"6443:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6412:36:9"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[],"src":"6472:0:9"},"scope":2022,"src":"6387:134:9","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[3511],"body":{"id":1325,"nodeType":"Block","src":"6979:2:9","statements":[]},"functionSelector":"f48fe050","id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"receiveSecondaryCallback","nameLocation":"6778:24:9","nodeType":"FunctionDefinition","overrides":{"id":1323,"nodeType":"OverrideSpecifier","overrides":[],"src":"6970:8:9"},"parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"fnftId","nameLocation":"6817:6:9","nodeType":"VariableDeclaration","scope":1326,"src":"6812:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint","nodeType":"ElementaryTypeName","src":"6812:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"owner","nameLocation":"6849:5:9","nodeType":"VariableDeclaration","scope":1326,"src":"6833:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"6833:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"quantity","nameLocation":"6869:8:9","nodeType":"VariableDeclaration","scope":1326,"src":"6864:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint","nodeType":"ElementaryTypeName","src":"6864:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"config","nameLocation":"6913:6:9","nodeType":"VariableDeclaration","scope":1326,"src":"6887:32:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":1318,"nodeType":"UserDefinedTypeName","pathNode":{"id":1317,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"6887:18:9"},"referencedDeclaration":3776,"src":"6887:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"args","nameLocation":"6942:4:9","nodeType":"VariableDeclaration","scope":1326,"src":"6929:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"6929:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6802:150:9"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"6979:0:9"},"scope":2022,"src":"6769:212:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3624],"body":{"id":1379,"nodeType":"Block","src":"7157:350:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"7175:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1340,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7188:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"7188:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7175:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1343,"name":"MAX_LOCKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7207:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7175:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178206c6f636b75702069732032207965617273","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7219:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed67044774f9d6b6cd164d216a6fee68661b2692aca050db9e926e6ea760f87a","typeString":"literal_string \"Max lockup is 2 years\""},"value":"Max lockup is 2 years"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed67044774f9d6b6cd164d216a6fee68661b2692aca050db9e926e6ea760f87a","typeString":"literal_string \"Max lockup is 2 years\""}],"id":1338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7167:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7167:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1347,"nodeType":"ExpressionStatement","src":"7167:76:9"},{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"smartWallAdd","nameLocation":"7261:12:9","nodeType":"VariableDeclaration","scope":1379,"src":"7253:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1361,"initialValue":{"arguments":[{"id":1352,"name":"TEMPLATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"7302:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1356,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"7333:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1357,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"7340:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1354,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7322:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"7322:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7322:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1353,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7312:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7312:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1350,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"7276:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$183_$","typeString":"type(library Clones)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cloneDeterministic","nodeType":"MemberAccess","referencedDeclaration":148,"src":"7276:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) returns (address)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7276:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7253:96:9"},{"assignments":[1364],"declarations":[{"constant":false,"id":1364,"mutability":"mutable","name":"wallet","nameLocation":"7383:6:9","nodeType":"VariableDeclaration","scope":1379,"src":"7359:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"},"typeName":{"id":1363,"nodeType":"UserDefinedTypeName","pathNode":{"id":1362,"name":"VestedEscrowSmartWallet","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"7359:23:9"},"referencedDeclaration":2687,"src":"7359:23:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"visibility":"internal"}],"id":1368,"initialValue":{"arguments":[{"id":1366,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"7416:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"VestedEscrowSmartWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"7392:23:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VestedEscrowSmartWallet_$2687_$","typeString":"type(contract VestedEscrowSmartWallet)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7392:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"nodeType":"VariableDeclarationStatement","src":"7359:70:9"},{"expression":{"arguments":[{"id":1372,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"7465:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1373,"name":"kekIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"7477:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":1375,"indexExpression":{"id":1374,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"7484:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7477:14:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1376,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"7493:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1369,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"7439:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"increaseUnlockTime","nodeType":"MemberAccess","referencedDeclaration":2268,"src":"7439:25:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,address) external"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7439:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"ExpressionStatement","src":"7439:61:9"}]},"functionSelector":"1355f7ab","id":1380,"implemented":true,"kind":"function","modifiers":[{"id":1336,"kind":"modifierInvocation","modifierName":{"id":1335,"name":"onlyRevestController","nodeType":"IdentifierPath","referencedDeclaration":992,"src":"7136:20:9"},"nodeType":"ModifierInvocation","src":"7136:20:9"}],"name":"handleTimelockExtensions","nameLocation":"7047:24:9","nodeType":"FunctionDefinition","overrides":{"id":1334,"nodeType":"OverrideSpecifier","overrides":[],"src":"7127:8:9"},"parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"fnftId","nameLocation":"7077:6:9","nodeType":"VariableDeclaration","scope":1380,"src":"7072:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint","nodeType":"ElementaryTypeName","src":"7072:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"expiration","nameLocation":"7090:10:9","nodeType":"VariableDeclaration","scope":1380,"src":"7085:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint","nodeType":"ElementaryTypeName","src":"7085:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"caller","nameLocation":"7110:6:9","nodeType":"VariableDeclaration","scope":1380,"src":"7102:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"7102:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7071:46:9"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"7157:0:9"},"scope":2022,"src":"7038:469:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3635],"body":{"id":1435,"nodeType":"Block","src":"7728:344:9","statements":[{"assignments":[1396],"declarations":[{"constant":false,"id":1396,"mutability":"mutable","name":"smartWallAdd","nameLocation":"7746:12:9","nodeType":"VariableDeclaration","scope":1435,"src":"7738:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"7738:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1408,"initialValue":{"arguments":[{"id":1399,"name":"TEMPLATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"7787:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1403,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"7818:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1404,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"7825:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1401,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7807:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"7807:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7807:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1400,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7797:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7797:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1397,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"7761:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$183_$","typeString":"type(library Clones)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cloneDeterministic","nodeType":"MemberAccess","referencedDeclaration":148,"src":"7761:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) returns (address)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7761:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7738:96:9"},{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"wallet","nameLocation":"7868:6:9","nodeType":"VariableDeclaration","scope":1435,"src":"7844:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"},"typeName":{"id":1410,"nodeType":"UserDefinedTypeName","pathNode":{"id":1409,"name":"VestedEscrowSmartWallet","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"7844:23:9"},"referencedDeclaration":2687,"src":"7844:23:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"visibility":"internal"}],"id":1415,"initialValue":{"arguments":[{"id":1413,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"7901:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1412,"name":"VestedEscrowSmartWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"7877:23:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VestedEscrowSmartWallet_$2687_$","typeString":"type(contract VestedEscrowSmartWallet)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7877:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"nodeType":"VariableDeclarationStatement","src":"7844:70:9"},{"expression":{"arguments":[{"id":1420,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"7955:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"7963:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1422,"name":"amountToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"7977:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1417,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"7931:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1416,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7924:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7924:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":343,"src":"7924:30:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$261_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7924:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"7924:69:9"},{"expression":{"arguments":[{"id":1428,"name":"amountToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8025:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1429,"name":"kekIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"8042:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":1431,"indexExpression":{"id":1430,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"8049:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8042:14:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1432,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"8058:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1425,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"8003:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"increaseAmount","nodeType":"MemberAccess","referencedDeclaration":2241,"src":"8003:21:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,address) external"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8003:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1434,"nodeType":"ExpressionStatement","src":"8003:62:9"}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"7513:81:9","text":"Prerequisite: User has approved this contract to spend tokens on their behalf"},"functionSelector":"1d145721","id":1436,"implemented":true,"kind":"function","modifiers":[{"id":1393,"kind":"modifierInvocation","modifierName":{"id":1392,"name":"onlyRevestController","nodeType":"IdentifierPath","referencedDeclaration":992,"src":"7707:20:9"},"nodeType":"ModifierInvocation","src":"7707:20:9"}],"name":"handleAdditionalDeposit","nameLocation":"7608:23:9","nodeType":"FunctionDefinition","overrides":{"id":1391,"nodeType":"OverrideSpecifier","overrides":[],"src":"7698:8:9"},"parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"fnftId","nameLocation":"7637:6:9","nodeType":"VariableDeclaration","scope":1436,"src":"7632:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint","nodeType":"ElementaryTypeName","src":"7632:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"amountToDeposit","nameLocation":"7650:15:9","nodeType":"VariableDeclaration","scope":1436,"src":"7645:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint","nodeType":"ElementaryTypeName","src":"7645:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1436,"src":"7667:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint","nodeType":"ElementaryTypeName","src":"7667:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"caller","nameLocation":"7681:6:9","nodeType":"VariableDeclaration","scope":1436,"src":"7673:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"7673:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7631:57:9"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"7728:0:9"},"scope":2022,"src":"7599:473:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3647],"body":{"id":1449,"nodeType":"Block","src":"8219:2:9","statements":[]},"functionSelector":"76da63f3","id":1450,"implemented":true,"kind":"function","modifiers":[],"name":"handleSplitOperation","nameLocation":"8109:20:9","nodeType":"FunctionDefinition","overrides":{"id":1447,"nodeType":"OverrideSpecifier","overrides":[],"src":"8210:8:9"},"parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"fnftId","nameLocation":"8135:6:9","nodeType":"VariableDeclaration","scope":1450,"src":"8130:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint","nodeType":"ElementaryTypeName","src":"8130:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"proportions","nameLocation":"8157:11:9","nodeType":"VariableDeclaration","scope":1450,"src":"8143:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1439,"name":"uint","nodeType":"ElementaryTypeName","src":"8143:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1440,"nodeType":"ArrayTypeName","src":"8143:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"quantity","nameLocation":"8175:8:9","nodeType":"VariableDeclaration","scope":1450,"src":"8170:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint","nodeType":"ElementaryTypeName","src":"8170:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"caller","nameLocation":"8193:6:9","nodeType":"VariableDeclaration","scope":1450,"src":"8185:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"8185:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8129:71:9"},"returnParameters":{"id":1448,"nodeType":"ParameterList","parameters":[],"src":"8219:0:9"},"scope":2022,"src":"8100:121:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3518],"body":{"id":1489,"nodeType":"Block","src":"8394:234:9","statements":[{"assignments":[1462],"declarations":[{"constant":false,"id":1462,"mutability":"mutable","name":"smartWallAdd","nameLocation":"8412:12:9","nodeType":"VariableDeclaration","scope":1489,"src":"8404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"8404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1474,"initialValue":{"arguments":[{"id":1465,"name":"TEMPLATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"8453:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1469,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"8484:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1470,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"8491:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1467,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8473:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"8473:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8473:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1466,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8463:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8463:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1463,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"8427:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$183_$","typeString":"type(library Clones)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cloneDeterministic","nodeType":"MemberAccess","referencedDeclaration":148,"src":"8427:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) returns (address)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8427:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8404:96:9"},{"assignments":[1477],"declarations":[{"constant":false,"id":1477,"mutability":"mutable","name":"wallet","nameLocation":"8534:6:9","nodeType":"VariableDeclaration","scope":1489,"src":"8510:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"},"typeName":{"id":1476,"nodeType":"UserDefinedTypeName","pathNode":{"id":1475,"name":"VestedEscrowSmartWallet","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"8510:23:9"},"referencedDeclaration":2687,"src":"8510:23:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"visibility":"internal"}],"id":1481,"initialValue":{"arguments":[{"id":1479,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"8567:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1478,"name":"VestedEscrowSmartWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"8543:23:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VestedEscrowSmartWallet_$2687_$","typeString":"type(contract VestedEscrowSmartWallet)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8543:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"nodeType":"VariableDeclarationStatement","src":"8510:70:9"},{"expression":{"arguments":[{"expression":{"id":1485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8610:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8610:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1482,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8590:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"claimRewards","nodeType":"MemberAccess","referencedDeclaration":2346,"src":"8590:19:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8590:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"8590:31:9"}]},"functionSelector":"d2551412","id":1490,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1458,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"8386:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1459,"kind":"modifierInvocation","modifierName":{"id":1457,"name":"onlyTokenHolder","nodeType":"IdentifierPath","referencedDeclaration":1021,"src":"8370:15:9"},"nodeType":"ModifierInvocation","src":"8370:23:9"}],"name":"triggerOutputReceiverUpdate","nameLocation":"8275:27:9","nodeType":"FunctionDefinition","overrides":{"id":1456,"nodeType":"OverrideSpecifier","overrides":[],"src":"8361:8:9"},"parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"fnftId","nameLocation":"8317:6:9","nodeType":"VariableDeclaration","scope":1490,"src":"8312:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint","nodeType":"ElementaryTypeName","src":"8312:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"8333:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1453,"name":"bytes","nodeType":"ElementaryTypeName","src":"8333:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8302:49:9"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[],"src":"8394:0:9"},"scope":2022,"src":"8266:362:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3655],"body":{"id":1503,"nodeType":"Block","src":"8749:51:9","statements":[{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1499,"name":"addressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"8759:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1500,"name":"addressRegistry_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"8777:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8759:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1502,"nodeType":"ExpressionStatement","src":"8759:34:9"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"8642:20:9","text":"Admin Functions"},"functionSelector":"27c7812c","id":1504,"implemented":true,"kind":"function","modifiers":[{"id":1497,"kind":"modifierInvocation","modifierName":{"id":1496,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"8739:9:9"},"nodeType":"ModifierInvocation","src":"8739:9:9"}],"name":"setAddressRegistry","nameLocation":"8676:18:9","nodeType":"FunctionDefinition","overrides":{"id":1495,"nodeType":"OverrideSpecifier","overrides":[],"src":"8730:8:9"},"parameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"addressRegistry_","nameLocation":"8703:16:9","nodeType":"VariableDeclaration","scope":1504,"src":"8695:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"8695:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8694:26:9"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8749:0:9"},"scope":2022,"src":"8667:133:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1515,"nodeType":"Block","src":"8867:33:9","statements":[{"expression":{"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1511,"name":"METADATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8877:8:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1512,"name":"_meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"8888:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8877:16:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1514,"nodeType":"ExpressionStatement","src":"8877:16:9"}]},"functionSelector":"a49a1e7d","id":1516,"implemented":true,"kind":"function","modifiers":[{"id":1509,"kind":"modifierInvocation","modifierName":{"id":1508,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"8857:9:9"},"nodeType":"ModifierInvocation","src":"8857:9:9"}],"name":"setMetadata","nameLocation":"8815:11:9","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"_meta","nameLocation":"8841:5:9","nodeType":"VariableDeclaration","scope":1516,"src":"8827:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1505,"name":"string","nodeType":"ElementaryTypeName","src":"8827:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8826:21:9"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"8867:0:9"},"scope":2022,"src":"8806:94:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1535,"nodeType":"Block","src":"9055:68:9","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":1530,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9102:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_RevestLiquidDriver_$2022","typeString":"contract RevestLiquidDriver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RevestLiquidDriver_$2022","typeString":"contract RevestLiquidDriver"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9094:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9094:7:9","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9094:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"9094:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9073:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9073:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9065:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"9065:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9065:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"9065:28:9","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9065:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1534,"nodeType":"ExpressionStatement","src":"9065:51:9"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"8906:96:9","text":"If funds are mistakenly sent to smart wallets, this will allow the owner to assist in rescue"},"functionSelector":"063c27f8","id":1536,"implemented":true,"kind":"function","modifiers":[{"id":1520,"kind":"modifierInvocation","modifierName":{"id":1519,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"9045:9:9"},"nodeType":"ModifierInvocation","src":"9045:9:9"}],"name":"rescueNativeFunds","nameLocation":"9016:17:9","nodeType":"FunctionDefinition","parameters":{"id":1518,"nodeType":"ParameterList","parameters":[],"src":"9033:2:9"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"9055:0:9"},"scope":2022,"src":"9007:116:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1565,"nodeType":"Block","src":"9404:125:9","statements":[{"assignments":[1545],"declarations":[{"constant":false,"id":1545,"mutability":"mutable","name":"amount","nameLocation":"9419:6:9","nodeType":"VariableDeclaration","scope":1565,"src":"9414:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint","nodeType":"ElementaryTypeName","src":"9414:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1555,"initialValue":{"arguments":[{"arguments":[{"id":1552,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9460:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_RevestLiquidDriver_$2022","typeString":"contract RevestLiquidDriver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RevestLiquidDriver_$2022","typeString":"contract RevestLiquidDriver"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9452:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"9452:7:9","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9452:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9435:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1546,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"9428:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9428:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":200,"src":"9428:23:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9428:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9414:52:9"},{"expression":{"arguments":[{"expression":{"id":1560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9503:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9503:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1562,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"9515:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1557,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9483:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1556,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"9476:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9476:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":317,"src":"9476:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$261_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9476:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1564,"nodeType":"ExpressionStatement","src":"9476:46:9"}]},"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"9129:215:9","text":"Under no circumstances should this contract ever contain ERC-20 tokens at the end of a transaction\n If it does, someone has mistakenly sent funds to the contract, and this function can rescue their tokens"},"functionSelector":"ccec3716","id":1566,"implemented":true,"kind":"function","modifiers":[{"id":1542,"kind":"modifierInvocation","modifierName":{"id":1541,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"9394:9:9"},"nodeType":"ModifierInvocation","src":"9394:9:9"}],"name":"rescueERC20","nameLocation":"9358:11:9","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"token","nameLocation":"9378:5:9","nodeType":"VariableDeclaration","scope":1566,"src":"9370:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"9370:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9369:15:9"},"returnParameters":{"id":1543,"nodeType":"ParameterList","parameters":[],"src":"9404:0:9"},"scope":2022,"src":"9349:180:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3467],"body":{"id":1577,"nodeType":"Block","src":"9639:32:9","statements":[{"expression":{"id":1575,"name":"METADATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9656:8:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1574,"id":1576,"nodeType":"Return","src":"9649:15:9"}]},"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"9535:19:9","text":"View Functions"},"functionSelector":"16f49e8a","id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"getCustomMetadata","nameLocation":"9568:17:9","nodeType":"FunctionDefinition","overrides":{"id":1571,"nodeType":"OverrideSpecifier","overrides":[],"src":"9606:8:9"},"parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"9586:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint","nodeType":"ElementaryTypeName","src":"9586:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:6:9"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"9624:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1572,"name":"string","nodeType":"ElementaryTypeName","src":"9624:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9623:15:9"},"scope":2022,"src":"9559:112:9","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3474],"body":{"id":1603,"nodeType":"Block","src":"9780:154:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1592,"name":"TEMPLATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"9879:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1596,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"9910:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1597,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"9917:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1594,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9899:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"9899:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9899:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1593,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9889:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9889:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1590,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9844:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$183_$","typeString":"type(library Clones)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"predictDeterministicAddress","nodeType":"MemberAccess","referencedDeclaration":182,"src":"9844:34:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) view returns (address)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9844:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1587,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"9814:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1586,"name":"IConvexWrapperV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"9797:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IConvexWrapperV2_$2925_$","typeString":"type(contract IConvexWrapperV2)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9797:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IConvexWrapperV2_$2925","typeString":"contract IConvexWrapperV2"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalBalanceOf","nodeType":"MemberAccess","referencedDeclaration":2851,"src":"9797:46:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9797:130:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1585,"id":1602,"nodeType":"Return","src":"9790:137:9"}]},"functionSelector":"0ff4c916","id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"getValue","nameLocation":"9722:8:9","nodeType":"FunctionDefinition","overrides":{"id":1582,"nodeType":"OverrideSpecifier","overrides":[],"src":"9756:8:9"},"parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"fnftId","nameLocation":"9736:6:9","nodeType":"VariableDeclaration","scope":1604,"src":"9731:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint","nodeType":"ElementaryTypeName","src":"9731:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9730:13:9"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"9774:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint","nodeType":"ElementaryTypeName","src":"9774:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9773:6:9"},"scope":2022,"src":"9713:221:9","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[3481],"body":{"id":1614,"nodeType":"Block","src":"10043:32:9","statements":[{"expression":{"id":1612,"name":"CURVE_LP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10060:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1611,"id":1613,"nodeType":"Return","src":"10053:15:9"}]},"functionSelector":"eac8f5b8","id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"getAsset","nameLocation":"9987:8:9","nodeType":"FunctionDefinition","overrides":{"id":1608,"nodeType":"OverrideSpecifier","overrides":[],"src":"10016:8:9"},"parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"9996:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint","nodeType":"ElementaryTypeName","src":"9996:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9995:6:9"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"10034:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"10034:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10033:9:9"},"scope":2022,"src":"9978:97:9","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[3488],"body":{"id":1755,"nodeType":"Block","src":"10184:996:9","statements":[{"assignments":[1627,1630],"declarations":[{"constant":false,"id":1627,"mutability":"mutable","name":"tokens","nameLocation":"10212:6:9","nodeType":"VariableDeclaration","scope":1755,"src":"10195:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"10195:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1626,"nodeType":"ArrayTypeName","src":"10195:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"rewardAmounts","nameLocation":"10237:13:9","nodeType":"VariableDeclaration","scope":1755,"src":"10220:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"10220:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1629,"nodeType":"ArrayTypeName","src":"10220:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1634,"initialValue":{"arguments":[{"id":1632,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"10261:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1631,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10254:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (address[] memory,uint256[] memory)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10254:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10194:74:9"},{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"rewardsDesc","nameLocation":"10294:11:9","nodeType":"VariableDeclaration","scope":1755,"src":"10278:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1637,"name":"string","nodeType":"ElementaryTypeName","src":"10278:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1638,"nodeType":"ArrayTypeName","src":"10278:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1646,"initialValue":{"arguments":[{"expression":{"id":1643,"name":"rewardAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"10321:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10321:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10308:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1640,"name":"string","nodeType":"ElementaryTypeName","src":"10312:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1641,"nodeType":"ArrayTypeName","src":"10312:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10308:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10278:64:9"},{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"hasRewards","nameLocation":"10357:10:9","nodeType":"VariableDeclaration","scope":1755,"src":"10352:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1647,"name":"bool","nodeType":"ElementaryTypeName","src":"10352:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1653,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1649,"name":"rewardAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"10370:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10370:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10393:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10370:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10352:42:9"},{"condition":{"id":1654,"name":"hasRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"10407:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1724,"nodeType":"IfStatement","src":"10404:482:9","trueBody":{"id":1723,"nodeType":"Block","src":"10419:467:9","statements":[{"body":{"id":1721,"nodeType":"Block","src":"10473:403:9","statements":[{"assignments":[1667],"declarations":[{"constant":false,"id":1667,"mutability":"mutable","name":"token","nameLocation":"10499:5:9","nodeType":"VariableDeclaration","scope":1721,"src":"10491:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"10491:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1671,"initialValue":{"baseExpression":{"id":1668,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"10507:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1670,"indexExpression":{"id":1669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"10514:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10507:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10491:25:9"},{"assignments":[1673],"declarations":[{"constant":false,"id":1673,"mutability":"mutable","name":"par1","nameLocation":"10548:4:9","nodeType":"VariableDeclaration","scope":1721,"src":"10534:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1672,"name":"string","nodeType":"ElementaryTypeName","src":"10534:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1685,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1680,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"10600:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1678,"name":"RevestHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"10579:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevestHelper_$4848_$","typeString":"type(library RevestHelper)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getName","nodeType":"MemberAccess","referencedDeclaration":4399,"src":"10579:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10579:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3a20","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10607:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e64009107d042bdc478cc69a5433e4573ea2e8a23a46646c0ee241e30c888e73","typeString":"literal_string \": \""},"value":": "}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_e64009107d042bdc478cc69a5433e4573ea2e8a23a46646c0ee241e30c888e73","typeString":"literal_string \": \""}],"expression":{"id":1676,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10562:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10562:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10562:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10555:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1674,"name":"string","nodeType":"ElementaryTypeName","src":"10555:6:9","typeDescriptions":{}}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10555:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"10534:79:9"},{"assignments":[1687],"declarations":[{"constant":false,"id":1687,"mutability":"mutable","name":"par2","nameLocation":"10645:4:9","nodeType":"VariableDeclaration","scope":1721,"src":"10631:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1686,"name":"string","nodeType":"ElementaryTypeName","src":"10631:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1707,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":1694,"name":"rewardAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"10705:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1696,"indexExpression":{"id":1695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"10719:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10705:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1697,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"10723:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1692,"name":"RevestHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"10676:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevestHelper_$4848_$","typeString":"type(library RevestHelper)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountToDecimal","nodeType":"MemberAccess","referencedDeclaration":4440,"src":"10676:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,address) view returns (string memory)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10676:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"205b","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10731:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_53a4b4e6ee1c8d4208b367bdf377e48fc9f3ac9d4f90fb6680d8a68397b09e8f","typeString":"literal_string \" [\""},"value":" ["},{"arguments":[{"id":1702,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"10760:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1700,"name":"RevestHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"10737:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevestHelper_$4848_$","typeString":"type(library RevestHelper)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTicker","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"10737:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10737:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"5d20546f6b656e7320417661696c61626c65","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10768:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_28256d1d7a0833d10b530a5d7ac501d039b0fc93a3f3409ebdd4d510715037b6","typeString":"literal_string \"] Tokens Available\""},"value":"] Tokens Available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_53a4b4e6ee1c8d4208b367bdf377e48fc9f3ac9d4f90fb6680d8a68397b09e8f","typeString":"literal_string \" [\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_28256d1d7a0833d10b530a5d7ac501d039b0fc93a3f3409ebdd4d510715037b6","typeString":"literal_string \"] Tokens Available\""}],"expression":{"id":1690,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10659:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10659:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10659:130:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10652:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1688,"name":"string","nodeType":"ElementaryTypeName","src":"10652:6:9","typeDescriptions":{}}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10652:138:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"10631:159:9"},{"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1708,"name":"rewardsDesc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"10808:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1710,"indexExpression":{"id":1709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"10820:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10808:14:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1715,"name":"par1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10849:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1716,"name":"par2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"10855:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1713,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10832:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10832:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10832:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10825:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1711,"name":"string","nodeType":"ElementaryTypeName","src":"10825:6:9","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10825:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10808:53:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1720,"nodeType":"ExpressionStatement","src":"10808:53:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"10449:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1660,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"10453:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10453:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10449:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"initializationExpression":{"assignments":[1656],"declarations":[{"constant":false,"id":1656,"mutability":"mutable","name":"i","nameLocation":"10442:1:9","nodeType":"VariableDeclaration","scope":1722,"src":"10437:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint","nodeType":"ElementaryTypeName","src":"10437:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1658,"initialValue":{"hexValue":"30","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10437:10:9"},"loopExpression":{"expression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10468:3:9","subExpression":{"id":1663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"10468:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1665,"nodeType":"ExpressionStatement","src":"10468:3:9"},"nodeType":"ForStatement","src":"10433:443:9"}]}},{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"smartWallet","nameLocation":"10903:11:9","nodeType":"VariableDeclaration","scope":1755,"src":"10895:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"10895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1730,"initialValue":{"arguments":[{"id":1728,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"10935:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"name":"getAddressForFNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"10917:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10917:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10895:47:9"},{"assignments":[1732],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"maxExtension","nameLocation":"10957:12:9","nodeType":"VariableDeclaration","scope":1755,"src":"10952:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint","nodeType":"ElementaryTypeName","src":"10952:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1743,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1733,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10972:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10972:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10991:6:9","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"}],"id":1736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10990:8:9","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"}},"src":"10972:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"hexValue":"31","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11002:6:9","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"}],"id":1739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11001:8:9","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"}},"src":"10972:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1741,"name":"MAX_LOCKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"11012:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10972:50:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10952:70:9"},{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"displayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"11090:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1747,"name":"smartWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"11115:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1748,"name":"rewardsDesc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"11128:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":1749,"name":"hasRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11141:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1750,"name":"maxExtension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"11153:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1751,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"11167:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1745,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11104:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"11104:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11104:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"11090:83:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1754,"nodeType":"ExpressionStatement","src":"11090:83:9"}]},"functionSelector":"8ecacb1b","id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"getOutputDisplayValues","nameLocation":"10090:22:9","nodeType":"FunctionDefinition","overrides":{"id":1619,"nodeType":"OverrideSpecifier","overrides":[],"src":"10140:8:9"},"parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"fnftId","nameLocation":"10118:6:9","nodeType":"VariableDeclaration","scope":1756,"src":"10113:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint","nodeType":"ElementaryTypeName","src":"10113:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10112:13:9"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"displayData","nameLocation":"10171:11:9","nodeType":"VariableDeclaration","scope":1756,"src":"10158:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1620,"name":"bytes","nodeType":"ElementaryTypeName","src":"10158:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10157:26:9"},"scope":2022,"src":"10081:1099:9","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3660],"body":{"id":1764,"nodeType":"Block","src":"11257:39:9","statements":[{"expression":{"id":1762,"name":"addressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11274:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1761,"id":1763,"nodeType":"Return","src":"11267:22:9"}]},"functionSelector":"8d9d6705","id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressRegistry","nameLocation":"11195:18:9","nodeType":"FunctionDefinition","overrides":{"id":1758,"nodeType":"OverrideSpecifier","overrides":[],"src":"11230:8:9"},"parameters":{"id":1757,"nodeType":"ParameterList","parameters":[],"src":"11213:2:9"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1765,"src":"11248:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"11248:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11247:9:9"},"scope":2022,"src":"11186:110:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1779,"nodeType":"Block","src":"11355:78:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1773,"name":"addressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11397:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1772,"name":"IAddressRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"11380:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAddressRegistry_$2821_$","typeString":"type(contract IAddressRegistry)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11380:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAddressRegistry_$2821","typeString":"contract IAddressRegistry"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getRevest","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"11380:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11380:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1771,"name":"IRevest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"11372:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRevest_$3947_$","typeString":"type(contract IRevest)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11372:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRevest_$3947","typeString":"contract IRevest"}},"functionReturnParameters":1770,"id":1778,"nodeType":"Return","src":"11365:61:9"}]},"id":1780,"implemented":true,"kind":"function","modifiers":[],"name":"getRevest","nameLocation":"11311:9:9","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[],"src":"11320:2:9"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"11346:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRevest_$3947","typeString":"contract IRevest"},"typeName":{"id":1768,"nodeType":"UserDefinedTypeName","pathNode":{"id":1767,"name":"IRevest","nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"11346:7:9"},"referencedDeclaration":3947,"src":"11346:7:9","typeDescriptions":{"typeIdentifier":"t_contract$_IRevest_$3947","typeString":"contract IRevest"}},"visibility":"internal"}],"src":"11345:9:9"},"scope":2022,"src":"11302:131:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"11522:114:9","statements":[{"expression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1787,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"11532:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1790,"name":"TEMPLATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"11582:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1794,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"11613:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1795,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"11620:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1792,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11602:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"11602:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11602:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1791,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11592:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11592:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1788,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"11547:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$183_$","typeString":"type(library Clones)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"predictDeterministicAddress","nodeType":"MemberAccess","referencedDeclaration":182,"src":"11547:34:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) view returns (address)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11547:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11532:97:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1800,"nodeType":"ExpressionStatement","src":"11532:97:9"}]},"functionSelector":"ba156bcb","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressForFNFT","nameLocation":"11448:17:9","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"fnftId","nameLocation":"11471:6:9","nodeType":"VariableDeclaration","scope":1802,"src":"11466:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint","nodeType":"ElementaryTypeName","src":"11466:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11465:13:9"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"smartWallAdd","nameLocation":"11508:12:9","nodeType":"VariableDeclaration","scope":1802,"src":"11500:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"11500:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11499:22:9"},"scope":2022,"src":"11439:197:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2020,"nodeType":"Block","src":"11869:1658:9","statements":[{"assignments":[1814],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"smartWallAdd","nameLocation":"11923:12:9","nodeType":"VariableDeclaration","scope":2020,"src":"11915:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"11915:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1818,"initialValue":{"arguments":[{"id":1816,"name":"fnftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"11956:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1815,"name":"getAddressForFNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"11938:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11938:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11915:48:9"},{"assignments":[1823],"declarations":[{"constant":false,"id":1823,"mutability":"mutable","name":"rewardTokens","nameLocation":"11991:12:9","nodeType":"VariableDeclaration","scope":2020,"src":"11974:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"11974:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1822,"nodeType":"ArrayTypeName","src":"11974:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1829,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1825,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"12021:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1824,"name":"IFraxFarmERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"12006:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmERC20_$3372_$","typeString":"type(contract IFraxFarmERC20)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12006:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmERC20_$3372","typeString":"contract IFraxFarmERC20"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAllRewardTokens","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"12006:50:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12006:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11974:84:9"},{"assignments":[1834],"declarations":[{"constant":false,"id":1834,"mutability":"mutable","name":"stakedearned","nameLocation":"12085:12:9","nodeType":"VariableDeclaration","scope":2020,"src":"12068:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"12068:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1833,"nodeType":"ArrayTypeName","src":"12068:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1841,"initialValue":{"arguments":[{"id":1839,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"12139:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1836,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"12115:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1835,"name":"IFraxFarmERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"12100:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmERC20_$3372_$","typeString":"type(contract IFraxFarmERC20)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12100:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmERC20_$3372","typeString":"contract IFraxFarmERC20"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"earned","nodeType":"MemberAccess","referencedDeclaration":3243,"src":"12100:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12100:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12068:84:9"},{"assignments":[1847],"declarations":[{"constant":false,"id":1847,"mutability":"mutable","name":"convexrewards","nameLocation":"12199:13:9","nodeType":"VariableDeclaration","scope":2020,"src":"12162:50:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData[]"},"typeName":{"baseType":{"id":1845,"nodeType":"UserDefinedTypeName","pathNode":{"id":1844,"name":"IConvexWrapperV2.EarnedData","nodeType":"IdentifierPath","referencedDeclaration":2827,"src":"12162:27:9"},"referencedDeclaration":2827,"src":"12162:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$2827_storage_ptr","typeString":"struct IConvexWrapperV2.EarnedData"}},"id":1846,"nodeType":"ArrayTypeName","src":"12162:29:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_storage_$dyn_storage_ptr","typeString":"struct IConvexWrapperV2.EarnedData[]"}},"visibility":"internal"}],"id":1854,"initialValue":{"arguments":[{"id":1852,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"12258:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1849,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"12232:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"IConvexWrapperV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12215:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IConvexWrapperV2_$2925_$","typeString":"type(contract IConvexWrapperV2)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12215:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IConvexWrapperV2_$2925","typeString":"contract IConvexWrapperV2"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"earnedView","nodeType":"MemberAccess","referencedDeclaration":2910,"src":"12215:42:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address) view external returns (struct IConvexWrapperV2.EarnedData memory[] memory)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12215:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12162:109:9"},{"assignments":[1856],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"extraRewardsLength","nameLocation":"12290:18:9","nodeType":"VariableDeclaration","scope":2020,"src":"12282:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1862,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1858,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"12320:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1857,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"12311:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12311:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rewardTokenLength","nodeType":"MemberAccess","referencedDeclaration":4031,"src":"12311:35:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12311:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12282:66:9"},{"expression":{"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1863,"name":"token_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"12358:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1867,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"12390:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12390:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1869,"name":"extraRewardsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"12412:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12390:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1871,"name":"convexrewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"12433:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData memory[] memory"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12433:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12390:63:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12376:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"12380:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1865,"nodeType":"ArrayTypeName","src":"12380:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12376:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"12358:96:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1876,"nodeType":"ExpressionStatement","src":"12358:96:9"},{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1877,"name":"total_earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"12464:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1881,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"12493:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12493:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1883,"name":"extraRewardsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"12515:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12493:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1885,"name":"convexrewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"12536:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData memory[] memory"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12536:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12493:63:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12479:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"12483:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ArrayTypeName","src":"12483:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12479:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"12464:93:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1890,"nodeType":"ExpressionStatement","src":"12464:93:9"},{"body":{"id":1927,"nodeType":"Block","src":"12742:158:9","statements":[{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1902,"name":"token_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"12756:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1904,"indexExpression":{"id":1903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"12772:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12756:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1905,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"12777:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1907,"indexExpression":{"id":1906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"12790:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12777:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12756:36:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1909,"nodeType":"ExpressionStatement","src":"12756:36:9"},{"expression":{"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1910,"name":"total_earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"12806:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1912,"indexExpression":{"id":1911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"12819:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12806:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1913,"name":"stakedearned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"12824:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1915,"indexExpression":{"id":1914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"12837:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12824:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1922,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"12876:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":1917,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"12849:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1919,"indexExpression":{"id":1918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"12862:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12849:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1916,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"12842:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12842:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":200,"src":"12842:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12842:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12824:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12806:83:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1926,"nodeType":"ExpressionStatement","src":"12806:83:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"12713:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1896,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"12717:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12717:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12713:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1928,"initializationExpression":{"assignments":[1892],"declarations":[{"constant":false,"id":1892,"mutability":"mutable","name":"i","nameLocation":"12706:1:9","nodeType":"VariableDeclaration","scope":1928,"src":"12698:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"12698:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1894,"initialValue":{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12710:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12698:13:9"},"loopExpression":{"expression":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12738:3:9","subExpression":{"id":1899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"12738:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1901,"nodeType":"ExpressionStatement","src":"12738:3:9"},"nodeType":"ForStatement","src":"12694:206:9"},{"assignments":[1934],"declarations":[{"constant":false,"id":1934,"mutability":"mutable","name":"extraRewards","nameLocation":"12939:12:9","nodeType":"VariableDeclaration","scope":2020,"src":"12910:41:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct IRewards.EarnedData[]"},"typeName":{"baseType":{"id":1932,"nodeType":"UserDefinedTypeName","pathNode":{"id":1931,"name":"IRewards.EarnedData","nodeType":"IdentifierPath","referencedDeclaration":3954,"src":"12910:19:9"},"referencedDeclaration":3954,"src":"12910:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$3954_storage_ptr","typeString":"struct IRewards.EarnedData"}},"id":1933,"nodeType":"ArrayTypeName","src":"12910:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$3954_storage_$dyn_storage_ptr","typeString":"struct IRewards.EarnedData[]"}},"visibility":"internal"}],"id":1941,"initialValue":{"arguments":[{"id":1939,"name":"smartWallAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"12989:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1936,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"12963:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1935,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"12954:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12954:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"claimableRewards","nodeType":"MemberAccess","referencedDeclaration":4019,"src":"12954:34:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address) view external returns (struct IRewards.EarnedData memory[] memory)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12954:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct IRewards.EarnedData memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12910:92:9"},{"body":{"id":1977,"nodeType":"Block","src":"13060:161:9","statements":[{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1953,"name":"token_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"13074:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1958,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"13090:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1955,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"13092:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13092:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13090:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13074:38:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1959,"name":"extraRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"13115:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct IRewards.EarnedData memory[] memory"}},"id":1961,"indexExpression":{"id":1960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"13128:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13115:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$3954_memory_ptr","typeString":"struct IRewards.EarnedData memory"}},"id":1962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3951,"src":"13115:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13074:62:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1964,"nodeType":"ExpressionStatement","src":"13074:62:9"},{"expression":{"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1965,"name":"total_earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"13150:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1970,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"13163:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1967,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"13165:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13165:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13163:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13150:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1971,"name":"extraRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"13188:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct IRewards.EarnedData memory[] memory"}},"id":1973,"indexExpression":{"id":1972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"13201:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13188:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$3954_memory_ptr","typeString":"struct IRewards.EarnedData memory"}},"id":1974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3953,"src":"13188:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13150:60:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1976,"nodeType":"ExpressionStatement","src":"13150:60:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"13031:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1947,"name":"extraRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"13035:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct IRewards.EarnedData memory[] memory"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13035:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13031:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1978,"initializationExpression":{"assignments":[1943],"declarations":[{"constant":false,"id":1943,"mutability":"mutable","name":"i","nameLocation":"13024:1:9","nodeType":"VariableDeclaration","scope":1978,"src":"13016:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"13016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"hexValue":"30","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13028:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13016:13:9"},"loopExpression":{"expression":{"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13056:3:9","subExpression":{"id":1950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"13056:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1952,"nodeType":"ExpressionStatement","src":"13056:3:9"},"nodeType":"ForStatement","src":"13012:209:9"},{"body":{"id":2018,"nodeType":"Block","src":"13320:201:9","statements":[{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1990,"name":"token_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"13334:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1997,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"13350:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1992,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"13352:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13352:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13350:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1995,"name":"extraRewardsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"13372:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13350:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13334:57:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1998,"name":"convexrewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"13394:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData memory[] memory"}},"id":2000,"indexExpression":{"id":1999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"13408:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13394:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$2827_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData memory"}},"id":2001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2824,"src":"13394:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13334:82:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2003,"nodeType":"ExpressionStatement","src":"13334:82:9"},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2004,"name":"total_earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"13430:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2011,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"13443:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2006,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"13445:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13445:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13443:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2009,"name":"extraRewardsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"13465:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13443:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13430:54:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2012,"name":"convexrewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"13487:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData memory[] memory"}},"id":2014,"indexExpression":{"id":2013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"13501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13487:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$2827_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData memory"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2826,"src":"13487:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13430:80:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2017,"nodeType":"ExpressionStatement","src":"13430:80:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"13290:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1984,"name":"convexrewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"13294:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData memory[] memory"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13294:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13290:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2019,"initializationExpression":{"assignments":[1980],"declarations":[{"constant":false,"id":1980,"mutability":"mutable","name":"i","nameLocation":"13283:1:9","nodeType":"VariableDeclaration","scope":2019,"src":"13275:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"13275:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1982,"initialValue":{"hexValue":"30","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13287:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13275:13:9"},"loopExpression":{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13316:3:9","subExpression":{"id":1987,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"13316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"13316:3:9"},"nodeType":"ForStatement","src":"13271:250:9"}]},"id":2021,"implemented":true,"kind":"function","modifiers":[],"name":"earned","nameLocation":"11761:6:9","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"fnftId","nameLocation":"11773:6:9","nodeType":"VariableDeclaration","scope":2021,"src":"11768:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint","nodeType":"ElementaryTypeName","src":"11768:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11767:13:9"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"token_addresses","nameLocation":"11821:15:9","nodeType":"VariableDeclaration","scope":2021,"src":"11804:32:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1806,"name":"address","nodeType":"ElementaryTypeName","src":"11804:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1807,"nodeType":"ArrayTypeName","src":"11804:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"total_earned","nameLocation":"11855:12:9","nodeType":"VariableDeclaration","scope":2021,"src":"11838:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"11838:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"nodeType":"ArrayTypeName","src":"11838:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11803:65:9"},"scope":2022,"src":"11752:1775:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2023,"src":"1258:12276:9","usedErrors":[]}],"src":"51:13484:9"},"id":9},"contracts/VestedEscrowSmartWallet.sol":{"ast":{"absolutePath":"contracts/VestedEscrowSmartWallet.sol","exportedSymbols":{"Address":[806],"IConvexWrapperV2":[2925],"IDistributor":[2995],"IERC165":[863],"IERC20":[261],"IFraxFarmBase":[3138],"IFraxFarmERC20":[3372],"IRegistryProvider":[3661],"IRewards":[4037],"IRewardsHandler":[4100],"SafeERC20":[510],"VestedEscrowSmartWallet":[2687]},"id":2688,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"absolutePath":"contracts/interfaces/IFraxFarmERC20.sol","file":"./interfaces/IFraxFarmERC20.sol","id":2024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2688,"sourceUnit":3373,"src":"51:41:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IFraxFarmBase.sol","file":"./interfaces/IFraxFarmBase.sol","id":2025,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2688,"sourceUnit":3139,"src":"93:40:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IConvexWrapperV2.sol","file":"./interfaces/IConvexWrapperV2.sol","id":2026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2688,"sourceUnit":2926,"src":"134:43:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewards.sol","file":"./interfaces/IRewards.sol","id":2027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2688,"sourceUnit":4038,"src":"178:35:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDistributor.sol","file":"./interfaces/IDistributor.sol","id":2028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2688,"sourceUnit":2996,"src":"215:39:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewardsHandler.sol","file":"./interfaces/IRewardsHandler.sol","id":2029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2688,"sourceUnit":4101,"src":"255:42:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2688,"sourceUnit":511,"src":"298:65:10","symbolAliases":[],"unitAlias":""},{"id":2031,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"366:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"391:20:10","text":"@author RobAnon"},"fullyImplemented":true,"id":2687,"linearizedBaseContracts":[2687],"name":"VestedEscrowSmartWallet","nameLocation":"420:23:10","nodeType":"ContractDefinition","nodes":[{"id":2036,"libraryName":{"id":2033,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"457:9:10"},"nodeType":"UsingForDirective","src":"451:27:10","typeName":{"id":2035,"nodeType":"UserDefinedTypeName","pathNode":{"id":2034,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"471:6:10"},"referencedDeclaration":261,"src":"471:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}}},{"constant":true,"id":2043,"mutability":"constant","name":"MAX_INT","nameLocation":"506:7:10","nodeType":"VariableDeclaration","scope":2687,"src":"484:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint","nodeType":"ElementaryTypeName","src":"484:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"516:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323536","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"521:3:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"516:8:10","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"527:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"516:12:10","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}},"visibility":"private"},{"constant":false,"id":2045,"mutability":"immutable","name":"MASTER","nameLocation":"561:6:10","nodeType":"VariableDeclaration","scope":2687,"src":"535:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"535:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"functionSelector":"f443faeb","id":2048,"mutability":"constant","name":"CURVE_LP","nameLocation":"623:8:10","nodeType":"VariableDeclaration","scope":2687,"src":"599:77:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"599:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307866343332313139333543373831443563613161343164323034314633393742384137333636433741","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"634:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xf43211935C781D5ca1a41d2041F397B8A7366C7A"},"visibility":"public"},{"constant":true,"functionSelector":"0479d644","id":2051,"mutability":"constant","name":"STAKING_TOKEN","nameLocation":"706:13:10","nodeType":"VariableDeclaration","scope":2687,"src":"682:82:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834363539643566463633413145314544443644354444394343333135653036336339353934376430","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"722:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0"},"visibility":"public"},{"constant":true,"functionSelector":"8c20570b","id":2054,"mutability":"constant","name":"STAKING_ADDRESS","nameLocation":"813:15:10","nodeType":"VariableDeclaration","scope":2687,"src":"789:84:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307861353337643634383831623834666166666239416534336339353145456246333638623731636441","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"831:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xa537d64881b84faffb9Ae43c951EEbF368b71cdA"},"visibility":"public"},{"constant":true,"functionSelector":"109bbf05","id":2057,"mutability":"constant","name":"CONVEX_DEPOSIT_TOKEN","nameLocation":"903:20:10","nodeType":"VariableDeclaration","scope":2687,"src":"879:89:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"879:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307843303765353430446246656343463734333145413234373845623238413033393138633143333045","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"926:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E"},"visibility":"public"},{"constant":true,"functionSelector":"c0034e0c","id":2060,"mutability":"constant","name":"REWARDS","nameLocation":"998:7:10","nodeType":"VariableDeclaration","scope":2687,"src":"974:76:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833343635423832313132373835303561653943366235626130384543443961663935314136383936","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1008:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3465B8211278505ae9C6b5ba08ECD9af951A6896"},"visibility":"public"},{"constant":true,"functionSelector":"200ea222","id":2063,"mutability":"constant","name":"FXS","nameLocation":"1081:3:10","nodeType":"VariableDeclaration","scope":2687,"src":"1057:72:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"1057:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833343332423641363044323343613064464361373736314237616235363435394439433936344430","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1087:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"},"visibility":"public"},{"constant":true,"functionSelector":"945c9142","id":2066,"mutability":"constant","name":"CRV","nameLocation":"1159:3:10","nodeType":"VariableDeclaration","scope":2687,"src":"1135:72:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307844353333613934393734306262333330366431313943433737376661393030624130333463643532","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD533a949740bb3306d119CC777fa900bA034cd52"},"visibility":"public"},{"constant":true,"functionSelector":"759cb53b","id":2069,"mutability":"constant","name":"CVX","nameLocation":"1237:3:10","nodeType":"VariableDeclaration","scope":2687,"src":"1213:72:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"1213:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834653346424435364344353663336537326331343033653130336234354462396461354239443242","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"},"visibility":"public"},{"body":{"id":2077,"nodeType":"Block","src":"1308:36:10","statements":[{"expression":{"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2072,"name":"MASTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1318:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1327:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1327:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1318:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2076,"nodeType":"ExpressionStatement","src":"1318:19:10"}]},"id":2078,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"1305:2:10"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[],"src":"1308:0:10"},"scope":2687,"src":"1294:50:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2089,"nodeType":"Block","src":"1372:74:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1390:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1390:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2083,"name":"MASTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1404:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1390:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a656421","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1412:15:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5019e9bb860959cdda3e1d3eb61165a2a9c9d9818183c266b0f702fe5e27928b","typeString":"literal_string \"Unauthorized!\""},"value":"Unauthorized!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5019e9bb860959cdda3e1d3eb61165a2a9c9d9818183c266b0f702fe5e27928b","typeString":"literal_string \"Unauthorized!\""}],"id":2080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1382:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1382:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2087,"nodeType":"ExpressionStatement","src":"1382:46:10"},{"id":2088,"nodeType":"PlaceholderStatement","src":"1438:1:10"}]},"id":2090,"name":"onlyMaster","nameLocation":"1359:10:10","nodeType":"ModifierDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"1369:2:10"},"src":"1350:96:10","virtual":false,"visibility":"internal"},{"body":{"id":2197,"nodeType":"Block","src":"1560:822:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2109,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1675:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1667:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:10","typeDescriptions":{}}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1667:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2111,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"1682:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2104,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1642:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2103,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1635:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":220,"src":"1635:31:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2113,"name":"MAX_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1702:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1635:74:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2124,"nodeType":"IfStatement","src":"1632:159:10","trueBody":{"id":2123,"nodeType":"Block","src":"1711:80:10","statements":[{"expression":{"arguments":[{"id":2119,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"1755:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2120,"name":"MAX_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1772:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2116,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1732:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2115,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1725:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":230,"src":"1725:29:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2122,"nodeType":"ExpressionStatement","src":"1725:55:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2131,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1838:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1830:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:10","typeDescriptions":{}}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1830:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2133,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1845:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2126,"name":"CURVE_LP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"1810:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2125,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1803:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1803:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":220,"src":"1803:26:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1803:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2135,"name":"MAX_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1863:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1803:67:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2146,"nodeType":"IfStatement","src":"1800:145:10","trueBody":{"id":2145,"nodeType":"Block","src":"1872:73:10","statements":[{"expression":{"arguments":[{"id":2141,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1911:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2142,"name":"MAX_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2138,"name":"CURVE_LP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"1893:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2137,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1886:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":230,"src":"1886:24:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2144,"nodeType":"ExpressionStatement","src":"1886:48:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2153,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2004:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1996:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"1996:7:10","typeDescriptions":{}}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1996:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2155,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2011:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2148,"name":"CONVEX_DEPOSIT_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1964:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2147,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1957:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1957:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":220,"src":"1957:38:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1957:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2157,"name":"MAX_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"2029:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1957:79:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2168,"nodeType":"IfStatement","src":"1954:169:10","trueBody":{"id":2167,"nodeType":"Block","src":"2038:85:10","statements":[{"expression":{"arguments":[{"id":2163,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2089:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2164,"name":"MAX_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"2104:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2160,"name":"CONVEX_DEPOSIT_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"2059:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2159,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2052:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2052:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":230,"src":"2052:36:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2052:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2166,"nodeType":"ExpressionStatement","src":"2052:60:10"}]}},{"expression":{"arguments":[{"id":2173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"2204:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2176,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2219:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2211:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:10","typeDescriptions":{}}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2211:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2170,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2181:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2169,"name":"IConvexWrapperV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2164:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IConvexWrapperV2_$2925_$","typeString":"type(contract IConvexWrapperV2)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2164:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IConvexWrapperV2_$2925","typeString":"contract IConvexWrapperV2"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2858,"src":"2164:39:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2164:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"2164:61:10"},{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2180,"name":"kek_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"2252:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"2305:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"2312:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2187,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2325:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2325:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2312:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2182,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"2276:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2181,"name":"IFraxFarmERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2261:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmERC20_$3372_$","typeString":"type(contract IFraxFarmERC20)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmERC20_$3372","typeString":"contract IFraxFarmERC20"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stakeLocked","nodeType":"MemberAccess","referencedDeclaration":3215,"src":"2261:43:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) external returns (bytes32)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:80:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2252:89:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2192,"nodeType":"ExpressionStatement","src":"2252:89:10"},{"expression":{"arguments":[{"id":2194,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2370:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2193,"name":"_checkpointRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"2351:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2351:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"2351:24:10"}]},"functionSelector":"3c4f8dd8","id":2198,"implemented":true,"kind":"function","modifiers":[{"id":2099,"kind":"modifierInvocation","modifierName":{"id":2098,"name":"onlyMaster","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"1524:10:10"},"nodeType":"ModifierInvocation","src":"1524:10:10"}],"name":"createLock","nameLocation":"1461:10:10","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"value","nameLocation":"1477:5:10","nodeType":"VariableDeclaration","scope":2198,"src":"1472:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint","nodeType":"ElementaryTypeName","src":"1472:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"unlockTime","nameLocation":"1489:10:10","nodeType":"VariableDeclaration","scope":2198,"src":"1484:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint","nodeType":"ElementaryTypeName","src":"1484:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"user","nameLocation":"1509:4:10","nodeType":"VariableDeclaration","scope":2198,"src":"1501:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"1501:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1471:43:10"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"kek_id","nameLocation":"1552:6:10","nodeType":"VariableDeclaration","scope":2198,"src":"1544:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1544:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1543:16:10"},"scope":2687,"src":"1452:930:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2240,"nodeType":"Block","src":"2475:349:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2488:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2488:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2232,"nodeType":"IfStatement","src":"2485:237:10","trueBody":{"id":2231,"nodeType":"Block","src":"2499:223:10","statements":[{"expression":{"arguments":[{"id":2216,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2588:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2219,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2604:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2596:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"2596:7:10","typeDescriptions":{}}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2213,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2565:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2212,"name":"IConvexWrapperV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2548:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IConvexWrapperV2_$2925_$","typeString":"type(contract IConvexWrapperV2)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2548:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IConvexWrapperV2_$2925","typeString":"contract IConvexWrapperV2"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2858,"src":"2548:39:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2548:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"2548:62:10"},{"expression":{"arguments":[{"id":2227,"name":"kek_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"2696:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2228,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2704:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2224,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"2664:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2223,"name":"IFraxFarmERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2649:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmERC20_$3372_$","typeString":"type(contract IFraxFarmERC20)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2649:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmERC20_$3372","typeString":"contract IFraxFarmERC20"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockAdditional","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"2649:46:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256) external"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2649:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2230,"nodeType":"ExpressionStatement","src":"2649:62:10"}]}},{"expression":{"arguments":[{"id":2234,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2788:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2233,"name":"_checkpointRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"2769:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2769:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2236,"nodeType":"ExpressionStatement","src":"2769:24:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2237,"name":"_cleanMemory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2803:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2803:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2239,"nodeType":"ExpressionStatement","src":"2803:14:10"}]},"functionSelector":"5aff427d","id":2241,"implemented":true,"kind":"function","modifiers":[{"id":2207,"kind":"modifierInvocation","modifierName":{"id":2206,"name":"onlyMaster","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"2464:10:10"},"nodeType":"ModifierInvocation","src":"2464:10:10"}],"name":"increaseAmount","nameLocation":"2397:14:10","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"amount","nameLocation":"2417:6:10","nodeType":"VariableDeclaration","scope":2241,"src":"2412:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint","nodeType":"ElementaryTypeName","src":"2412:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"kek_id","nameLocation":"2433:6:10","nodeType":"VariableDeclaration","scope":2241,"src":"2425:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2425:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"user","nameLocation":"2449:4:10","nodeType":"VariableDeclaration","scope":2241,"src":"2441:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2411:43:10"},"returnParameters":{"id":2208,"nodeType":"ParameterList","parameters":[],"src":"2475:0:10"},"scope":2687,"src":"2388:436:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2267,"nodeType":"Block","src":"2925:188:10","statements":[{"expression":{"arguments":[{"id":2256,"name":"kek_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"3000:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2257,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3008:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2253,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"2972:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2252,"name":"IFraxFarmERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2957:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmERC20_$3372_$","typeString":"type(contract IFraxFarmERC20)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmERC20_$3372","typeString":"contract IFraxFarmERC20"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockLonger","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"2957:42:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256) external"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2259,"nodeType":"ExpressionStatement","src":"2957:62:10"},{"expression":{"arguments":[{"id":2261,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3077:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2260,"name":"_checkpointRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"3058:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3058:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2263,"nodeType":"ExpressionStatement","src":"3058:24:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2264,"name":"_cleanMemory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3092:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3092:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2266,"nodeType":"ExpressionStatement","src":"3092:14:10"}]},"functionSelector":"3c0672bb","id":2268,"implemented":true,"kind":"function","modifiers":[{"id":2250,"kind":"modifierInvocation","modifierName":{"id":2249,"name":"onlyMaster","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"2914:10:10"},"nodeType":"ModifierInvocation","src":"2914:10:10"}],"name":"increaseUnlockTime","nameLocation":"2839:18:10","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"unlockTime","nameLocation":"2863:10:10","nodeType":"VariableDeclaration","scope":2268,"src":"2858:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint","nodeType":"ElementaryTypeName","src":"2858:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"kek_id","nameLocation":"2883:6:10","nodeType":"VariableDeclaration","scope":2268,"src":"2875:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2875:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"user","nameLocation":"2899:4:10","nodeType":"VariableDeclaration","scope":2268,"src":"2891:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2857:47:10"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[],"src":"2925:0:10"},"scope":2687,"src":"2830:283:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2329,"nodeType":"Block","src":"3210:409:10","statements":[{"expression":{"arguments":[{"id":2283,"name":"kek_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3287:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2286,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3303:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3295:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"3295:7:10","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3295:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2280,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"3255:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2279,"name":"IFraxFarmERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"3240:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmERC20_$3372_$","typeString":"type(contract IFraxFarmERC20)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3240:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmERC20_$3372","typeString":"contract IFraxFarmERC20"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawLocked","nodeType":"MemberAccess","referencedDeclaration":3224,"src":"3240:46:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$_t_uint256_$","typeString":"function (bytes32,address) external returns (uint256)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3240:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2289,"nodeType":"ExpressionStatement","src":"3240:69:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2300,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3428:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3420:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:10","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3420:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2295,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3395:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2294,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3388:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3388:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":200,"src":"3388:31:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3388:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2291,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3355:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2290,"name":"IConvexWrapperV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3338:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IConvexWrapperV2_$2925_$","typeString":"type(contract IConvexWrapperV2)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IConvexWrapperV2_$2925","typeString":"contract IConvexWrapperV2"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawAndUnwrap","nodeType":"MemberAccess","referencedDeclaration":2875,"src":"3338:49:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:97:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2304,"nodeType":"ExpressionStatement","src":"3338:97:10"},{"expression":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2305,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"3473:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2312,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3518:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3510:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"3510:7:10","typeDescriptions":{}}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3510:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2307,"name":"CURVE_LP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3490:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2306,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3483:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3483:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":200,"src":"3483:26:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3483:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3473:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2316,"nodeType":"ExpressionStatement","src":"3473:51:10"},{"expression":{"arguments":[{"id":2321,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"3564:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2322,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"3570:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2318,"name":"CURVE_LP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3541:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2317,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3534:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3534:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":317,"src":"3534:29:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$261_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3534:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2324,"nodeType":"ExpressionStatement","src":"3534:44:10"},{"expression":{"arguments":[{"id":2326,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"3607:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2325,"name":"_checkpointRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"3588:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3588:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"3588:24:10"}]},"functionSelector":"1b258d50","id":2330,"implemented":true,"kind":"function","modifiers":[{"id":2275,"kind":"modifierInvocation","modifierName":{"id":2274,"name":"onlyMaster","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"3176:10:10"},"nodeType":"ModifierInvocation","src":"3176:10:10"}],"name":"withdraw","nameLocation":"3128:8:10","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"kek_id","nameLocation":"3145:6:10","nodeType":"VariableDeclaration","scope":2330,"src":"3137:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3137:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"user","nameLocation":"3161:4:10","nodeType":"VariableDeclaration","scope":2330,"src":"3153:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"3153:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3136:30:10"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"balance","nameLocation":"3201:7:10","nodeType":"VariableDeclaration","scope":2330,"src":"3196:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint","nodeType":"ElementaryTypeName","src":"3196:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:14:10"},"scope":2687,"src":"3119:500:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2345,"nodeType":"Block","src":"3681:208:10","statements":[{"expression":{"arguments":[{"hexValue":"74727565","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3702:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2339,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"3708:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2337,"name":"_getReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"3691:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$_t_address_$returns$__$","typeString":"function (bool,address)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3691:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2341,"nodeType":"ExpressionStatement","src":"3691:22:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2342,"name":"_cleanMemory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3868:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3868:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2344,"nodeType":"ExpressionStatement","src":"3868:14:10"}]},"functionSelector":"ef5cfb8c","id":2346,"implemented":true,"kind":"function","modifiers":[{"id":2335,"kind":"modifierInvocation","modifierName":{"id":2334,"name":"onlyMaster","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"3670:10:10"},"nodeType":"ModifierInvocation","src":"3670:10:10"}],"name":"claimRewards","nameLocation":"3634:12:10","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"user","nameLocation":"3655:4:10","nodeType":"VariableDeclaration","scope":2346,"src":"3647:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:10"},"returnParameters":{"id":2336,"nodeType":"ParameterList","parameters":[],"src":"3681:0:10"},"scope":2687,"src":"3625:264:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2355,"nodeType":"Block","src":"4044:31:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2352,"name":"_cleanMemory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4054:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4054:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2354,"nodeType":"ExpressionStatement","src":"4054:14:10"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"3895:101:10","text":"Credit to doublesharp for the brilliant gas-saving concept\n Self-destructing clone pattern"},"functionSelector":"3ff5b85f","id":2356,"implemented":true,"kind":"function","modifiers":[{"id":2350,"kind":"modifierInvocation","modifierName":{"id":2349,"name":"onlyMaster","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"4033:10:10"},"nodeType":"ModifierInvocation","src":"4033:10:10"}],"name":"cleanMemory","nameLocation":"4010:11:10","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[],"src":"4021:2:10"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[],"src":"4044:0:10"},"scope":2687,"src":"4001:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2366,"nodeType":"Block","src":"4114:46:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2362,"name":"MASTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"4145:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4137:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"4137:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4137:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2359,"name":"selfdestruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-21,"src":"4124:12:10","typeDescriptions":{"typeIdentifier":"t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4124:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2365,"nodeType":"ExpressionStatement","src":"4124:29:10"}]},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"_cleanMemory","nameLocation":"4090:12:10","nodeType":"FunctionDefinition","parameters":{"id":2357,"nodeType":"ParameterList","parameters":[],"src":"4102:2:10"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[],"src":"4114:0:10"},"scope":2687,"src":"4081:79:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2472,"nodeType":"Block","src":"4497:974:10","statements":[{"condition":{"id":2374,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"4527:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2447,"nodeType":"IfStatement","src":"4524:629:10","trueBody":{"id":2446,"nodeType":"Block","src":"4534:619:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2381,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4628:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4620:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"4620:7:10","typeDescriptions":{}}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4620:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2376,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"4593:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2375,"name":"IFraxFarmERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"4578:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmERC20_$3372_$","typeString":"type(contract IFraxFarmERC20)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4578:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmERC20_$3372","typeString":"contract IFraxFarmERC20"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":3346,"src":"4578:41:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) external returns (uint256[] memory)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4578:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2384,"nodeType":"ExpressionStatement","src":"4578:56:10"},{"expression":{"arguments":[{"arguments":[{"id":2391,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4751:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4743:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"4743:7:10","typeDescriptions":{}}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4743:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2393,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"4758:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2386,"name":"STAKING_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"4718:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2385,"name":"IConvexWrapperV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"4701:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IConvexWrapperV2_$2925_$","typeString":"type(contract IConvexWrapperV2)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4701:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IConvexWrapperV2_$2925","typeString":"contract IConvexWrapperV2"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":2887,"src":"4701:41:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) external"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4701:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2395,"nodeType":"ExpressionStatement","src":"4701:62:10"},{"assignments":[2397],"declarations":[{"constant":false,"id":2397,"mutability":"mutable","name":"b","nameLocation":"4872:1:10","nodeType":"VariableDeclaration","scope":2446,"src":"4864:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4864:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2407,"initialValue":{"arguments":[{"arguments":[{"id":2404,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4906:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4898:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"4898:7:10","typeDescriptions":{}}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4898:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2399,"name":"CRV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"4883:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2398,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4876:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4876:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":200,"src":"4876:21:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4876:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4864:48:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2408,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"4929:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4929:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"4926:75:10","trueBody":{"id":2419,"nodeType":"Block","src":"4935:66:10","statements":[{"expression":{"arguments":[{"id":2415,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"4978:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"4984:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2412,"name":"CRV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"4960:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2411,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4953:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4953:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":317,"src":"4953:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$261_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4953:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"ExpressionStatement","src":"4953:33:10"}]}},{"expression":{"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"5014:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2428,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5048:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5040:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:10","typeDescriptions":{}}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5040:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2423,"name":"CVX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"5025:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2422,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5018:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5018:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":200,"src":"5018:21:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5018:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2432,"nodeType":"ExpressionStatement","src":"5014:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"5071:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2445,"nodeType":"IfStatement","src":"5068:75:10","trueBody":{"id":2444,"nodeType":"Block","src":"5077:66:10","statements":[{"expression":{"arguments":[{"id":2440,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"5120:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"5126:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2437,"name":"CVX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"5102:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2436,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5095:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5095:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":317,"src":"5095:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$261_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5095:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2443,"nodeType":"ExpressionStatement","src":"5095:33:10"}]}}]}},{"expression":{"arguments":[{"id":2449,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"5202:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2448,"name":"_processFxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5190:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5190:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2451,"nodeType":"ExpressionStatement","src":"5190:17:10"},{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"rewardTokens","nameLocation":"5271:12:10","nodeType":"VariableDeclaration","scope":2472,"src":"5254:29:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"5254:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2455,"nodeType":"ArrayTypeName","src":"5254:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2462,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2458,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"5301:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2457,"name":"IFraxFarmERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"5286:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmERC20_$3372_$","typeString":"type(contract IFraxFarmERC20)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5286:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmERC20_$3372","typeString":"contract IFraxFarmERC20"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAllRewardTokens","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"5286:50:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5286:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5254:84:10"},{"expression":{"arguments":[{"id":2464,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"5384:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2465,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"5398:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2463,"name":"_transferTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5368:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (address[] memory,address)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5368:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"5368:35:10"},{"expression":{"arguments":[{"id":2469,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"5459:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2468,"name":"_processExtraRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5438:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2471,"nodeType":"ExpressionStatement","src":"5438:26:10"}]},"id":2473,"implemented":true,"kind":"function","modifiers":[],"name":"_getReward","nameLocation":"4450:10:10","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"_claim","nameLocation":"4466:6:10","nodeType":"VariableDeclaration","scope":2473,"src":"4461:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"4461:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"user","nameLocation":"4482:4:10","nodeType":"VariableDeclaration","scope":2473,"src":"4474:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"4474:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4460:27:10"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[],"src":"4497:0:10"},"scope":2687,"src":"4441:1030:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2535,"nodeType":"Block","src":"5593:731:10","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2479,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"5659:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2478,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"5650:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5650:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":4036,"src":"5650:24:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5650:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"5647:671:10","trueBody":{"id":2533,"nodeType":"Block","src":"5677:641:10","statements":[{"assignments":[2484],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"userLiq","nameLocation":"5796:7:10","nodeType":"VariableDeclaration","scope":2533,"src":"5788:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"5788:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2494,"initialValue":{"arguments":[{"arguments":[{"id":2491,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5863:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5855:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2489,"name":"address","nodeType":"ElementaryTypeName","src":"5855:7:10","typeDescriptions":{}}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5855:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2486,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"5820:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2485,"name":"IFraxFarmBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"5806:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmBase_$3138_$","typeString":"type(contract IFraxFarmBase)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5806:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmBase_$3138","typeString":"contract IFraxFarmBase"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockedLiquidityOf","nodeType":"MemberAccess","referencedDeclaration":3114,"src":"5806:48:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5806:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5788:81:10"},{"assignments":[2496],"declarations":[{"constant":false,"id":2496,"mutability":"mutable","name":"bal","nameLocation":"5944:3:10","nodeType":"VariableDeclaration","scope":2533,"src":"5936:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"5936:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2506,"initialValue":{"arguments":[{"arguments":[{"id":2503,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5986:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5978:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"5978:7:10","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5978:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2498,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"5959:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2497,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"5950:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5950:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4010,"src":"5950:27:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5950:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5936:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"userLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"6009:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2508,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"6020:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6009:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2531,"nodeType":"Block","src":"6163:145:10","statements":[{"expression":{"arguments":[{"id":2525,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"6273:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"6279:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2527,"name":"userLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"6285:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6279:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2522,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"6255:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2521,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6246:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6246:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"6246:26:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6246:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2530,"nodeType":"ExpressionStatement","src":"6246:47:10"}]},"id":2532,"nodeType":"IfStatement","src":"6006:302:10","trueBody":{"id":2520,"nodeType":"Block","src":"6024:135:10","statements":[{"expression":{"arguments":[{"id":2514,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"6124:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"userLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"6130:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2516,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"6140:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6130:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2511,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"6107:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2510,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6098:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6098:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"6098:25:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6098:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2519,"nodeType":"ExpressionStatement","src":"6098:46:10"}]}}]}}]},"id":2536,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointRewards","nameLocation":"5552:18:10","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"user","nameLocation":"5579:4:10","nodeType":"VariableDeclaration","scope":2536,"src":"5571:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"5571:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5570:14:10"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[],"src":"5593:0:10"},"scope":2687,"src":"5543:781:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"6425:206:10","statements":[{"assignments":[2542],"declarations":[{"constant":false,"id":2542,"mutability":"mutable","name":"sendAmount","nameLocation":"6485:10:10","nodeType":"VariableDeclaration","scope":2566,"src":"6480:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint","nodeType":"ElementaryTypeName","src":"6480:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2552,"initialValue":{"arguments":[{"arguments":[{"id":2549,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6528:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6520:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"6520:7:10","typeDescriptions":{}}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6520:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2544,"name":"FXS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"6505:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2543,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6498:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6498:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":200,"src":"6498:21:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6498:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6480:54:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"sendAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"6547:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6560:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6547:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2565,"nodeType":"IfStatement","src":"6544:81:10","trueBody":{"id":2564,"nodeType":"Block","src":"6562:63:10","statements":[{"expression":{"arguments":[{"id":2560,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"6597:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2561,"name":"sendAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"6603:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2557,"name":"FXS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"6583:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2556,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6576:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":210,"src":"6576:20:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2563,"nodeType":"ExpressionStatement","src":"6576:38:10"}]}}]},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"_processFxs","nameLocation":"6391:11:10","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"user","nameLocation":"6411:4:10","nodeType":"VariableDeclaration","scope":2567,"src":"6403:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2537,"name":"address","nodeType":"ElementaryTypeName","src":"6403:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6402:14:10"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[],"src":"6425:0:10"},"scope":2687,"src":"6382:249:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2627,"nodeType":"Block","src":"6713:679:10","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2573,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"6735:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2572,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6726:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6726:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":4036,"src":"6726:24:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6726:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2626,"nodeType":"IfStatement","src":"6723:663:10","trueBody":{"id":2625,"nodeType":"Block","src":"6753:633:10","statements":[{"assignments":[2578],"declarations":[{"constant":false,"id":2578,"mutability":"mutable","name":"bal","nameLocation":"6978:3:10","nodeType":"VariableDeclaration","scope":2625,"src":"6970:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"6970:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2588,"initialValue":{"arguments":[{"arguments":[{"id":2585,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7020:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7012:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"7012:7:10","typeDescriptions":{}}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2580,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"6993:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2579,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6984:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6984:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4010,"src":"6984:27:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6984:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6970:56:10"},{"assignments":[2590],"declarations":[{"constant":false,"id":2590,"mutability":"mutable","name":"userLiq","nameLocation":"7048:7:10","nodeType":"VariableDeclaration","scope":2625,"src":"7040:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"7040:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"arguments":[{"id":2597,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7115:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7107:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"7107:7:10","typeDescriptions":{}}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7107:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2592,"name":"STAKING_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7072:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2591,"name":"IFraxFarmBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"7058:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFraxFarmBase_$3138_$","typeString":"type(contract IFraxFarmBase)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7058:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFraxFarmBase_$3138","typeString":"contract IFraxFarmBase"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockedLiquidityOf","nodeType":"MemberAccess","referencedDeclaration":3114,"src":"7058:48:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7058:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7040:81:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7138:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7145:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7138:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2604,"name":"userLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"7150:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7160:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7150:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7138:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2617,"nodeType":"IfStatement","src":"7135:194:10","trueBody":{"id":2616,"nodeType":"Block","src":"7162:167:10","statements":[{"expression":{"arguments":[{"id":2612,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"7301:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2613,"name":"userLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"7306:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2609,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"7284:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2608,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"7275:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7275:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"7275:25:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7275:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2615,"nodeType":"ExpressionStatement","src":"7275:39:10"}]}},{"expression":{"arguments":[{"id":2622,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"7370:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2619,"name":"REWARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"7351:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2618,"name":"IRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"7342:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewards_$4037_$","typeString":"type(contract IRewards)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7342:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewards_$4037","typeString":"contract IRewards"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":3996,"src":"7342:27:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7342:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2624,"nodeType":"ExpressionStatement","src":"7342:33:10"}]}}]},"id":2628,"implemented":true,"kind":"function","modifiers":[],"name":"_processExtraRewards","nameLocation":"6670:20:10","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"user","nameLocation":"6699:4:10","nodeType":"VariableDeclaration","scope":2628,"src":"6691:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"6691:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6690:14:10"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[],"src":"6713:0:10"},"scope":2687,"src":"6661:731:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2685,"nodeType":"Block","src":"7552:335:10","statements":[{"body":{"id":2683,"nodeType":"Block","src":"7635:246:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2647,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7652:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2649,"indexExpression":{"id":2648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7660:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7652:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2650,"name":"FXS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"7666:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7652:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2682,"nodeType":"IfStatement","src":"7649:222:10","trueBody":{"id":2681,"nodeType":"Block","src":"7670:201:10","statements":[{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"bal","nameLocation":"7696:3:10","nodeType":"VariableDeclaration","scope":2681,"src":"7688:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2665,"initialValue":{"arguments":[{"arguments":[{"id":2662,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7739:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestedEscrowSmartWallet_$2687","typeString":"contract VestedEscrowSmartWallet"}],"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7731:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"7731:7:10","typeDescriptions":{}}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7731:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":2655,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7709:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2657,"indexExpression":{"id":2656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7717:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7709:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2654,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7702:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7702:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":200,"src":"7702:28:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7702:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7688:57:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"7766:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7772:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7766:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2680,"nodeType":"IfStatement","src":"7763:94:10","trueBody":{"id":2679,"nodeType":"Block","src":"7774:83:10","statements":[{"expression":{"arguments":[{"id":2675,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"7828:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2676,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"7834:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":2670,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7803:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2672,"indexExpression":{"id":2671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7811:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7803:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2669,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7796:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$261_$","typeString":"type(contract IERC20)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7796:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$261","typeString":"contract IERC20"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":317,"src":"7796:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$261_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$261_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7796:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"7796:42:10"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7611:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2641,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7615:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7615:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7611:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2684,"initializationExpression":{"assignments":[2637],"declarations":[{"constant":false,"id":2637,"mutability":"mutable","name":"i","nameLocation":"7604:1:10","nodeType":"VariableDeclaration","scope":2684,"src":"7596:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"7596:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2639,"initialValue":{"hexValue":"30","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7608:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7596:13:10"},"loopExpression":{"expression":{"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7631:3:10","subExpression":{"id":2644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7631:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2646,"nodeType":"ExpressionStatement","src":"7631:3:10"},"nodeType":"ForStatement","src":"7592:289:10"}]},"id":2686,"implemented":true,"kind":"function","modifiers":[],"name":"_transferTokens","nameLocation":"7488:15:10","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"_tokens","nameLocation":"7521:7:10","nodeType":"VariableDeclaration","scope":2686,"src":"7504:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"7504:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2630,"nodeType":"ArrayTypeName","src":"7504:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"user","nameLocation":"7538:4:10","nodeType":"VariableDeclaration","scope":2686,"src":"7530:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"7530:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7503:40:10"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[],"src":"7552:0:10"},"scope":2687,"src":"7479:408:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2688,"src":"411:7479:10","usedErrors":[]}],"src":"51:7840:10"},"id":10},"contracts/interfaces/IAddressRegistry.sol":{"ast":{"absolutePath":"contracts/interfaces/IAddressRegistry.sol","exportedSymbols":{"IAddressRegistry":[2821]},"id":2822,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":2689,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2690,"nodeType":"StructuredDocumentation","src":"77:64:11","text":" @title Provider interface for Revest FNFTs\n @dev"},"fullyImplemented":false,"id":2821,"linearizedBaseContracts":[2821],"name":"IAddressRegistry","nameLocation":"152:16:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f5e95acb","id":2711,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"185:10:11","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"lock_manager_","nameLocation":"213:13:11","nodeType":"VariableDeclaration","scope":2711,"src":"205:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"205:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"liquidity_","nameLocation":"244:10:11","nodeType":"VariableDeclaration","scope":2711,"src":"236:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"236:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"revest_token_","nameLocation":"272:13:11","nodeType":"VariableDeclaration","scope":2711,"src":"264:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"264:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"token_vault_","nameLocation":"303:12:11","nodeType":"VariableDeclaration","scope":2711,"src":"295:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2697,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"revest_","nameLocation":"333:7:11","nodeType":"VariableDeclaration","scope":2711,"src":"325:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"fnft_","nameLocation":"358:5:11","nodeType":"VariableDeclaration","scope":2711,"src":"350:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2701,"name":"address","nodeType":"ElementaryTypeName","src":"350:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"metadata_","nameLocation":"381:9:11","nodeType":"VariableDeclaration","scope":2711,"src":"373:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"373:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"admin_","nameLocation":"408:6:11","nodeType":"VariableDeclaration","scope":2711,"src":"400:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"rewards_","nameLocation":"432:8:11","nodeType":"VariableDeclaration","scope":2711,"src":"424:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2707,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"195:251:11"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[],"src":"455:0:11"},"scope":2821,"src":"176:280:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e9960c3","id":2716,"implemented":false,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"471:8:11","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[],"src":"479:2:11"},"returnParameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"505:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"505:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"504:9:11"},"scope":2821,"src":"462:52:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"704b6c02","id":2721,"implemented":false,"kind":"function","modifiers":[],"name":"setAdmin","nameLocation":"529:8:11","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"admin","nameLocation":"546:5:11","nodeType":"VariableDeclaration","scope":2721,"src":"538:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"537:15:11"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[],"src":"561:0:11"},"scope":2821,"src":"520:42:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"035d0c69","id":2726,"implemented":false,"kind":"function","modifiers":[],"name":"getLockManager","nameLocation":"577:14:11","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"591:2:11"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2726,"src":"617:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"617:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"616:9:11"},"scope":2821,"src":"568:58:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"deedfdbd","id":2731,"implemented":false,"kind":"function","modifiers":[],"name":"setLockManager","nameLocation":"641:14:11","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"manager","nameLocation":"664:7:11","nodeType":"VariableDeclaration","scope":2731,"src":"656:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"655:17:11"},"returnParameters":{"id":2730,"nodeType":"ParameterList","parameters":[],"src":"681:0:11"},"scope":2821,"src":"632:50:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"54f2f7af","id":2736,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenVault","nameLocation":"697:13:11","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[],"src":"710:2:11"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2736,"src":"736:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"735:9:11"},"scope":2821,"src":"688:57:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6497a8a0","id":2741,"implemented":false,"kind":"function","modifiers":[],"name":"setTokenVault","nameLocation":"760:13:11","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"vault","nameLocation":"782:5:11","nodeType":"VariableDeclaration","scope":2741,"src":"774:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"774:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"773:15:11"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[],"src":"797:0:11"},"scope":2821,"src":"751:47:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d59e296e","id":2746,"implemented":false,"kind":"function","modifiers":[],"name":"getRevestFNFT","nameLocation":"813:13:11","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[],"src":"826:2:11"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2746,"src":"852:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"852:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"851:9:11"},"scope":2821,"src":"804:57:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f95eb482","id":2751,"implemented":false,"kind":"function","modifiers":[],"name":"setRevestFNFT","nameLocation":"876:13:11","nodeType":"FunctionDefinition","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"fnft","nameLocation":"898:4:11","nodeType":"VariableDeclaration","scope":2751,"src":"890:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:14:11"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[],"src":"912:0:11"},"scope":2821,"src":"867:46:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"025e3c61","id":2756,"implemented":false,"kind":"function","modifiers":[],"name":"getMetadataHandler","nameLocation":"928:18:11","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"946:2:11"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2753,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"971:9:11"},"scope":2821,"src":"919:62:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe762024","id":2761,"implemented":false,"kind":"function","modifiers":[],"name":"setMetadataHandler","nameLocation":"996:18:11","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"metadata","nameLocation":"1023:8:11","nodeType":"VariableDeclaration","scope":2761,"src":"1015:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2757,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1014:18:11"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"1041:0:11"},"scope":2821,"src":"987:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f97e7d74","id":2766,"implemented":false,"kind":"function","modifiers":[],"name":"getRevest","nameLocation":"1057:9:11","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[],"src":"1066:2:11"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"1092:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2763,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1091:9:11"},"scope":2821,"src":"1048:53:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9bb363a9","id":2771,"implemented":false,"kind":"function","modifiers":[],"name":"setRevest","nameLocation":"1116:9:11","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"revest","nameLocation":"1134:6:11","nodeType":"VariableDeclaration","scope":2771,"src":"1126:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"1126:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1125:16:11"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[],"src":"1150:0:11"},"scope":2821,"src":"1107:44:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2a7b941a","id":2778,"implemented":false,"kind":"function","modifiers":[],"name":"getDEX","nameLocation":"1166:6:11","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"index","nameLocation":"1178:5:11","nodeType":"VariableDeclaration","scope":2778,"src":"1173:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint","nodeType":"ElementaryTypeName","src":"1173:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1172:12:11"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2778,"src":"1208:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2775,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1207:9:11"},"scope":2821,"src":"1157:60:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"447fa8b7","id":2783,"implemented":false,"kind":"function","modifiers":[],"name":"setDex","nameLocation":"1232:6:11","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"dex","nameLocation":"1247:3:11","nodeType":"VariableDeclaration","scope":2783,"src":"1239:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2779,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1238:13:11"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"1260:0:11"},"scope":2821,"src":"1223:38:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"016abd2c","id":2788,"implemented":false,"kind":"function","modifiers":[],"name":"getRevestToken","nameLocation":"1276:14:11","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[],"src":"1290:2:11"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2788,"src":"1316:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1315:9:11"},"scope":2821,"src":"1267:58:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"87f7f696","id":2793,"implemented":false,"kind":"function","modifiers":[],"name":"setRevestToken","nameLocation":"1340:14:11","nodeType":"FunctionDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"token","nameLocation":"1363:5:11","nodeType":"VariableDeclaration","scope":2793,"src":"1355:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"1355:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1354:15:11"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[],"src":"1378:0:11"},"scope":2821,"src":"1331:48:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f9f5e1dd","id":2798,"implemented":false,"kind":"function","modifiers":[],"name":"getRewardsHandler","nameLocation":"1394:17:11","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[],"src":"1411:2:11"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2798,"src":"1436:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"1436:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1435:9:11"},"scope":2821,"src":"1385:60:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b38221ff","id":2803,"implemented":false,"kind":"function","modifiers":[],"name":"setRewardsHandler","nameLocation":"1460:17:11","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"esc","nameLocation":"1486:3:11","nodeType":"VariableDeclaration","scope":2803,"src":"1478:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1477:13:11"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[],"src":"1499:0:11"},"scope":2821,"src":"1451:49:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"21f8a721","id":2810,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"1515:10:11","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"id","nameLocation":"1534:2:11","nodeType":"VariableDeclaration","scope":2810,"src":"1526:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1526:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1525:12:11"},"returnParameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2810,"src":"1561:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"1561:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1560:9:11"},"scope":2821,"src":"1506:64:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b61657f7","id":2815,"implemented":false,"kind":"function","modifiers":[],"name":"getLPs","nameLocation":"1585:6:11","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[],"src":"1591:2:11"},"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"1617:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"1617:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1616:9:11"},"scope":2821,"src":"1576:50:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"382b5e07","id":2820,"implemented":false,"kind":"function","modifiers":[],"name":"setLPs","nameLocation":"1641:6:11","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"liquidToken","nameLocation":"1656:11:11","nodeType":"VariableDeclaration","scope":2820,"src":"1648:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2816,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1647:21:11"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"1677:0:11"},"scope":2821,"src":"1632:46:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2822,"src":"142:1539:11","usedErrors":[]}],"src":"51:1631:11"},"id":11},"contracts/interfaces/IConvexWrapperV2.sol":{"ast":{"absolutePath":"contracts/interfaces/IConvexWrapperV2.sol","exportedSymbols":{"IConvexWrapperV2":[2925]},"id":2926,"nodeType":"SourceUnit","nodes":[{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2925,"linearizedBaseContracts":[2925],"name":"IConvexWrapperV2","nameLocation":"10:16:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IConvexWrapperV2.EarnedData","id":2827,"members":[{"constant":false,"id":2824,"mutability":"mutable","name":"token","nameLocation":"68:5:12","nodeType":"VariableDeclaration","scope":2827,"src":"60:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"60:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"amount","nameLocation":"91:6:12","nodeType":"VariableDeclaration","scope":2827,"src":"83:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"83:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"EarnedData","nameLocation":"39:10:12","nodeType":"StructDefinition","scope":2925,"src":"32:72:12","visibility":"public"},{"functionSelector":"0bece79c","id":2832,"implemented":false,"kind":"function","modifiers":[],"name":"collateralVault","nameLocation":"117:15:12","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[],"src":"132:2:12"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"vault","nameLocation":"165:5:12","nodeType":"VariableDeclaration","scope":2832,"src":"157:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"157:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"156:15:12"},"scope":2925,"src":"108:64:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e529ee95","id":2837,"implemented":false,"kind":"function","modifiers":[],"name":"convexPoolId","nameLocation":"184:12:12","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[],"src":"196:2:12"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"_poolId","nameLocation":"229:7:12","nodeType":"VariableDeclaration","scope":2837,"src":"221:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"220:17:12"},"scope":2925,"src":"175:63:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":2844,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"250:9:12","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"_account","nameLocation":"268:8:12","nodeType":"VariableDeclaration","scope":2844,"src":"260:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"260:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"259:18:12"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"300:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"300:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"299:9:12"},"scope":2925,"src":"241:68:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4b0ee02a","id":2851,"implemented":false,"kind":"function","modifiers":[],"name":"totalBalanceOf","nameLocation":"321:14:12","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"_account","nameLocation":"344:8:12","nodeType":"VariableDeclaration","scope":2851,"src":"336:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"335:18:12"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2851,"src":"376:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"375:9:12"},"scope":2925,"src":"312:73:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e553f65","id":2858,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"397:7:12","nodeType":"FunctionDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"_amount","nameLocation":"413:7:12","nodeType":"VariableDeclaration","scope":2858,"src":"405:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"_to","nameLocation":"430:3:12","nodeType":"VariableDeclaration","scope":2858,"src":"422:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2854,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"404:30:12"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[],"src":"443:0:12"},"scope":2925,"src":"388:56:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7acb7757","id":2865,"implemented":false,"kind":"function","modifiers":[],"name":"stake","nameLocation":"456:5:12","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"_amount","nameLocation":"470:7:12","nodeType":"VariableDeclaration","scope":2865,"src":"462:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"_to","nameLocation":"487:3:12","nodeType":"VariableDeclaration","scope":2865,"src":"479:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"461:30:12"},"returnParameters":{"id":2864,"nodeType":"ParameterList","parameters":[],"src":"500:0:12"},"scope":2925,"src":"447:54:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":2870,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"513:8:12","nodeType":"FunctionDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"_amount","nameLocation":"530:7:12","nodeType":"VariableDeclaration","scope":2870,"src":"522:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"522:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"521:17:12"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[],"src":"547:0:12"},"scope":2925,"src":"504:44:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3969dfb4","id":2875,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawAndUnwrap","nameLocation":"560:17:12","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"_amount","nameLocation":"586:7:12","nodeType":"VariableDeclaration","scope":2875,"src":"578:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:17:12"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[],"src":"603:0:12"},"scope":2925,"src":"551:53:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c00007b0","id":2880,"implemented":false,"kind":"function","modifiers":[],"name":"getReward","nameLocation":"616:9:12","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"_account","nameLocation":"634:8:12","nodeType":"VariableDeclaration","scope":2880,"src":"626:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2876,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"625:18:12"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[],"src":"652:0:12"},"scope":2925,"src":"607:46:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b091695","id":2887,"implemented":false,"kind":"function","modifiers":[],"name":"getReward","nameLocation":"665:9:12","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"_account","nameLocation":"683:8:12","nodeType":"VariableDeclaration","scope":2887,"src":"675:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"_forwardTo","nameLocation":"701:10:12","nodeType":"VariableDeclaration","scope":2887,"src":"693:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2883,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"674:38:12"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[],"src":"721:0:12"},"scope":2925,"src":"656:66:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b95c5746","id":2892,"implemented":false,"kind":"function","modifiers":[],"name":"rewardLength","nameLocation":"734:12:12","nodeType":"FunctionDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[],"src":"746:2:12"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"771:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"770:9:12"},"scope":2925,"src":"725:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"008cc262","id":2901,"implemented":false,"kind":"function","modifiers":[],"name":"earned","nameLocation":"792:6:12","nodeType":"FunctionDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"_account","nameLocation":"807:8:12","nodeType":"VariableDeclaration","scope":2901,"src":"799:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2893,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"798:18:12"},"returnParameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"claimable","nameLocation":"854:9:12","nodeType":"VariableDeclaration","scope":2901,"src":"834:29:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData[]"},"typeName":{"baseType":{"id":2897,"nodeType":"UserDefinedTypeName","pathNode":{"id":2896,"name":"EarnedData","nodeType":"IdentifierPath","referencedDeclaration":2827,"src":"834:10:12"},"referencedDeclaration":2827,"src":"834:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$2827_storage_ptr","typeString":"struct IConvexWrapperV2.EarnedData"}},"id":2898,"nodeType":"ArrayTypeName","src":"834:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_storage_$dyn_storage_ptr","typeString":"struct IConvexWrapperV2.EarnedData[]"}},"visibility":"internal"}],"src":"833:31:12"},"scope":2925,"src":"783:82:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b277e8f0","id":2910,"implemented":false,"kind":"function","modifiers":[],"name":"earnedView","nameLocation":"877:10:12","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"_account","nameLocation":"896:8:12","nodeType":"VariableDeclaration","scope":2910,"src":"888:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2902,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:18:12"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"claimable","nameLocation":"948:9:12","nodeType":"VariableDeclaration","scope":2910,"src":"928:29:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr","typeString":"struct IConvexWrapperV2.EarnedData[]"},"typeName":{"baseType":{"id":2906,"nodeType":"UserDefinedTypeName","pathNode":{"id":2905,"name":"EarnedData","nodeType":"IdentifierPath","referencedDeclaration":2827,"src":"928:10:12"},"referencedDeclaration":2827,"src":"928:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$2827_storage_ptr","typeString":"struct IConvexWrapperV2.EarnedData"}},"id":2907,"nodeType":"ArrayTypeName","src":"928:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$2827_storage_$dyn_storage_ptr","typeString":"struct IConvexWrapperV2.EarnedData[]"}},"visibility":"internal"}],"src":"927:31:12"},"scope":2925,"src":"868:91:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6817031b","id":2915,"implemented":false,"kind":"function","modifiers":[],"name":"setVault","nameLocation":"971:8:12","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"_vault","nameLocation":"988:6:12","nodeType":"VariableDeclaration","scope":2915,"src":"980:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"979:16:12"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[],"src":"1004:0:12"},"scope":2925,"src":"962:43:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e2aecded","id":2924,"implemented":false,"kind":"function","modifiers":[],"name":"user_checkpoint","nameLocation":"1017:15:12","nodeType":"FunctionDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"_accounts","nameLocation":"1053:9:12","nodeType":"VariableDeclaration","scope":2924,"src":"1033:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_calldata_ptr","typeString":"address[2]"},"typeName":{"baseType":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2918,"length":{"hexValue":"32","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1041:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1033:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage_ptr","typeString":"address[2]"}},"visibility":"internal"}],"src":"1032:31:12"},"returnParameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"1081:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2921,"name":"bool","nodeType":"ElementaryTypeName","src":"1081:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1080:6:12"},"scope":2925,"src":"1008:79:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2926,"src":"0:1089:12","usedErrors":[]}],"src":"0:1090:12"},"id":12},"contracts/interfaces/IDistributor.sol":{"ast":{"absolutePath":"contracts/interfaces/IDistributor.sol","exportedSymbols":{"IDistributor":[2995],"IERC165":[863],"IRegistryProvider":[3661]},"id":2996,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":2927,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:13"},{"absolutePath":"contracts/interfaces/IRegistryProvider.sol","file":"./IRegistryProvider.sol","id":2928,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2996,"sourceUnit":3662,"src":"77:33:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2996,"sourceUnit":864,"src":"111:65:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"178:53:13","text":" @title Provider interface for Revest FNFTs"},"fullyImplemented":false,"id":2995,"linearizedBaseContracts":[2995],"name":"IDistributor","nameLocation":"242:12:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4e71d92d","id":2935,"implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"271:5:13","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[],"src":"276:2:13"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"amountTransferred","nameLocation":"302:17:13","nodeType":"VariableDeclaration","scope":2935,"src":"297:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint","nodeType":"ElementaryTypeName","src":"297:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"296:24:13"},"scope":2995,"src":"262:59:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"29357750","id":2940,"implemented":false,"kind":"function","modifiers":[],"name":"N_COINS","nameLocation":"336:7:13","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[],"src":"343:2:13"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"n","nameLocation":"374:1:13","nodeType":"VariableDeclaration","scope":2940,"src":"369:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint","nodeType":"ElementaryTypeName","src":"369:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"368:8:13"},"scope":2995,"src":"327:50:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f64b2be","id":2947,"implemented":false,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"392:6:13","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"index","nameLocation":"404:5:13","nodeType":"VariableDeclaration","scope":2947,"src":"399:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint","nodeType":"ElementaryTypeName","src":"399:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"398:12:13"},"returnParameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"token","nameLocation":"442:5:13","nodeType":"VariableDeclaration","scope":2947,"src":"434:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"434:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"433:15:13"},"scope":2995,"src":"383:66:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d5d46e88","id":2954,"implemented":false,"kind":"function","modifiers":[],"name":"user_epoch_of","nameLocation":"464:13:13","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"_addr","nameLocation":"486:5:13","nodeType":"VariableDeclaration","scope":2954,"src":"478:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2948,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:15:13"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"epoch","nameLocation":"521:5:13","nodeType":"VariableDeclaration","scope":2954,"src":"516:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint","nodeType":"ElementaryTypeName","src":"516:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"515:12:13"},"scope":2995,"src":"455:73:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3fd83e9e","id":2963,"implemented":false,"kind":"function","modifiers":[],"name":"tokens_per_day","nameLocation":"543:14:13","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"index","nameLocation":"563:5:13","nodeType":"VariableDeclaration","scope":2963,"src":"558:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint","nodeType":"ElementaryTypeName","src":"558:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"index2","nameLocation":"575:6:13","nodeType":"VariableDeclaration","scope":2963,"src":"570:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint","nodeType":"ElementaryTypeName","src":"570:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"557:25:13"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"tokensPerDay","nameLocation":"611:12:13","nodeType":"VariableDeclaration","scope":2963,"src":"606:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint","nodeType":"ElementaryTypeName","src":"606:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"605:19:13"},"scope":2995,"src":"534:91:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"834ee417","id":2968,"implemented":false,"kind":"function","modifiers":[],"name":"start_time","nameLocation":"640:10:13","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[],"src":"650:2:13"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"startTime","nameLocation":"681:9:13","nodeType":"VariableDeclaration","scope":2968,"src":"676:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint","nodeType":"ElementaryTypeName","src":"676:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"675:16:13"},"scope":2995,"src":"631:61:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c6288443","id":2975,"implemented":false,"kind":"function","modifiers":[],"name":"last_token_times","nameLocation":"707:16:13","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"index","nameLocation":"729:5:13","nodeType":"VariableDeclaration","scope":2975,"src":"724:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint","nodeType":"ElementaryTypeName","src":"724:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:12:13"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"lastTime","nameLocation":"764:8:13","nodeType":"VariableDeclaration","scope":2975,"src":"759:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint","nodeType":"ElementaryTypeName","src":"759:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"758:15:13"},"scope":2995,"src":"698:76:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"127dcbd3","id":2980,"implemented":false,"kind":"function","modifiers":[],"name":"time_cursor","nameLocation":"808:11:13","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[],"src":"819:2:13"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"timeCursor","nameLocation":"850:10:13","nodeType":"VariableDeclaration","scope":2980,"src":"845:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint","nodeType":"ElementaryTypeName","src":"845:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"844:17:13"},"scope":2995,"src":"799:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2a2a314b","id":2987,"implemented":false,"kind":"function","modifiers":[],"name":"time_cursor_of","nameLocation":"877:14:13","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"addr","nameLocation":"900:4:13","nodeType":"VariableDeclaration","scope":2987,"src":"892:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"891:14:13"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"timeCursor","nameLocation":"934:10:13","nodeType":"VariableDeclaration","scope":2987,"src":"929:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint","nodeType":"ElementaryTypeName","src":"929:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"928:17:13"},"scope":2995,"src":"868:78:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d4dafba8","id":2994,"implemented":false,"kind":"function","modifiers":[],"name":"ve_supply","nameLocation":"961:9:13","nodeType":"FunctionDefinition","parameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"index","nameLocation":"976:5:13","nodeType":"VariableDeclaration","scope":2994,"src":"971:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint","nodeType":"ElementaryTypeName","src":"971:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:12:13"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"supply","nameLocation":"1011:6:13","nodeType":"VariableDeclaration","scope":2994,"src":"1006:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint","nodeType":"ElementaryTypeName","src":"1006:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1005:13:13"},"scope":2995,"src":"952:67:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2996,"src":"232:790:13","usedErrors":[]}],"src":"51:972:13"},"id":13},"contracts/interfaces/IFNFTHandler.sol":{"ast":{"absolutePath":"contracts/interfaces/IFNFTHandler.sol","exportedSymbols":{"IFNFTHandler":[3083]},"id":3084,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":2997,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3083,"linearizedBaseContracts":[3083],"name":"IFNFTHandler","nameLocation":"88:12:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"731133e9","id":3008,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"117:4:14","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"account","nameLocation":"130:7:14","nodeType":"VariableDeclaration","scope":3008,"src":"122:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2998,"name":"address","nodeType":"ElementaryTypeName","src":"122:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"id","nameLocation":"144:2:14","nodeType":"VariableDeclaration","scope":3008,"src":"139:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint","nodeType":"ElementaryTypeName","src":"139:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"amount","nameLocation":"153:6:14","nodeType":"VariableDeclaration","scope":3008,"src":"148:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint","nodeType":"ElementaryTypeName","src":"148:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"data","nameLocation":"174:4:14","nodeType":"VariableDeclaration","scope":3008,"src":"161:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3004,"name":"bytes","nodeType":"ElementaryTypeName","src":"161:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"121:58:14"},"returnParameters":{"id":3007,"nodeType":"ParameterList","parameters":[],"src":"188:0:14"},"scope":3083,"src":"108:81:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9a46cd5d","id":3023,"implemented":false,"kind":"function","modifiers":[],"name":"mintBatchRec","nameLocation":"204:12:14","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"recipients","nameLocation":"234:10:14","nodeType":"VariableDeclaration","scope":3023,"src":"217:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"217:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3010,"nodeType":"ArrayTypeName","src":"217:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"quantities","nameLocation":"260:10:14","nodeType":"VariableDeclaration","scope":3023,"src":"246:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3012,"name":"uint","nodeType":"ElementaryTypeName","src":"246:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3013,"nodeType":"ArrayTypeName","src":"246:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"id","nameLocation":"277:2:14","nodeType":"VariableDeclaration","scope":3023,"src":"272:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint","nodeType":"ElementaryTypeName","src":"272:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"newSupply","nameLocation":"286:9:14","nodeType":"VariableDeclaration","scope":3023,"src":"281:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint","nodeType":"ElementaryTypeName","src":"281:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"data","nameLocation":"310:4:14","nodeType":"VariableDeclaration","scope":3023,"src":"297:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3019,"name":"bytes","nodeType":"ElementaryTypeName","src":"297:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"216:99:14"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[],"src":"324:0:14"},"scope":3083,"src":"195:130:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1f7fdffa","id":3036,"implemented":false,"kind":"function","modifiers":[],"name":"mintBatch","nameLocation":"340:9:14","nodeType":"FunctionDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"to","nameLocation":"358:2:14","nodeType":"VariableDeclaration","scope":3036,"src":"350:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"350:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3028,"mutability":"mutable","name":"ids","nameLocation":"376:3:14","nodeType":"VariableDeclaration","scope":3036,"src":"362:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3026,"name":"uint","nodeType":"ElementaryTypeName","src":"362:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3027,"nodeType":"ArrayTypeName","src":"362:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"amounts","nameLocation":"395:7:14","nodeType":"VariableDeclaration","scope":3036,"src":"381:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3029,"name":"uint","nodeType":"ElementaryTypeName","src":"381:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3030,"nodeType":"ArrayTypeName","src":"381:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3033,"mutability":"mutable","name":"data","nameLocation":"417:4:14","nodeType":"VariableDeclaration","scope":3036,"src":"404:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3032,"name":"bytes","nodeType":"ElementaryTypeName","src":"404:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"349:73:14"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[],"src":"431:0:14"},"scope":3083,"src":"331:101:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02fe5305","id":3041,"implemented":false,"kind":"function","modifiers":[],"name":"setURI","nameLocation":"447:6:14","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"newuri","nameLocation":"468:6:14","nodeType":"VariableDeclaration","scope":3041,"src":"454:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3037,"name":"string","nodeType":"ElementaryTypeName","src":"454:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"453:22:14"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[],"src":"484:0:14"},"scope":3083,"src":"438:47:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5298aca","id":3050,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"500:4:14","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"account","nameLocation":"513:7:14","nodeType":"VariableDeclaration","scope":3050,"src":"505:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3042,"name":"address","nodeType":"ElementaryTypeName","src":"505:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"id","nameLocation":"527:2:14","nodeType":"VariableDeclaration","scope":3050,"src":"522:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint","nodeType":"ElementaryTypeName","src":"522:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"amount","nameLocation":"536:6:14","nodeType":"VariableDeclaration","scope":3050,"src":"531:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint","nodeType":"ElementaryTypeName","src":"531:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:39:14"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[],"src":"552:0:14"},"scope":3083,"src":"491:62:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b20c454","id":3061,"implemented":false,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"568:9:14","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"account","nameLocation":"586:7:14","nodeType":"VariableDeclaration","scope":3061,"src":"578:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3051,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"ids","nameLocation":"609:3:14","nodeType":"VariableDeclaration","scope":3061,"src":"595:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3053,"name":"uint","nodeType":"ElementaryTypeName","src":"595:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3054,"nodeType":"ArrayTypeName","src":"595:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"amounts","nameLocation":"628:7:14","nodeType":"VariableDeclaration","scope":3061,"src":"614:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3056,"name":"uint","nodeType":"ElementaryTypeName","src":"614:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ArrayTypeName","src":"614:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"577:59:14"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[],"src":"645:0:14"},"scope":3083,"src":"559:87:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2b04e840","id":3070,"implemented":false,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"661:10:14","nodeType":"FunctionDefinition","parameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"tokenHolder","nameLocation":"680:11:14","nodeType":"VariableDeclaration","scope":3070,"src":"672:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3062,"name":"address","nodeType":"ElementaryTypeName","src":"672:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"id","nameLocation":"698:2:14","nodeType":"VariableDeclaration","scope":3070,"src":"693:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint","nodeType":"ElementaryTypeName","src":"693:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"671:30:14"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3070,"src":"725:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint","nodeType":"ElementaryTypeName","src":"725:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"724:6:14"},"scope":3083,"src":"652:79:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f77ee79d","id":3077,"implemented":false,"kind":"function","modifiers":[],"name":"getSupply","nameLocation":"746:9:14","nodeType":"FunctionDefinition","parameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"fnftId","nameLocation":"761:6:14","nodeType":"VariableDeclaration","scope":3077,"src":"756:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint","nodeType":"ElementaryTypeName","src":"756:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:13:14"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3077,"src":"792:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint","nodeType":"ElementaryTypeName","src":"792:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"791:6:14"},"scope":3083,"src":"737:61:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bc968326","id":3082,"implemented":false,"kind":"function","modifiers":[],"name":"getNextId","nameLocation":"813:9:14","nodeType":"FunctionDefinition","parameters":{"id":3078,"nodeType":"ParameterList","parameters":[],"src":"822:2:14"},"returnParameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3082,"src":"848:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint","nodeType":"ElementaryTypeName","src":"848:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"847:6:14"},"scope":3083,"src":"804:50:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3084,"src":"78:778:14","usedErrors":[]}],"src":"51:806:14"},"id":14},"contracts/interfaces/IFeeReporter.sol":{"ast":{"absolutePath":"contracts/interfaces/IFeeReporter.sol","exportedSymbols":{"IFeeReporter":[3100]},"id":3101,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":3085,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3100,"linearizedBaseContracts":[3100],"name":"IFeeReporter","nameLocation":"88:12:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3ea5665f","id":3092,"implemented":false,"kind":"function","modifiers":[],"name":"getFlatWeiFee","nameLocation":"117:13:15","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"asset","nameLocation":"139:5:15","nodeType":"VariableDeclaration","scope":3092,"src":"131:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"130:15:15"},"returnParameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3092,"src":"169:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint","nodeType":"ElementaryTypeName","src":"169:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"168:6:15"},"scope":3100,"src":"108:67:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2036e7ce","id":3099,"implemented":false,"kind":"function","modifiers":[],"name":"getERC20Fee","nameLocation":"190:11:15","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"asset","nameLocation":"210:5:15","nodeType":"VariableDeclaration","scope":3099,"src":"202:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3093,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"201:15:15"},"returnParameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3099,"src":"240:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint","nodeType":"ElementaryTypeName","src":"240:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"239:6:15"},"scope":3100,"src":"181:65:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3101,"src":"78:171:15","usedErrors":[]}],"src":"51:199:15"},"id":15},"contracts/interfaces/IFraxFarmBase.sol":{"ast":{"absolutePath":"contracts/interfaces/IFraxFarmBase.sol","exportedSymbols":{"IFraxFarmBase":[3138]},"id":3139,"nodeType":"SourceUnit","nodes":[{"id":3102,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"0:24:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3138,"linearizedBaseContracts":[3138],"name":"IFraxFarmBase","nameLocation":"36:13:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e01f62bf","id":3107,"implemented":false,"kind":"function","modifiers":[],"name":"totalLiquidityLocked","nameLocation":"65:20:16","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[],"src":"85:2:16"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"111:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"111:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110:9:16"},"scope":3138,"src":"56:64:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d9f96e8d","id":3114,"implemented":false,"kind":"function","modifiers":[],"name":"lockedLiquidityOf","nameLocation":"134:17:16","nodeType":"FunctionDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"account","nameLocation":"160:7:16","nodeType":"VariableDeclaration","scope":3114,"src":"152:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3108,"name":"address","nodeType":"ElementaryTypeName","src":"152:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"151:17:16"},"returnParameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3114,"src":"192:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191:9:16"},"scope":3138,"src":"125:76:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"91cf600a","id":3119,"implemented":false,"kind":"function","modifiers":[],"name":"toggleValidVeFXSProxy","nameLocation":"216:21:16","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"proxy_address","nameLocation":"246:13:16","nodeType":"VariableDeclaration","scope":3119,"src":"238:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"238:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"237:23:16"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[],"src":"269:0:16"},"scope":3138,"src":"207:63:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e7f30582","id":3124,"implemented":false,"kind":"function","modifiers":[],"name":"proxyToggleStaker","nameLocation":"284:17:16","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"staker_address","nameLocation":"310:14:16","nodeType":"VariableDeclaration","scope":3124,"src":"302:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3120,"name":"address","nodeType":"ElementaryTypeName","src":"302:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"301:24:16"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[],"src":"334:0:16"},"scope":3138,"src":"275:60:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d7400d56","id":3129,"implemented":false,"kind":"function","modifiers":[],"name":"stakerSetVeFXSProxy","nameLocation":"349:19:16","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"proxy_address","nameLocation":"377:13:16","nodeType":"VariableDeclaration","scope":3129,"src":"369:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"369:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"368:23:16"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[],"src":"400:0:16"},"scope":3138,"src":"340:61:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c00007b0","id":3137,"implemented":false,"kind":"function","modifiers":[],"name":"getReward","nameLocation":"415:9:16","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"destination_address","nameLocation":"433:19:16","nodeType":"VariableDeclaration","scope":3137,"src":"425:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"424:29:16"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3137,"src":"472:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3134,"nodeType":"ArrayTypeName","src":"472:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"471:18:16"},"scope":3138,"src":"406:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3139,"src":"26:467:16","usedErrors":[]}],"src":"0:493:16"},"id":16},"contracts/interfaces/IFraxFarmERC20.sol":{"ast":{"absolutePath":"contracts/interfaces/IFraxFarmERC20.sol","exportedSymbols":{"IFraxFarmERC20":[3372]},"id":3373,"nodeType":"SourceUnit","nodes":[{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3372,"linearizedBaseContracts":[3372],"name":"IFraxFarmERC20","nameLocation":"11:14:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IFraxFarmERC20.LockedStake","id":3150,"members":[{"constant":false,"id":3141,"mutability":"mutable","name":"kek_id","nameLocation":"74:6:17","nodeType":"VariableDeclaration","scope":3150,"src":"66:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"start_timestamp","nameLocation":"98:15:17","nodeType":"VariableDeclaration","scope":3150,"src":"90:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"90:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"liquidity","nameLocation":"131:9:17","nodeType":"VariableDeclaration","scope":3150,"src":"123:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"123:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"ending_timestamp","nameLocation":"158:16:17","nodeType":"VariableDeclaration","scope":3150,"src":"150:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3149,"mutability":"mutable","name":"lock_multiplier","nameLocation":"192:15:17","nodeType":"VariableDeclaration","scope":3150,"src":"184:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3148,"name":"uint256","nodeType":"ElementaryTypeName","src":"184:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"LockedStake","nameLocation":"44:11:17","nodeType":"StructDefinition","scope":3372,"src":"37:218:17","visibility":"public"},{"functionSelector":"8da5cb5b","id":3155,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"270:5:17","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[],"src":"275:2:17"},"returnParameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"301:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"301:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"300:9:17"},"scope":3372,"src":"261:49:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"72f702f3","id":3160,"implemented":false,"kind":"function","modifiers":[],"name":"stakingToken","nameLocation":"324:12:17","nodeType":"FunctionDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[],"src":"336:2:17"},"returnParameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3160,"src":"362:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3157,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:9:17"},"scope":3372,"src":"315:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5bfd9258","id":3165,"implemented":false,"kind":"function","modifiers":[],"name":"fraxPerLPToken","nameLocation":"385:14:17","nodeType":"FunctionDefinition","parameters":{"id":3161,"nodeType":"ParameterList","parameters":[],"src":"399:2:17"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"425:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"424:9:17"},"scope":3372,"src":"376:58:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bad86a7","id":3176,"implemented":false,"kind":"function","modifiers":[],"name":"calcCurCombinedWeight","nameLocation":"448:21:17","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"account","nameLocation":"478:7:17","nodeType":"VariableDeclaration","scope":3176,"src":"470:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:17:17"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"old_combined_weight","nameLocation":"539:19:17","nodeType":"VariableDeclaration","scope":3176,"src":"531:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"531:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"new_vefxs_multiplier","nameLocation":"580:20:17","nodeType":"VariableDeclaration","scope":3176,"src":"572:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"572:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"new_combined_weight","nameLocation":"622:19:17","nodeType":"VariableDeclaration","scope":3176,"src":"614:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:134:17"},"scope":3372,"src":"439:213:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1e090f01","id":3185,"implemented":false,"kind":"function","modifiers":[],"name":"lockedStakesOf","nameLocation":"666:14:17","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"account","nameLocation":"689:7:17","nodeType":"VariableDeclaration","scope":3185,"src":"681:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"680:17:17"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"721:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedStake_$3150_memory_ptr_$dyn_memory_ptr","typeString":"struct IFraxFarmERC20.LockedStake[]"},"typeName":{"baseType":{"id":3181,"nodeType":"UserDefinedTypeName","pathNode":{"id":3180,"name":"LockedStake","nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"721:11:17"},"referencedDeclaration":3150,"src":"721:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_LockedStake_$3150_storage_ptr","typeString":"struct IFraxFarmERC20.LockedStake"}},"id":3182,"nodeType":"ArrayTypeName","src":"721:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedStake_$3150_storage_$dyn_storage_ptr","typeString":"struct IFraxFarmERC20.LockedStake[]"}},"visibility":"internal"}],"src":"720:22:17"},"scope":3372,"src":"657:86:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca6df29d","id":3192,"implemented":false,"kind":"function","modifiers":[],"name":"lockedStakesOfLength","nameLocation":"757:20:17","nodeType":"FunctionDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"account","nameLocation":"786:7:17","nodeType":"VariableDeclaration","scope":3192,"src":"778:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:17:17"},"returnParameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3192,"src":"818:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"817:9:17"},"scope":3372,"src":"748:79:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b85efd06","id":3199,"implemented":false,"kind":"function","modifiers":[],"name":"lockAdditional","nameLocation":"841:14:17","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"kek_id","nameLocation":"864:6:17","nodeType":"VariableDeclaration","scope":3199,"src":"856:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"856:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"addl_liq","nameLocation":"880:8:17","nodeType":"VariableDeclaration","scope":3199,"src":"872:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"855:34:17"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[],"src":"898:0:17"},"scope":3372,"src":"832:67:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d2fbdc0d","id":3206,"implemented":false,"kind":"function","modifiers":[],"name":"lockLonger","nameLocation":"913:10:17","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"kek_id","nameLocation":"932:6:17","nodeType":"VariableDeclaration","scope":3206,"src":"924:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"924:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"new_ending_ts","nameLocation":"948:13:17","nodeType":"VariableDeclaration","scope":3206,"src":"940:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:39:17"},"returnParameters":{"id":3205,"nodeType":"ParameterList","parameters":[],"src":"971:0:17"},"scope":3372,"src":"904:68:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"17b18c89","id":3215,"implemented":false,"kind":"function","modifiers":[],"name":"stakeLocked","nameLocation":"986:11:17","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"liquidity","nameLocation":"1006:9:17","nodeType":"VariableDeclaration","scope":3215,"src":"998:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"secs","nameLocation":"1025:4:17","nodeType":"VariableDeclaration","scope":3215,"src":"1017:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:33:17"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3215,"src":"1049:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1049:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1048:9:17"},"scope":3372,"src":"977:81:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e44b9fa5","id":3224,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawLocked","nameLocation":"1072:14:17","nodeType":"FunctionDefinition","parameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"kek_id","nameLocation":"1095:6:17","nodeType":"VariableDeclaration","scope":3224,"src":"1087:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1087:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"destination_address","nameLocation":"1111:19:17","nodeType":"VariableDeclaration","scope":3224,"src":"1103:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3218,"name":"address","nodeType":"ElementaryTypeName","src":"1103:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1086:45:17"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3224,"src":"1150:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1149:9:17"},"scope":3372,"src":"1063:96:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ebe2b12b","id":3229,"implemented":false,"kind":"function","modifiers":[],"name":"periodFinish","nameLocation":"1176:12:17","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[],"src":"1188:2:17"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3229,"src":"1214:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1213:9:17"},"scope":3372,"src":"1167:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"12edb24c","id":3235,"implemented":false,"kind":"function","modifiers":[],"name":"getAllRewardTokens","nameLocation":"1237:18:17","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[],"src":"1255:2:17"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3235,"src":"1281:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"1281:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3232,"nodeType":"ArrayTypeName","src":"1281:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1280:18:17"},"scope":3372,"src":"1228:71:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"008cc262","id":3243,"implemented":false,"kind":"function","modifiers":[],"name":"earned","nameLocation":"1313:6:17","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"account","nameLocation":"1328:7:17","nodeType":"VariableDeclaration","scope":3243,"src":"1320:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1319:17:17"},"returnParameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"new_earned","nameLocation":"1377:10:17","nodeType":"VariableDeclaration","scope":3243,"src":"1360:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3240,"nodeType":"ArrayTypeName","src":"1360:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1359:29:17"},"scope":3372,"src":"1304:85:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e01f62bf","id":3248,"implemented":false,"kind":"function","modifiers":[],"name":"totalLiquidityLocked","nameLocation":"1403:20:17","nodeType":"FunctionDefinition","parameters":{"id":3244,"nodeType":"ParameterList","parameters":[],"src":"1423:2:17"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3248,"src":"1449:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1449:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1448:9:17"},"scope":3372,"src":"1394:64:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d9f96e8d","id":3255,"implemented":false,"kind":"function","modifiers":[],"name":"lockedLiquidityOf","nameLocation":"1472:17:17","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"account","nameLocation":"1498:7:17","nodeType":"VariableDeclaration","scope":3255,"src":"1490:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3249,"name":"address","nodeType":"ElementaryTypeName","src":"1490:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1489:17:17"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3255,"src":"1530:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1530:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1529:9:17"},"scope":3372,"src":"1463:76:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"64f2c060","id":3260,"implemented":false,"kind":"function","modifiers":[],"name":"totalCombinedWeight","nameLocation":"1553:19:17","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[],"src":"1572:2:17"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"1598:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1597:9:17"},"scope":3372,"src":"1544:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"36f89af2","id":3267,"implemented":false,"kind":"function","modifiers":[],"name":"combinedWeightOf","nameLocation":"1621:16:17","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"account","nameLocation":"1646:7:17","nodeType":"VariableDeclaration","scope":3267,"src":"1638:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3261,"name":"address","nodeType":"ElementaryTypeName","src":"1638:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1637:17:17"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3267,"src":"1678:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1677:9:17"},"scope":3372,"src":"1612:75:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0d7bac4f","id":3274,"implemented":false,"kind":"function","modifiers":[],"name":"lockMultiplier","nameLocation":"1701:14:17","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"secs","nameLocation":"1724:4:17","nodeType":"VariableDeclaration","scope":3274,"src":"1716:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1715:14:17"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3274,"src":"1753:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1752:9:17"},"scope":3372,"src":"1692:70:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f2caeb1e","id":3281,"implemented":false,"kind":"function","modifiers":[],"name":"rewardRates","nameLocation":"1776:11:17","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"token_idx","nameLocation":"1796:9:17","nodeType":"VariableDeclaration","scope":3281,"src":"1788:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1787:19:17"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"rwd_rate","nameLocation":"1838:8:17","nodeType":"VariableDeclaration","scope":3281,"src":"1830:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:18:17"},"scope":3372,"src":"1767:81:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d42fc9b4","id":3288,"implemented":false,"kind":"function","modifiers":[],"name":"userStakedFrax","nameLocation":"1863:14:17","nodeType":"FunctionDefinition","parameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"account","nameLocation":"1886:7:17","nodeType":"VariableDeclaration","scope":3288,"src":"1878:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1877:17:17"},"returnParameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3288,"src":"1918:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1917:9:17"},"scope":3372,"src":"1854:73:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1face856","id":3295,"implemented":false,"kind":"function","modifiers":[],"name":"proxyStakedFrax","nameLocation":"1941:15:17","nodeType":"FunctionDefinition","parameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"proxy_address","nameLocation":"1965:13:17","nodeType":"VariableDeclaration","scope":3295,"src":"1957:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3289,"name":"address","nodeType":"ElementaryTypeName","src":"1957:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1956:23:17"},"returnParameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3295,"src":"2003:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2002:9:17"},"scope":3372,"src":"1932:80:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a0f23476","id":3302,"implemented":false,"kind":"function","modifiers":[],"name":"maxLPForMaxBoost","nameLocation":"2026:16:17","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"account","nameLocation":"2051:7:17","nodeType":"VariableDeclaration","scope":3302,"src":"2043:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3296,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2042:17:17"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"2083:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2082:9:17"},"scope":3372,"src":"2017:75:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4fd2b536","id":3309,"implemented":false,"kind":"function","modifiers":[],"name":"minVeFXSForMaxBoost","nameLocation":"2106:19:17","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"account","nameLocation":"2134:7:17","nodeType":"VariableDeclaration","scope":3309,"src":"2126:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3303,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2125:17:17"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3309,"src":"2166:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:17"},"scope":3372,"src":"2097:78:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7f472e54","id":3316,"implemented":false,"kind":"function","modifiers":[],"name":"minVeFXSForMaxBoostProxy","nameLocation":"2189:24:17","nodeType":"FunctionDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"proxy_address","nameLocation":"2222:13:17","nodeType":"VariableDeclaration","scope":3316,"src":"2214:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3310,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:23:17"},"returnParameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3316,"src":"2260:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2259:9:17"},"scope":3372,"src":"2180:89:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2c0c2a0a","id":3323,"implemented":false,"kind":"function","modifiers":[],"name":"veFXSMultiplier","nameLocation":"2283:15:17","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"account","nameLocation":"2307:7:17","nodeType":"VariableDeclaration","scope":3323,"src":"2299:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3317,"name":"address","nodeType":"ElementaryTypeName","src":"2299:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2298:17:17"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"vefxs_multiplier","nameLocation":"2347:16:17","nodeType":"VariableDeclaration","scope":3323,"src":"2339:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2338:26:17"},"scope":3372,"src":"2274:91:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"91cf600a","id":3328,"implemented":false,"kind":"function","modifiers":[],"name":"toggleValidVeFXSProxy","nameLocation":"2380:21:17","nodeType":"FunctionDefinition","parameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"proxy_address","nameLocation":"2410:13:17","nodeType":"VariableDeclaration","scope":3328,"src":"2402:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2401:23:17"},"returnParameters":{"id":3327,"nodeType":"ParameterList","parameters":[],"src":"2433:0:17"},"scope":3372,"src":"2371:63:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e7f30582","id":3333,"implemented":false,"kind":"function","modifiers":[],"name":"proxyToggleStaker","nameLocation":"2448:17:17","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"staker_address","nameLocation":"2474:14:17","nodeType":"VariableDeclaration","scope":3333,"src":"2466:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2465:24:17"},"returnParameters":{"id":3332,"nodeType":"ParameterList","parameters":[],"src":"2498:0:17"},"scope":3372,"src":"2439:60:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d7400d56","id":3338,"implemented":false,"kind":"function","modifiers":[],"name":"stakerSetVeFXSProxy","nameLocation":"2513:19:17","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3335,"mutability":"mutable","name":"proxy_address","nameLocation":"2541:13:17","nodeType":"VariableDeclaration","scope":3338,"src":"2533:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3334,"name":"address","nodeType":"ElementaryTypeName","src":"2533:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2532:23:17"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"2564:0:17"},"scope":3372,"src":"2504:61:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c00007b0","id":3346,"implemented":false,"kind":"function","modifiers":[],"name":"getReward","nameLocation":"2579:9:17","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"destination_address","nameLocation":"2597:19:17","nodeType":"VariableDeclaration","scope":3346,"src":"2589:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3339,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2588:29:17"},"returnParameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"2636:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2636:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ArrayTypeName","src":"2636:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2635:18:17"},"scope":3372,"src":"2570:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f288baf6","id":3351,"implemented":false,"kind":"function","modifiers":[],"name":"vefxs_max_multiplier","nameLocation":"2668:20:17","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[],"src":"2688:2:17"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3351,"src":"2713:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2713:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:9:17"},"scope":3372,"src":"2659:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aa1d4fce","id":3356,"implemented":false,"kind":"function","modifiers":[],"name":"vefxs_boost_scale_factor","nameLocation":"2736:24:17","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[],"src":"2760:2:17"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3356,"src":"2785:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2784:9:17"},"scope":3372,"src":"2727:67:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f2a8d349","id":3361,"implemented":false,"kind":"function","modifiers":[],"name":"vefxs_per_frax_for_max_boost","nameLocation":"2808:28:17","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[],"src":"2836:2:17"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3361,"src":"2861:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2860:9:17"},"scope":3372,"src":"2799:71:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c3543826","id":3368,"implemented":false,"kind":"function","modifiers":[],"name":"getProxyFor","nameLocation":"2884:11:17","nodeType":"FunctionDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"addr","nameLocation":"2904:4:17","nodeType":"VariableDeclaration","scope":3368,"src":"2896:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3362,"name":"address","nodeType":"ElementaryTypeName","src":"2896:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2895:14:17"},"returnParameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3368,"src":"2933:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3365,"name":"address","nodeType":"ElementaryTypeName","src":"2933:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2932:9:17"},"scope":3372,"src":"2875:67:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fff6cae9","id":3371,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"2957:4:17","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[],"src":"2961:2:17"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[],"src":"2972:0:17"},"scope":3372,"src":"2948:25:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3373,"src":"1:2974:17","usedErrors":[]}],"src":"1:2974:17"},"id":17},"contracts/interfaces/ILockManager.sol":{"ast":{"absolutePath":"contracts/interfaces/ILockManager.sol","exportedSymbols":{"ILockManager":[3440],"IRevest":[3947]},"id":3441,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":3374,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:18"},{"absolutePath":"contracts/interfaces/IRevest.sol","file":"./IRevest.sol","id":3375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3441,"sourceUnit":3948,"src":"77:23:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3440,"linearizedBaseContracts":[3440],"name":"ILockManager","nameLocation":"112:12:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd6aa4cf","id":3385,"implemented":false,"kind":"function","modifiers":[],"name":"createLock","nameLocation":"141:10:18","nodeType":"FunctionDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"fnftId","nameLocation":"157:6:18","nodeType":"VariableDeclaration","scope":3385,"src":"152:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint","nodeType":"ElementaryTypeName","src":"152:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"lock","nameLocation":"190:4:18","nodeType":"VariableDeclaration","scope":3385,"src":"165:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_LockParam_$3797_memory_ptr","typeString":"struct IRevest.LockParam"},"typeName":{"id":3379,"nodeType":"UserDefinedTypeName","pathNode":{"id":3378,"name":"IRevest.LockParam","nodeType":"IdentifierPath","referencedDeclaration":3797,"src":"165:17:18"},"referencedDeclaration":3797,"src":"165:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_LockParam_$3797_storage_ptr","typeString":"struct IRevest.LockParam"}},"visibility":"internal"}],"src":"151:44:18"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3385,"src":"214:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint","nodeType":"ElementaryTypeName","src":"214:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"213:6:18"},"scope":3440,"src":"132:88:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d68f4dd1","id":3393,"implemented":false,"kind":"function","modifiers":[],"name":"getLock","nameLocation":"235:7:18","nodeType":"FunctionDefinition","parameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"lockId","nameLocation":"248:6:18","nodeType":"VariableDeclaration","scope":3393,"src":"243:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint","nodeType":"ElementaryTypeName","src":"243:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"242:13:18"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3393,"src":"279:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Lock_$3812_memory_ptr","typeString":"struct IRevest.Lock"},"typeName":{"id":3390,"nodeType":"UserDefinedTypeName","pathNode":{"id":3389,"name":"IRevest.Lock","nodeType":"IdentifierPath","referencedDeclaration":3812,"src":"279:12:18"},"referencedDeclaration":3812,"src":"279:12:18","typeDescriptions":{"typeIdentifier":"t_struct$_Lock_$3812_storage_ptr","typeString":"struct IRevest.Lock"}},"visibility":"internal"}],"src":"278:21:18"},"scope":3440,"src":"226:74:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"29029c16","id":3400,"implemented":false,"kind":"function","modifiers":[],"name":"fnftIdToLockId","nameLocation":"315:14:18","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"fnftId","nameLocation":"335:6:18","nodeType":"VariableDeclaration","scope":3400,"src":"330:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint","nodeType":"ElementaryTypeName","src":"330:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"329:13:18"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3400,"src":"366:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint","nodeType":"ElementaryTypeName","src":"366:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"365:6:18"},"scope":3440,"src":"306:66:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3fe8ca06","id":3408,"implemented":false,"kind":"function","modifiers":[],"name":"fnftIdToLock","nameLocation":"387:12:18","nodeType":"FunctionDefinition","parameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"fnftId","nameLocation":"405:6:18","nodeType":"VariableDeclaration","scope":3408,"src":"400:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint","nodeType":"ElementaryTypeName","src":"400:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"399:13:18"},"returnParameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3408,"src":"436:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Lock_$3812_memory_ptr","typeString":"struct IRevest.Lock"},"typeName":{"id":3405,"nodeType":"UserDefinedTypeName","pathNode":{"id":3404,"name":"IRevest.Lock","nodeType":"IdentifierPath","referencedDeclaration":3812,"src":"436:12:18"},"referencedDeclaration":3812,"src":"436:12:18","typeDescriptions":{"typeIdentifier":"t_struct$_Lock_$3812_storage_ptr","typeString":"struct IRevest.Lock"}},"visibility":"internal"}],"src":"435:21:18"},"scope":3440,"src":"378:79:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d7f92205","id":3415,"implemented":false,"kind":"function","modifiers":[],"name":"pointFNFTToLock","nameLocation":"472:15:18","nodeType":"FunctionDefinition","parameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"fnftId","nameLocation":"493:6:18","nodeType":"VariableDeclaration","scope":3415,"src":"488:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint","nodeType":"ElementaryTypeName","src":"488:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"lockId","nameLocation":"506:6:18","nodeType":"VariableDeclaration","scope":3415,"src":"501:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint","nodeType":"ElementaryTypeName","src":"501:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:26:18"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[],"src":"522:0:18"},"scope":3440,"src":"463:60:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fc9ec25d","id":3423,"implemented":false,"kind":"function","modifiers":[],"name":"lockTypes","nameLocation":"538:9:18","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"tokenId","nameLocation":"553:7:18","nodeType":"VariableDeclaration","scope":3423,"src":"548:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint","nodeType":"ElementaryTypeName","src":"548:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"547:14:18"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3423,"src":"585:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"},"typeName":{"id":3420,"nodeType":"UserDefinedTypeName","pathNode":{"id":3419,"name":"IRevest.LockType","nodeType":"IdentifierPath","referencedDeclaration":3786,"src":"585:16:18"},"referencedDeclaration":3786,"src":"585:16:18","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"visibility":"internal"}],"src":"584:18:18"},"scope":3440,"src":"529:74:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fb684805","id":3432,"implemented":false,"kind":"function","modifiers":[],"name":"unlockFNFT","nameLocation":"618:10:18","nodeType":"FunctionDefinition","parameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"fnftId","nameLocation":"634:6:18","nodeType":"VariableDeclaration","scope":3432,"src":"629:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint","nodeType":"ElementaryTypeName","src":"629:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"sender","nameLocation":"650:6:18","nodeType":"VariableDeclaration","scope":3432,"src":"642:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"642:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"628:29:18"},"returnParameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3432,"src":"676:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3429,"name":"bool","nodeType":"ElementaryTypeName","src":"676:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"675:6:18"},"scope":3440,"src":"609:73:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cab4fb9c","id":3439,"implemented":false,"kind":"function","modifiers":[],"name":"getLockMaturity","nameLocation":"697:15:18","nodeType":"FunctionDefinition","parameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"fnftId","nameLocation":"718:6:18","nodeType":"VariableDeclaration","scope":3439,"src":"713:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint","nodeType":"ElementaryTypeName","src":"713:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"712:13:18"},"returnParameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3439,"src":"749:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3436,"name":"bool","nodeType":"ElementaryTypeName","src":"749:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"748:6:18"},"scope":3440,"src":"688:67:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3441,"src":"102:655:18","usedErrors":[]}],"src":"51:707:18"},"id":18},"contracts/interfaces/IOutputReceiver.sol":{"ast":{"absolutePath":"contracts/interfaces/IOutputReceiver.sol","exportedSymbols":{"IERC165":[863],"IOutputReceiver":[3489],"IRegistryProvider":[3661]},"id":3490,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":3442,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:19"},{"absolutePath":"contracts/interfaces/IRegistryProvider.sol","file":"./IRegistryProvider.sol","id":3443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3490,"sourceUnit":3662,"src":"77:33:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":3444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3490,"sourceUnit":864,"src":"111:65:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3446,"name":"IRegistryProvider","nodeType":"IdentifierPath","referencedDeclaration":3661,"src":"261:17:19"},"id":3447,"nodeType":"InheritanceSpecifier","src":"261:17:19"},{"baseName":{"id":3448,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":863,"src":"280:7:19"},"id":3449,"nodeType":"InheritanceSpecifier","src":"280:7:19"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3445,"nodeType":"StructuredDocumentation","src":"178:53:19","text":" @title Provider interface for Revest FNFTs"},"fullyImplemented":false,"id":3489,"linearizedBaseContracts":[3489,863,3661],"name":"IOutputReceiver","nameLocation":"242:15:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"aca1c665","id":3460,"implemented":false,"kind":"function","modifiers":[],"name":"receiveRevestOutput","nameLocation":"304:19:19","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"fnftId","nameLocation":"338:6:19","nodeType":"VariableDeclaration","scope":3460,"src":"333:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint","nodeType":"ElementaryTypeName","src":"333:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3453,"mutability":"mutable","name":"asset","nameLocation":"362:5:19","nodeType":"VariableDeclaration","scope":3460,"src":"354:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3452,"name":"address","nodeType":"ElementaryTypeName","src":"354:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"owner","nameLocation":"393:5:19","nodeType":"VariableDeclaration","scope":3460,"src":"377:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3454,"name":"address","nodeType":"ElementaryTypeName","src":"377:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"quantity","nameLocation":"413:8:19","nodeType":"VariableDeclaration","scope":3460,"src":"408:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint","nodeType":"ElementaryTypeName","src":"408:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"323:104:19"},"returnParameters":{"id":3459,"nodeType":"ParameterList","parameters":[],"src":"436:0:19"},"scope":3489,"src":"295:142:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"16f49e8a","id":3467,"implemented":false,"kind":"function","modifiers":[],"name":"getCustomMetadata","nameLocation":"452:17:19","nodeType":"FunctionDefinition","parameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"fnftId","nameLocation":"475:6:19","nodeType":"VariableDeclaration","scope":3467,"src":"470:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint","nodeType":"ElementaryTypeName","src":"470:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"469:13:19"},"returnParameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3467,"src":"506:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3464,"name":"string","nodeType":"ElementaryTypeName","src":"506:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"505:15:19"},"scope":3489,"src":"443:78:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0ff4c916","id":3474,"implemented":false,"kind":"function","modifiers":[],"name":"getValue","nameLocation":"536:8:19","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"fnftId","nameLocation":"550:6:19","nodeType":"VariableDeclaration","scope":3474,"src":"545:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint","nodeType":"ElementaryTypeName","src":"545:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"544:13:19"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3474,"src":"581:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint","nodeType":"ElementaryTypeName","src":"581:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:6:19"},"scope":3489,"src":"527:60:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"eac8f5b8","id":3481,"implemented":false,"kind":"function","modifiers":[],"name":"getAsset","nameLocation":"602:8:19","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"fnftId","nameLocation":"616:6:19","nodeType":"VariableDeclaration","scope":3481,"src":"611:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint","nodeType":"ElementaryTypeName","src":"611:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:13:19"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"647:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"646:9:19"},"scope":3489,"src":"593:63:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8ecacb1b","id":3488,"implemented":false,"kind":"function","modifiers":[],"name":"getOutputDisplayValues","nameLocation":"671:22:19","nodeType":"FunctionDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"fnftId","nameLocation":"699:6:19","nodeType":"VariableDeclaration","scope":3488,"src":"694:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint","nodeType":"ElementaryTypeName","src":"694:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"693:13:19"},"returnParameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"730:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3485,"name":"bytes","nodeType":"ElementaryTypeName","src":"730:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"729:14:19"},"scope":3489,"src":"662:82:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3490,"src":"232:515:19","usedErrors":[]}],"src":"51:697:19"},"id":19},"contracts/interfaces/IOutputReceiverV2.sol":{"ast":{"absolutePath":"contracts/interfaces/IOutputReceiverV2.sol","exportedSymbols":{"IERC165":[863],"IOutputReceiver":[3489],"IOutputReceiverV2":[3531],"IRegistryProvider":[3661],"IRevest":[3947]},"id":3532,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":3491,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:20"},{"absolutePath":"contracts/interfaces/IOutputReceiver.sol","file":"./IOutputReceiver.sol","id":3492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3532,"sourceUnit":3490,"src":"77:31:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRevest.sol","file":"./IRevest.sol","id":3493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3532,"sourceUnit":3948,"src":"109:23:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":3494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3532,"sourceUnit":864,"src":"133:65:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3496,"name":"IOutputReceiver","nodeType":"IdentifierPath","referencedDeclaration":3489,"src":"286:15:20"},"id":3497,"nodeType":"InheritanceSpecifier","src":"286:15:20"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3495,"nodeType":"StructuredDocumentation","src":"201:53:20","text":" @title Provider interface for Revest FNFTs"},"fullyImplemented":false,"id":3531,"linearizedBaseContracts":[3531,3489,863,3661],"name":"IOutputReceiverV2","nameLocation":"265:17:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f48fe050","id":3511,"implemented":false,"kind":"function","modifiers":[],"name":"receiveSecondaryCallback","nameLocation":"551:24:20","nodeType":"FunctionDefinition","parameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"fnftId","nameLocation":"590:6:20","nodeType":"VariableDeclaration","scope":3511,"src":"585:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint","nodeType":"ElementaryTypeName","src":"585:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3501,"mutability":"mutable","name":"owner","nameLocation":"622:5:20","nodeType":"VariableDeclaration","scope":3511,"src":"606:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"606:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"quantity","nameLocation":"642:8:20","nodeType":"VariableDeclaration","scope":3511,"src":"637:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint","nodeType":"ElementaryTypeName","src":"637:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3506,"mutability":"mutable","name":"config","nameLocation":"686:6:20","nodeType":"VariableDeclaration","scope":3511,"src":"660:32:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":3505,"nodeType":"UserDefinedTypeName","pathNode":{"id":3504,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"660:18:20"},"referencedDeclaration":3776,"src":"660:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"},{"constant":false,"id":3508,"mutability":"mutable","name":"args","nameLocation":"715:4:20","nodeType":"VariableDeclaration","scope":3511,"src":"702:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3507,"name":"bytes","nodeType":"ElementaryTypeName","src":"702:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"575:150:20"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[],"src":"742:0:20"},"scope":3531,"src":"542:201:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"d2551412","id":3518,"implemented":false,"kind":"function","modifiers":[],"name":"triggerOutputReceiverUpdate","nameLocation":"879:27:20","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"fnftId","nameLocation":"921:6:20","nodeType":"VariableDeclaration","scope":3518,"src":"916:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint","nodeType":"ElementaryTypeName","src":"916:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"args","nameLocation":"950:4:20","nodeType":"VariableDeclaration","scope":3518,"src":"937:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3514,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"906:54:20"},"returnParameters":{"id":3517,"nodeType":"ParameterList","parameters":[],"src":"969:0:20"},"scope":3531,"src":"870:100:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"644bf7d8","id":3530,"implemented":false,"kind":"function","modifiers":[],"name":"handleFNFTRemaps","nameLocation":"1082:16:20","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"fnftId","nameLocation":"1104:6:20","nodeType":"VariableDeclaration","scope":3530,"src":"1099:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint","nodeType":"ElementaryTypeName","src":"1099:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"newFNFTIds","nameLocation":"1126:10:20","nodeType":"VariableDeclaration","scope":3530,"src":"1112:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3521,"name":"uint","nodeType":"ElementaryTypeName","src":"1112:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ArrayTypeName","src":"1112:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"caller","nameLocation":"1146:6:20","nodeType":"VariableDeclaration","scope":3530,"src":"1138:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"cleanup","nameLocation":"1159:7:20","nodeType":"VariableDeclaration","scope":3530,"src":"1154:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3526,"name":"bool","nodeType":"ElementaryTypeName","src":"1154:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1098:69:20"},"returnParameters":{"id":3529,"nodeType":"ParameterList","parameters":[],"src":"1176:0:20"},"scope":3531,"src":"1073:104:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3532,"src":"255:925:20","usedErrors":[]}],"src":"51:1130:20"},"id":20},"contracts/interfaces/IOutputReceiverV3.sol":{"ast":{"absolutePath":"contracts/interfaces/IOutputReceiverV3.sol","exportedSymbols":{"IERC165":[863],"IOutputReceiver":[3489],"IOutputReceiverV2":[3531],"IOutputReceiverV3":[3648],"IRegistryProvider":[3661],"IRevest":[3947]},"id":3649,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":3533,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:21"},{"absolutePath":"contracts/interfaces/IOutputReceiverV2.sol","file":"./IOutputReceiverV2.sol","id":3534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3649,"sourceUnit":3532,"src":"77:33:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3536,"name":"IOutputReceiverV2","nodeType":"IdentifierPath","referencedDeclaration":3531,"src":"198:17:21"},"id":3537,"nodeType":"InheritanceSpecifier","src":"198:17:21"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3535,"nodeType":"StructuredDocumentation","src":"113:53:21","text":" @title Provider interface for Revest FNFTs"},"fullyImplemented":false,"id":3648,"linearizedBaseContracts":[3648,3531,3489,863,3661],"name":"IOutputReceiverV3","nameLocation":"177:17:21","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":3549,"name":"DepositERC20OutputReceiver","nameLocation":"229:26:21","nodeType":"EventDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"indexed":true,"mutability":"mutable","name":"mintTo","nameLocation":"272:6:21","nodeType":"VariableDeclaration","scope":3549,"src":"256:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3538,"name":"address","nodeType":"ElementaryTypeName","src":"256:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3541,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"296:5:21","nodeType":"VariableDeclaration","scope":3549,"src":"280:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3540,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3543,"indexed":false,"mutability":"mutable","name":"amountTokens","nameLocation":"308:12:21","nodeType":"VariableDeclaration","scope":3549,"src":"303:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint","nodeType":"ElementaryTypeName","src":"303:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"335:6:21","nodeType":"VariableDeclaration","scope":3549,"src":"322:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint","nodeType":"ElementaryTypeName","src":"322:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3547,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"349:9:21","nodeType":"VariableDeclaration","scope":3549,"src":"343:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3546,"name":"bytes","nodeType":"ElementaryTypeName","src":"343:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"255:104:21"},"src":"223:137:21"},{"anonymous":false,"id":3562,"name":"DepositERC721OutputReceiver","nameLocation":"372:27:21","nodeType":"EventDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"indexed":true,"mutability":"mutable","name":"mintTo","nameLocation":"416:6:21","nodeType":"VariableDeclaration","scope":3562,"src":"400:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3553,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"440:5:21","nodeType":"VariableDeclaration","scope":3562,"src":"424:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3552,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3556,"indexed":false,"mutability":"mutable","name":"tokenIds","nameLocation":"454:8:21","nodeType":"VariableDeclaration","scope":3562,"src":"447:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3554,"name":"uint","nodeType":"ElementaryTypeName","src":"447:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"nodeType":"ArrayTypeName","src":"447:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3558,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"477:6:21","nodeType":"VariableDeclaration","scope":3562,"src":"464:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint","nodeType":"ElementaryTypeName","src":"464:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3560,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"491:9:21","nodeType":"VariableDeclaration","scope":3562,"src":"485:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3559,"name":"bytes","nodeType":"ElementaryTypeName","src":"485:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"399:102:21"},"src":"366:136:21"},{"anonymous":false,"id":3576,"name":"DepositERC1155OutputReceiver","nameLocation":"514:28:21","nodeType":"EventDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"indexed":true,"mutability":"mutable","name":"mintTo","nameLocation":"559:6:21","nodeType":"VariableDeclaration","scope":3576,"src":"543:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3563,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3566,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"583:5:21","nodeType":"VariableDeclaration","scope":3576,"src":"567:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3565,"name":"address","nodeType":"ElementaryTypeName","src":"567:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3568,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"595:7:21","nodeType":"VariableDeclaration","scope":3576,"src":"590:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint","nodeType":"ElementaryTypeName","src":"590:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3570,"indexed":false,"mutability":"mutable","name":"amountTokens","nameLocation":"609:12:21","nodeType":"VariableDeclaration","scope":3576,"src":"604:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint","nodeType":"ElementaryTypeName","src":"604:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3572,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"636:6:21","nodeType":"VariableDeclaration","scope":3576,"src":"623:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint","nodeType":"ElementaryTypeName","src":"623:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3574,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"650:9:21","nodeType":"VariableDeclaration","scope":3576,"src":"644:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3573,"name":"bytes","nodeType":"ElementaryTypeName","src":"644:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"542:118:21"},"src":"508:153:21"},{"anonymous":false,"id":3588,"name":"WithdrawERC20OutputReceiver","nameLocation":"673:27:21","nodeType":"EventDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"717:6:21","nodeType":"VariableDeclaration","scope":3588,"src":"701:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3580,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"741:5:21","nodeType":"VariableDeclaration","scope":3588,"src":"725:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3579,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3582,"indexed":false,"mutability":"mutable","name":"amountTokens","nameLocation":"753:12:21","nodeType":"VariableDeclaration","scope":3588,"src":"748:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint","nodeType":"ElementaryTypeName","src":"748:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3584,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"780:6:21","nodeType":"VariableDeclaration","scope":3588,"src":"767:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint","nodeType":"ElementaryTypeName","src":"767:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3586,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"794:9:21","nodeType":"VariableDeclaration","scope":3588,"src":"788:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3585,"name":"bytes","nodeType":"ElementaryTypeName","src":"788:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"700:104:21"},"src":"667:138:21"},{"anonymous":false,"id":3601,"name":"WithdrawERC721OutputReceiver","nameLocation":"817:28:21","nodeType":"EventDefinition","parameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"862:6:21","nodeType":"VariableDeclaration","scope":3601,"src":"846:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3589,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3592,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"886:5:21","nodeType":"VariableDeclaration","scope":3601,"src":"870:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3591,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3595,"indexed":false,"mutability":"mutable","name":"tokenIds","nameLocation":"900:8:21","nodeType":"VariableDeclaration","scope":3601,"src":"893:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3593,"name":"uint","nodeType":"ElementaryTypeName","src":"893:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3594,"nodeType":"ArrayTypeName","src":"893:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3597,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"923:6:21","nodeType":"VariableDeclaration","scope":3601,"src":"910:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint","nodeType":"ElementaryTypeName","src":"910:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3599,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"937:9:21","nodeType":"VariableDeclaration","scope":3601,"src":"931:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3598,"name":"bytes","nodeType":"ElementaryTypeName","src":"931:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"845:102:21"},"src":"811:137:21"},{"anonymous":false,"id":3615,"name":"WithdrawERC1155OutputReceiver","nameLocation":"960:29:21","nodeType":"EventDefinition","parameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"1006:6:21","nodeType":"VariableDeclaration","scope":3615,"src":"990:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3602,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3605,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1030:5:21","nodeType":"VariableDeclaration","scope":3615,"src":"1014:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3604,"name":"address","nodeType":"ElementaryTypeName","src":"1014:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3607,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1042:7:21","nodeType":"VariableDeclaration","scope":3615,"src":"1037:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint","nodeType":"ElementaryTypeName","src":"1037:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3609,"indexed":false,"mutability":"mutable","name":"amountTokens","nameLocation":"1056:12:21","nodeType":"VariableDeclaration","scope":3615,"src":"1051:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint","nodeType":"ElementaryTypeName","src":"1051:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3611,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"1083:6:21","nodeType":"VariableDeclaration","scope":3615,"src":"1070:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint","nodeType":"ElementaryTypeName","src":"1070:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3613,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"1097:9:21","nodeType":"VariableDeclaration","scope":3615,"src":"1091:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3612,"name":"bytes","nodeType":"ElementaryTypeName","src":"1091:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"989:118:21"},"src":"954:154:21"},{"functionSelector":"1355f7ab","id":3624,"implemented":false,"kind":"function","modifiers":[],"name":"handleTimelockExtensions","nameLocation":"1123:24:21","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"fnftId","nameLocation":"1153:6:21","nodeType":"VariableDeclaration","scope":3624,"src":"1148:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint","nodeType":"ElementaryTypeName","src":"1148:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3619,"mutability":"mutable","name":"expiration","nameLocation":"1166:10:21","nodeType":"VariableDeclaration","scope":3624,"src":"1161:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3618,"name":"uint","nodeType":"ElementaryTypeName","src":"1161:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"caller","nameLocation":"1186:6:21","nodeType":"VariableDeclaration","scope":3624,"src":"1178:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3620,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1147:46:21"},"returnParameters":{"id":3623,"nodeType":"ParameterList","parameters":[],"src":"1202:0:21"},"scope":3648,"src":"1114:89:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1d145721","id":3635,"implemented":false,"kind":"function","modifiers":[],"name":"handleAdditionalDeposit","nameLocation":"1218:23:21","nodeType":"FunctionDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"fnftId","nameLocation":"1247:6:21","nodeType":"VariableDeclaration","scope":3635,"src":"1242:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint","nodeType":"ElementaryTypeName","src":"1242:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"amountToDeposit","nameLocation":"1260:15:21","nodeType":"VariableDeclaration","scope":3635,"src":"1255:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint","nodeType":"ElementaryTypeName","src":"1255:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"quantity","nameLocation":"1282:8:21","nodeType":"VariableDeclaration","scope":3635,"src":"1277:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint","nodeType":"ElementaryTypeName","src":"1277:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"caller","nameLocation":"1300:6:21","nodeType":"VariableDeclaration","scope":3635,"src":"1292:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3631,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1241:66:21"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[],"src":"1316:0:21"},"scope":3648,"src":"1209:108:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"76da63f3","id":3647,"implemented":false,"kind":"function","modifiers":[],"name":"handleSplitOperation","nameLocation":"1332:20:21","nodeType":"FunctionDefinition","parameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"fnftId","nameLocation":"1358:6:21","nodeType":"VariableDeclaration","scope":3647,"src":"1353:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint","nodeType":"ElementaryTypeName","src":"1353:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"proportions","nameLocation":"1380:11:21","nodeType":"VariableDeclaration","scope":3647,"src":"1366:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3638,"name":"uint","nodeType":"ElementaryTypeName","src":"1366:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3639,"nodeType":"ArrayTypeName","src":"1366:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"quantity","nameLocation":"1398:8:21","nodeType":"VariableDeclaration","scope":3647,"src":"1393:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint","nodeType":"ElementaryTypeName","src":"1393:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"caller","nameLocation":"1416:6:21","nodeType":"VariableDeclaration","scope":3647,"src":"1408:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3643,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1352:71:21"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[],"src":"1432:0:21"},"scope":3648,"src":"1323:110:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3649,"src":"167:1269:21","usedErrors":[]}],"src":"51:1386:21"},"id":21},"contracts/interfaces/IRegistryProvider.sol":{"ast":{"absolutePath":"contracts/interfaces/IRegistryProvider.sol","exportedSymbols":{"IRegistryProvider":[3661]},"id":3662,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":3650,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"51:23:22"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3661,"linearizedBaseContracts":[3661],"name":"IRegistryProvider","nameLocation":"86:17:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"27c7812c","id":3655,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressRegistry","nameLocation":"119:18:22","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"revest","nameLocation":"146:6:22","nodeType":"VariableDeclaration","scope":3655,"src":"138:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3651,"name":"address","nodeType":"ElementaryTypeName","src":"138:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"137:16:22"},"returnParameters":{"id":3654,"nodeType":"ParameterList","parameters":[],"src":"162:0:22"},"scope":3661,"src":"110:53:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8d9d6705","id":3660,"implemented":false,"kind":"function","modifiers":[],"name":"getAddressRegistry","nameLocation":"178:18:22","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[],"src":"196:2:22"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"222:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3657,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"221:9:22"},"scope":3661,"src":"169:62:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3662,"src":"76:157:22","usedErrors":[]}],"src":"51:183:22"},"id":22},"contracts/interfaces/IRevest.sol":{"ast":{"absolutePath":"contracts/interfaces/IRevest.sol","exportedSymbols":{"IRevest":[3947]},"id":3948,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":3663,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:23"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3947,"linearizedBaseContracts":[3947],"name":"IRevest","nameLocation":"87:7:23","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":3679,"name":"FNFTTimeLockMinted","nameLocation":"107:18:23","nodeType":"EventDefinition","parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"151:5:23","nodeType":"VariableDeclaration","scope":3679,"src":"135:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"135:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3667,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"182:4:23","nodeType":"VariableDeclaration","scope":3679,"src":"166:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"166:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3669,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"209:6:23","nodeType":"VariableDeclaration","scope":3679,"src":"196:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint","nodeType":"ElementaryTypeName","src":"196:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3671,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"230:7:23","nodeType":"VariableDeclaration","scope":3679,"src":"225:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint","nodeType":"ElementaryTypeName","src":"225:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3674,"indexed":false,"mutability":"mutable","name":"quantities","nameLocation":"254:10:23","nodeType":"VariableDeclaration","scope":3679,"src":"247:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3672,"name":"uint","nodeType":"ElementaryTypeName","src":"247:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ArrayTypeName","src":"247:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3677,"indexed":false,"mutability":"mutable","name":"fnftConfig","nameLocation":"285:10:23","nodeType":"VariableDeclaration","scope":3679,"src":"274:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":3676,"nodeType":"UserDefinedTypeName","pathNode":{"id":3675,"name":"FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"274:10:23"},"referencedDeclaration":3776,"src":"274:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"125:176:23"},"src":"101:201:23"},{"anonymous":false,"id":3697,"name":"FNFTValueLockMinted","nameLocation":"314:19:23","nodeType":"EventDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"359:5:23","nodeType":"VariableDeclaration","scope":3697,"src":"343:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3680,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3683,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"390:4:23","nodeType":"VariableDeclaration","scope":3697,"src":"374:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3682,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3685,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"417:6:23","nodeType":"VariableDeclaration","scope":3697,"src":"404:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint","nodeType":"ElementaryTypeName","src":"404:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3687,"indexed":false,"mutability":"mutable","name":"compareTo","nameLocation":"441:9:23","nodeType":"VariableDeclaration","scope":3697,"src":"433:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3686,"name":"address","nodeType":"ElementaryTypeName","src":"433:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3689,"indexed":false,"mutability":"mutable","name":"oracleDispatch","nameLocation":"468:14:23","nodeType":"VariableDeclaration","scope":3697,"src":"460:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3688,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3692,"indexed":false,"mutability":"mutable","name":"quantities","nameLocation":"499:10:23","nodeType":"VariableDeclaration","scope":3697,"src":"492:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3690,"name":"uint","nodeType":"ElementaryTypeName","src":"492:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3691,"nodeType":"ArrayTypeName","src":"492:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3695,"indexed":false,"mutability":"mutable","name":"fnftConfig","nameLocation":"530:10:23","nodeType":"VariableDeclaration","scope":3697,"src":"519:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":3694,"nodeType":"UserDefinedTypeName","pathNode":{"id":3693,"name":"FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"519:10:23"},"referencedDeclaration":3776,"src":"519:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"333:213:23"},"src":"308:239:23"},{"anonymous":false,"id":3713,"name":"FNFTAddressLockMinted","nameLocation":"559:21:23","nodeType":"EventDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"606:5:23","nodeType":"VariableDeclaration","scope":3713,"src":"590:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"590:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3701,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"637:4:23","nodeType":"VariableDeclaration","scope":3713,"src":"621:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3700,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3703,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"664:6:23","nodeType":"VariableDeclaration","scope":3713,"src":"651:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint","nodeType":"ElementaryTypeName","src":"651:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3705,"indexed":false,"mutability":"mutable","name":"trigger","nameLocation":"688:7:23","nodeType":"VariableDeclaration","scope":3713,"src":"680:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3704,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3708,"indexed":false,"mutability":"mutable","name":"quantities","nameLocation":"712:10:23","nodeType":"VariableDeclaration","scope":3713,"src":"705:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3706,"name":"uint","nodeType":"ElementaryTypeName","src":"705:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"nodeType":"ArrayTypeName","src":"705:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3711,"indexed":false,"mutability":"mutable","name":"fnftConfig","nameLocation":"743:10:23","nodeType":"VariableDeclaration","scope":3713,"src":"732:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":3710,"nodeType":"UserDefinedTypeName","pathNode":{"id":3709,"name":"FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"732:10:23"},"referencedDeclaration":3776,"src":"732:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"580:179:23"},"src":"553:207:23"},{"anonymous":false,"id":3721,"name":"FNFTWithdrawn","nameLocation":"772:13:23","nodeType":"EventDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"811:4:23","nodeType":"VariableDeclaration","scope":3721,"src":"795:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3714,"name":"address","nodeType":"ElementaryTypeName","src":"795:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3717,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"838:6:23","nodeType":"VariableDeclaration","scope":3721,"src":"825:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint","nodeType":"ElementaryTypeName","src":"825:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3719,"indexed":true,"mutability":"mutable","name":"quantity","nameLocation":"867:8:23","nodeType":"VariableDeclaration","scope":3721,"src":"854:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint","nodeType":"ElementaryTypeName","src":"854:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"785:96:23"},"src":"766:116:23"},{"anonymous":false,"id":3733,"name":"FNFTSplit","nameLocation":"894:9:23","nodeType":"EventDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"929:4:23","nodeType":"VariableDeclaration","scope":3733,"src":"913:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"913:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3726,"indexed":true,"mutability":"mutable","name":"newFNFTId","nameLocation":"958:9:23","nodeType":"VariableDeclaration","scope":3733,"src":"943:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3724,"name":"uint","nodeType":"ElementaryTypeName","src":"943:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ArrayTypeName","src":"943:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3729,"indexed":true,"mutability":"mutable","name":"proportions","nameLocation":"992:11:23","nodeType":"VariableDeclaration","scope":3733,"src":"977:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3727,"name":"uint","nodeType":"ElementaryTypeName","src":"977:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3728,"nodeType":"ArrayTypeName","src":"977:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3731,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"1018:8:23","nodeType":"VariableDeclaration","scope":3733,"src":"1013:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint","nodeType":"ElementaryTypeName","src":"1013:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"903:129:23"},"src":"888:145:23"},{"anonymous":false,"id":3739,"name":"FNFTUnlocked","nameLocation":"1045:12:23","nodeType":"EventDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1083:4:23","nodeType":"VariableDeclaration","scope":3739,"src":"1067:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3734,"name":"address","nodeType":"ElementaryTypeName","src":"1067:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3737,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"1110:6:23","nodeType":"VariableDeclaration","scope":3739,"src":"1097:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint","nodeType":"ElementaryTypeName","src":"1097:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1057:65:23"},"src":"1039:84:23"},{"anonymous":false,"id":3747,"name":"FNFTMaturityExtended","nameLocation":"1135:20:23","nodeType":"EventDefinition","parameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3741,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1181:4:23","nodeType":"VariableDeclaration","scope":3747,"src":"1165:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3740,"name":"address","nodeType":"ElementaryTypeName","src":"1165:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3743,"indexed":true,"mutability":"mutable","name":"fnftId","nameLocation":"1208:6:23","nodeType":"VariableDeclaration","scope":3747,"src":"1195:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint","nodeType":"ElementaryTypeName","src":"1195:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3745,"indexed":true,"mutability":"mutable","name":"newExtendedTime","nameLocation":"1237:15:23","nodeType":"VariableDeclaration","scope":3747,"src":"1224:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint","nodeType":"ElementaryTypeName","src":"1224:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:103:23"},"src":"1129:130:23"},{"anonymous":false,"id":3757,"name":"FNFTAddionalDeposited","nameLocation":"1271:21:23","nodeType":"EventDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1318:4:23","nodeType":"VariableDeclaration","scope":3757,"src":"1302:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3748,"name":"address","nodeType":"ElementaryTypeName","src":"1302:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3751,"indexed":true,"mutability":"mutable","name":"newFNFTId","nameLocation":"1345:9:23","nodeType":"VariableDeclaration","scope":3757,"src":"1332:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint","nodeType":"ElementaryTypeName","src":"1332:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3753,"indexed":true,"mutability":"mutable","name":"quantity","nameLocation":"1377:8:23","nodeType":"VariableDeclaration","scope":3757,"src":"1364:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint","nodeType":"ElementaryTypeName","src":"1364:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3755,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1400:6:23","nodeType":"VariableDeclaration","scope":3757,"src":"1395:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint","nodeType":"ElementaryTypeName","src":"1395:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:120:23"},"src":"1265:148:23"},{"canonicalName":"IRevest.FNFTConfig","id":3776,"members":[{"constant":false,"id":3759,"mutability":"mutable","name":"asset","nameLocation":"1455:5:23","nodeType":"VariableDeclaration","scope":3776,"src":"1447:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3758,"name":"address","nodeType":"ElementaryTypeName","src":"1447:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"pipeToContract","nameLocation":"1504:14:23","nodeType":"VariableDeclaration","scope":3776,"src":"1496:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3760,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3763,"mutability":"mutable","name":"depositAmount","nameLocation":"1584:13:23","nodeType":"VariableDeclaration","scope":3776,"src":"1579:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint","nodeType":"ElementaryTypeName","src":"1579:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3765,"mutability":"mutable","name":"depositMul","nameLocation":"1631:10:23","nodeType":"VariableDeclaration","scope":3776,"src":"1626:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint","nodeType":"ElementaryTypeName","src":"1626:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"split","nameLocation":"1678:5:23","nodeType":"VariableDeclaration","scope":3776,"src":"1673:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint","nodeType":"ElementaryTypeName","src":"1673:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"depositStopTime","nameLocation":"1728:15:23","nodeType":"VariableDeclaration","scope":3776,"src":"1723:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint","nodeType":"ElementaryTypeName","src":"1723:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"maturityExtension","nameLocation":"1761:17:23","nodeType":"VariableDeclaration","scope":3776,"src":"1756:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3770,"name":"bool","nodeType":"ElementaryTypeName","src":"1756:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"isMulti","nameLocation":"1826:7:23","nodeType":"VariableDeclaration","scope":3776,"src":"1821:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3772,"name":"bool","nodeType":"ElementaryTypeName","src":"1821:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"nontransferrable","nameLocation":"1851:16:23","nodeType":"VariableDeclaration","scope":3776,"src":"1846:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3774,"name":"bool","nodeType":"ElementaryTypeName","src":"1846:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FNFTConfig","nameLocation":"1426:10:23","nodeType":"StructDefinition","scope":3947,"src":"1419:494:23","visibility":"public"},{"canonicalName":"IRevest.TokenTracker","id":3781,"members":[{"constant":false,"id":3778,"mutability":"mutable","name":"lastBalance","nameLocation":"2037:11:23","nodeType":"VariableDeclaration","scope":3781,"src":"2032:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint","nodeType":"ElementaryTypeName","src":"2032:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"lastMul","nameLocation":"2063:7:23","nodeType":"VariableDeclaration","scope":3781,"src":"2058:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint","nodeType":"ElementaryTypeName","src":"2058:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenTracker","nameLocation":"2009:12:23","nodeType":"StructDefinition","scope":3947,"src":"2002:75:23","visibility":"public"},{"canonicalName":"IRevest.LockType","id":3786,"members":[{"id":3782,"name":"DoesNotExist","nameLocation":"2107:12:23","nodeType":"EnumValue","src":"2107:12:23"},{"id":3783,"name":"TimeLock","nameLocation":"2129:8:23","nodeType":"EnumValue","src":"2129:8:23"},{"id":3784,"name":"ValueLock","nameLocation":"2147:9:23","nodeType":"EnumValue","src":"2147:9:23"},{"id":3785,"name":"AddressLock","nameLocation":"2166:11:23","nodeType":"EnumValue","src":"2166:11:23"}],"name":"LockType","nameLocation":"2088:8:23","nodeType":"EnumDefinition","src":"2083:100:23"},{"canonicalName":"IRevest.LockParam","id":3797,"members":[{"constant":false,"id":3788,"mutability":"mutable","name":"addressLock","nameLocation":"2224:11:23","nodeType":"VariableDeclaration","scope":3797,"src":"2216:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3787,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"timeLockExpiry","nameLocation":"2250:14:23","nodeType":"VariableDeclaration","scope":3797,"src":"2245:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint","nodeType":"ElementaryTypeName","src":"2245:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"lockType","nameLocation":"2283:8:23","nodeType":"VariableDeclaration","scope":3797,"src":"2274:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"},"typeName":{"id":3792,"nodeType":"UserDefinedTypeName","pathNode":{"id":3791,"name":"LockType","nodeType":"IdentifierPath","referencedDeclaration":3786,"src":"2274:8:23"},"referencedDeclaration":3786,"src":"2274:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"visibility":"internal"},{"constant":false,"id":3796,"mutability":"mutable","name":"valueLock","nameLocation":"2311:9:23","nodeType":"VariableDeclaration","scope":3797,"src":"2301:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ValueLock_$3823_storage_ptr","typeString":"struct IRevest.ValueLock"},"typeName":{"id":3795,"nodeType":"UserDefinedTypeName","pathNode":{"id":3794,"name":"ValueLock","nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"2301:9:23"},"referencedDeclaration":3823,"src":"2301:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValueLock_$3823_storage_ptr","typeString":"struct IRevest.ValueLock"}},"visibility":"internal"}],"name":"LockParam","nameLocation":"2196:9:23","nodeType":"StructDefinition","scope":3947,"src":"2189:138:23","visibility":"public"},{"canonicalName":"IRevest.Lock","id":3812,"members":[{"constant":false,"id":3799,"mutability":"mutable","name":"addressLock","nameLocation":"2363:11:23","nodeType":"VariableDeclaration","scope":3812,"src":"2355:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3798,"name":"address","nodeType":"ElementaryTypeName","src":"2355:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"lockType","nameLocation":"2393:8:23","nodeType":"VariableDeclaration","scope":3812,"src":"2384:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"},"typeName":{"id":3801,"nodeType":"UserDefinedTypeName","pathNode":{"id":3800,"name":"LockType","nodeType":"IdentifierPath","referencedDeclaration":3786,"src":"2384:8:23"},"referencedDeclaration":3786,"src":"2384:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"valueLock","nameLocation":"2421:9:23","nodeType":"VariableDeclaration","scope":3812,"src":"2411:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ValueLock_$3823_storage_ptr","typeString":"struct IRevest.ValueLock"},"typeName":{"id":3804,"nodeType":"UserDefinedTypeName","pathNode":{"id":3803,"name":"ValueLock","nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"2411:9:23"},"referencedDeclaration":3823,"src":"2411:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValueLock_$3823_storage_ptr","typeString":"struct IRevest.ValueLock"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"timeLockExpiry","nameLocation":"2445:14:23","nodeType":"VariableDeclaration","scope":3812,"src":"2440:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint","nodeType":"ElementaryTypeName","src":"2440:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"creationTime","nameLocation":"2474:12:23","nodeType":"VariableDeclaration","scope":3812,"src":"2469:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint","nodeType":"ElementaryTypeName","src":"2469:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"unlocked","nameLocation":"2501:8:23","nodeType":"VariableDeclaration","scope":3812,"src":"2496:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3810,"name":"bool","nodeType":"ElementaryTypeName","src":"2496:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Lock","nameLocation":"2340:4:23","nodeType":"StructDefinition","scope":3947,"src":"2333:183:23","visibility":"public"},{"canonicalName":"IRevest.ValueLock","id":3823,"members":[{"constant":false,"id":3814,"mutability":"mutable","name":"asset","nameLocation":"2557:5:23","nodeType":"VariableDeclaration","scope":3823,"src":"2549:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"2549:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"compareTo","nameLocation":"2580:9:23","nodeType":"VariableDeclaration","scope":3823,"src":"2572:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3815,"name":"address","nodeType":"ElementaryTypeName","src":"2572:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"oracle","nameLocation":"2607:6:23","nodeType":"VariableDeclaration","scope":3823,"src":"2599:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3817,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"unlockValue","nameLocation":"2628:11:23","nodeType":"VariableDeclaration","scope":3823,"src":"2623:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint","nodeType":"ElementaryTypeName","src":"2623:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"unlockRisingEdge","nameLocation":"2654:16:23","nodeType":"VariableDeclaration","scope":3823,"src":"2649:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3821,"name":"bool","nodeType":"ElementaryTypeName","src":"2649:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ValueLock","nameLocation":"2529:9:23","nodeType":"StructDefinition","scope":3947,"src":"2522:155:23","visibility":"public"},{"functionSelector":"5a7c08f0","id":3839,"implemented":false,"kind":"function","modifiers":[],"name":"mintTimeLock","nameLocation":"2692:12:23","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"endTime","nameLocation":"2719:7:23","nodeType":"VariableDeclaration","scope":3839,"src":"2714:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint","nodeType":"ElementaryTypeName","src":"2714:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"recipients","nameLocation":"2753:10:23","nodeType":"VariableDeclaration","scope":3839,"src":"2736:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3826,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3827,"nodeType":"ArrayTypeName","src":"2736:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"quantities","nameLocation":"2787:10:23","nodeType":"VariableDeclaration","scope":3839,"src":"2773:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3829,"name":"uint","nodeType":"ElementaryTypeName","src":"2773:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3830,"nodeType":"ArrayTypeName","src":"2773:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"fnftConfig","nameLocation":"2833:10:23","nodeType":"VariableDeclaration","scope":3839,"src":"2807:36:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":3833,"nodeType":"UserDefinedTypeName","pathNode":{"id":3832,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"2807:18:23"},"referencedDeclaration":3776,"src":"2807:18:23","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"2704:145:23"},"returnParameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3839,"src":"2876:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint","nodeType":"ElementaryTypeName","src":"2876:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2875:6:23"},"scope":3947,"src":"2683:199:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"bdb132d5","id":3863,"implemented":false,"kind":"function","modifiers":[],"name":"mintValueLock","nameLocation":"2897:13:23","nodeType":"FunctionDefinition","parameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"primaryAsset","nameLocation":"2928:12:23","nodeType":"VariableDeclaration","scope":3863,"src":"2920:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"2920:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"compareTo","nameLocation":"2958:9:23","nodeType":"VariableDeclaration","scope":3863,"src":"2950:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3842,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"unlockValue","nameLocation":"2982:11:23","nodeType":"VariableDeclaration","scope":3863,"src":"2977:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint","nodeType":"ElementaryTypeName","src":"2977:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"unlockRisingEdge","nameLocation":"3008:16:23","nodeType":"VariableDeclaration","scope":3863,"src":"3003:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3846,"name":"bool","nodeType":"ElementaryTypeName","src":"3003:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"oracleDispatch","nameLocation":"3042:14:23","nodeType":"VariableDeclaration","scope":3863,"src":"3034:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3848,"name":"address","nodeType":"ElementaryTypeName","src":"3034:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"recipients","nameLocation":"3083:10:23","nodeType":"VariableDeclaration","scope":3863,"src":"3066:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3850,"name":"address","nodeType":"ElementaryTypeName","src":"3066:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3851,"nodeType":"ArrayTypeName","src":"3066:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"quantities","nameLocation":"3117:10:23","nodeType":"VariableDeclaration","scope":3863,"src":"3103:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3853,"name":"uint","nodeType":"ElementaryTypeName","src":"3103:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3854,"nodeType":"ArrayTypeName","src":"3103:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"fnftConfig","nameLocation":"3163:10:23","nodeType":"VariableDeclaration","scope":3863,"src":"3137:36:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":3857,"nodeType":"UserDefinedTypeName","pathNode":{"id":3856,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"3137:18:23"},"referencedDeclaration":3776,"src":"3137:18:23","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"2910:269:23"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"3206:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint","nodeType":"ElementaryTypeName","src":"3206:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3205:6:23"},"scope":3947,"src":"2888:324:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"02e236bc","id":3881,"implemented":false,"kind":"function","modifiers":[],"name":"mintAddressLock","nameLocation":"3227:15:23","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"trigger","nameLocation":"3260:7:23","nodeType":"VariableDeclaration","scope":3881,"src":"3252:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3864,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"arguments","nameLocation":"3290:9:23","nodeType":"VariableDeclaration","scope":3881,"src":"3277:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3866,"name":"bytes","nodeType":"ElementaryTypeName","src":"3277:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"recipients","nameLocation":"3326:10:23","nodeType":"VariableDeclaration","scope":3881,"src":"3309:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3868,"name":"address","nodeType":"ElementaryTypeName","src":"3309:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3869,"nodeType":"ArrayTypeName","src":"3309:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"quantities","nameLocation":"3360:10:23","nodeType":"VariableDeclaration","scope":3881,"src":"3346:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3871,"name":"uint","nodeType":"ElementaryTypeName","src":"3346:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3872,"nodeType":"ArrayTypeName","src":"3346:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"fnftConfig","nameLocation":"3406:10:23","nodeType":"VariableDeclaration","scope":3881,"src":"3380:36:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":3875,"nodeType":"UserDefinedTypeName","pathNode":{"id":3874,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"3380:18:23"},"referencedDeclaration":3776,"src":"3380:18:23","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"3242:180:23"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3881,"src":"3449:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint","nodeType":"ElementaryTypeName","src":"3449:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:6:23"},"scope":3947,"src":"3218:237:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"f2465f09","id":3888,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFNFT","nameLocation":"3470:12:23","nodeType":"FunctionDefinition","parameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"tokenUID","nameLocation":"3488:8:23","nodeType":"VariableDeclaration","scope":3888,"src":"3483:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint","nodeType":"ElementaryTypeName","src":"3483:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"quantity","nameLocation":"3503:8:23","nodeType":"VariableDeclaration","scope":3888,"src":"3498:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint","nodeType":"ElementaryTypeName","src":"3498:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3482:30:23"},"returnParameters":{"id":3887,"nodeType":"ParameterList","parameters":[],"src":"3521:0:23"},"scope":3947,"src":"3461:61:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"22caa234","id":3893,"implemented":false,"kind":"function","modifiers":[],"name":"unlockFNFT","nameLocation":"3537:10:23","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"tokenUID","nameLocation":"3553:8:23","nodeType":"VariableDeclaration","scope":3893,"src":"3548:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint","nodeType":"ElementaryTypeName","src":"3548:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3547:15:23"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[],"src":"3571:0:23"},"scope":3947,"src":"3528:44:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fccc19d0","id":3906,"implemented":false,"kind":"function","modifiers":[],"name":"splitFNFT","nameLocation":"3587:9:23","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"fnftId","nameLocation":"3611:6:23","nodeType":"VariableDeclaration","scope":3906,"src":"3606:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint","nodeType":"ElementaryTypeName","src":"3606:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"proportions","nameLocation":"3641:11:23","nodeType":"VariableDeclaration","scope":3906,"src":"3627:25:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3896,"name":"uint","nodeType":"ElementaryTypeName","src":"3627:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3897,"nodeType":"ArrayTypeName","src":"3627:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"quantity","nameLocation":"3667:8:23","nodeType":"VariableDeclaration","scope":3906,"src":"3662:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint","nodeType":"ElementaryTypeName","src":"3662:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3596:85:23"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"newFNFTIds","nameLocation":"3714:10:23","nodeType":"VariableDeclaration","scope":3906,"src":"3700:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3902,"name":"uint","nodeType":"ElementaryTypeName","src":"3700:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3903,"nodeType":"ArrayTypeName","src":"3700:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3699:26:23"},"scope":3947,"src":"3578:148:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5dcb7ab2","id":3917,"implemented":false,"kind":"function","modifiers":[],"name":"depositAdditionalToFNFT","nameLocation":"3741:23:23","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"fnftId","nameLocation":"3779:6:23","nodeType":"VariableDeclaration","scope":3917,"src":"3774:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint","nodeType":"ElementaryTypeName","src":"3774:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"amount","nameLocation":"3800:6:23","nodeType":"VariableDeclaration","scope":3917,"src":"3795:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint","nodeType":"ElementaryTypeName","src":"3795:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"quantity","nameLocation":"3821:8:23","nodeType":"VariableDeclaration","scope":3917,"src":"3816:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint","nodeType":"ElementaryTypeName","src":"3816:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3764:71:23"},"returnParameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3917,"src":"3854:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint","nodeType":"ElementaryTypeName","src":"3854:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3853:6:23"},"scope":3947,"src":"3732:128:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"93a9003c","id":3926,"implemented":false,"kind":"function","modifiers":[],"name":"extendFNFTMaturity","nameLocation":"3875:18:23","nodeType":"FunctionDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"fnftId","nameLocation":"3908:6:23","nodeType":"VariableDeclaration","scope":3926,"src":"3903:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3918,"name":"uint","nodeType":"ElementaryTypeName","src":"3903:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"endTime","nameLocation":"3929:7:23","nodeType":"VariableDeclaration","scope":3926,"src":"3924:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint","nodeType":"ElementaryTypeName","src":"3924:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3893:49:23"},"returnParameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3926,"src":"3961:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint","nodeType":"ElementaryTypeName","src":"3961:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3960:6:23"},"scope":3947,"src":"3866:101:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"58efe201","id":3931,"implemented":false,"kind":"function","modifiers":[],"name":"setFlatWeiFee","nameLocation":"3982:13:23","nodeType":"FunctionDefinition","parameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"wethFee","nameLocation":"4001:7:23","nodeType":"VariableDeclaration","scope":3931,"src":"3996:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint","nodeType":"ElementaryTypeName","src":"3996:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:14:23"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[],"src":"4018:0:23"},"scope":3947,"src":"3973:46:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bc2ab8ce","id":3936,"implemented":false,"kind":"function","modifiers":[],"name":"setERC20Fee","nameLocation":"4034:11:23","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"erc20","nameLocation":"4051:5:23","nodeType":"VariableDeclaration","scope":3936,"src":"4046:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint","nodeType":"ElementaryTypeName","src":"4046:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4045:12:23"},"returnParameters":{"id":3935,"nodeType":"ParameterList","parameters":[],"src":"4066:0:23"},"scope":3947,"src":"4025:42:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42de99fe","id":3941,"implemented":false,"kind":"function","modifiers":[],"name":"getFlatWeiFee","nameLocation":"4082:13:23","nodeType":"FunctionDefinition","parameters":{"id":3937,"nodeType":"ParameterList","parameters":[],"src":"4095:2:23"},"returnParameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3941,"src":"4121:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint","nodeType":"ElementaryTypeName","src":"4121:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4120:6:23"},"scope":3947,"src":"4073:54:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ecea07d8","id":3946,"implemented":false,"kind":"function","modifiers":[],"name":"getERC20Fee","nameLocation":"4142:11:23","nodeType":"FunctionDefinition","parameters":{"id":3942,"nodeType":"ParameterList","parameters":[],"src":"4153:2:23"},"returnParameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3946,"src":"4179:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint","nodeType":"ElementaryTypeName","src":"4179:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4178:6:23"},"scope":3947,"src":"4133:52:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3948,"src":"77:4112:23","usedErrors":[]}],"src":"51:4139:23"},"id":23},"contracts/interfaces/IRewards.sol":{"ast":{"absolutePath":"contracts/interfaces/IRewards.sol","exportedSymbols":{"IRewards":[4037]},"id":4038,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":3949,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:25:24"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4037,"linearizedBaseContracts":[4037],"name":"IRewards","nameLocation":"88:8:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRewards.EarnedData","id":3954,"members":[{"constant":false,"id":3951,"mutability":"mutable","name":"token","nameLocation":"138:5:24","nodeType":"VariableDeclaration","scope":3954,"src":"130:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"amount","nameLocation":"161:6:24","nodeType":"VariableDeclaration","scope":3954,"src":"153:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"EarnedData","nameLocation":"109:10:24","nodeType":"StructDefinition","scope":4037,"src":"102:72:24","visibility":"public"},{"functionSelector":"27964666","id":3961,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"193:10:24","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"_pid","nameLocation":"212:4:24","nodeType":"VariableDeclaration","scope":3961,"src":"204:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"204:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"_startActive","nameLocation":"223:12:24","nodeType":"VariableDeclaration","scope":3961,"src":"218:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3957,"name":"bool","nodeType":"ElementaryTypeName","src":"218:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"203:33:24"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[],"src":"245:0:24"},"scope":4037,"src":"184:62:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"40b47e1a","id":3968,"implemented":false,"kind":"function","modifiers":[],"name":"addReward","nameLocation":"260:9:24","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"_rewardsToken","nameLocation":"278:13:24","nodeType":"VariableDeclaration","scope":3968,"src":"270:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3962,"name":"address","nodeType":"ElementaryTypeName","src":"270:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"_distributor","nameLocation":"301:12:24","nodeType":"VariableDeclaration","scope":3968,"src":"293:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"293:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"269:45:24"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[],"src":"323:0:24"},"scope":4037,"src":"251:73:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6724c910","id":3977,"implemented":false,"kind":"function","modifiers":[],"name":"approveRewardDistributor","nameLocation":"338:24:24","nodeType":"FunctionDefinition","parameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"_rewardsToken","nameLocation":"380:13:24","nodeType":"VariableDeclaration","scope":3977,"src":"372:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3969,"name":"address","nodeType":"ElementaryTypeName","src":"372:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3972,"mutability":"mutable","name":"_distributor","nameLocation":"411:12:24","nodeType":"VariableDeclaration","scope":3977,"src":"403:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3971,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3974,"mutability":"mutable","name":"_approved","nameLocation":"438:9:24","nodeType":"VariableDeclaration","scope":3977,"src":"433:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3973,"name":"bool","nodeType":"ElementaryTypeName","src":"433:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"362:91:24"},"returnParameters":{"id":3976,"nodeType":"ParameterList","parameters":[],"src":"462:0:24"},"scope":4037,"src":"329:134:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"47e7ef24","id":3984,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"477:7:24","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"_owner","nameLocation":"493:6:24","nodeType":"VariableDeclaration","scope":3984,"src":"485:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3978,"name":"address","nodeType":"ElementaryTypeName","src":"485:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"_amount","nameLocation":"509:7:24","nodeType":"VariableDeclaration","scope":3984,"src":"501:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"501:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"484:33:24"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[],"src":"526:0:24"},"scope":4037,"src":"468:59:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f3fef3a3","id":3991,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"541:8:24","nodeType":"FunctionDefinition","parameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"_owner","nameLocation":"558:6:24","nodeType":"VariableDeclaration","scope":3991,"src":"550:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3985,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"_amount","nameLocation":"574:7:24","nodeType":"VariableDeclaration","scope":3991,"src":"566:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"549:33:24"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[],"src":"591:0:24"},"scope":4037,"src":"532:60:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c00007b0","id":3996,"implemented":false,"kind":"function","modifiers":[],"name":"getReward","nameLocation":"606:9:24","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"_forward","nameLocation":"624:8:24","nodeType":"VariableDeclaration","scope":3996,"src":"616:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3992,"name":"address","nodeType":"ElementaryTypeName","src":"616:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"615:18:24"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[],"src":"642:0:24"},"scope":4037,"src":"597:46:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b66503cf","id":4003,"implemented":false,"kind":"function","modifiers":[],"name":"notifyRewardAmount","nameLocation":"657:18:24","nodeType":"FunctionDefinition","parameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"_rewardsToken","nameLocation":"684:13:24","nodeType":"VariableDeclaration","scope":4003,"src":"676:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3997,"name":"address","nodeType":"ElementaryTypeName","src":"676:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4000,"mutability":"mutable","name":"_reward","nameLocation":"707:7:24","nodeType":"VariableDeclaration","scope":4003,"src":"699:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"675:40:24"},"returnParameters":{"id":4002,"nodeType":"ParameterList","parameters":[],"src":"724:0:24"},"scope":4037,"src":"648:77:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":4010,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"739:9:24","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"account","nameLocation":"757:7:24","nodeType":"VariableDeclaration","scope":4010,"src":"749:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"748:17:24"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4010,"src":"789:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"788:9:24"},"scope":4037,"src":"730:68:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dc01f60d","id":4019,"implemented":false,"kind":"function","modifiers":[],"name":"claimableRewards","nameLocation":"812:16:24","nodeType":"FunctionDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"_account","nameLocation":"837:8:24","nodeType":"VariableDeclaration","scope":4019,"src":"829:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4011,"name":"address","nodeType":"ElementaryTypeName","src":"829:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"828:18:24"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"userRewards","nameLocation":"889:11:24","nodeType":"VariableDeclaration","scope":4019,"src":"869:31:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct IRewards.EarnedData[]"},"typeName":{"baseType":{"id":4015,"nodeType":"UserDefinedTypeName","pathNode":{"id":4014,"name":"EarnedData","nodeType":"IdentifierPath","referencedDeclaration":3954,"src":"869:10:24"},"referencedDeclaration":3954,"src":"869:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$3954_storage_ptr","typeString":"struct IRewards.EarnedData"}},"id":4016,"nodeType":"ArrayTypeName","src":"869:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$3954_storage_$dyn_storage_ptr","typeString":"struct IRewards.EarnedData[]"}},"visibility":"internal"}],"src":"868:33:24"},"scope":4037,"src":"803:99:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7bb7bed1","id":4026,"implemented":false,"kind":"function","modifiers":[],"name":"rewardTokens","nameLocation":"916:12:24","nodeType":"FunctionDefinition","parameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"_rid","nameLocation":"937:4:24","nodeType":"VariableDeclaration","scope":4026,"src":"929:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"928:14:24"},"returnParameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4026,"src":"966:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"966:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"965:9:24"},"scope":4037,"src":"907:68:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"857cb94a","id":4031,"implemented":false,"kind":"function","modifiers":[],"name":"rewardTokenLength","nameLocation":"989:17:24","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[],"src":"1006:2:24"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"1031:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1030:9:24"},"scope":4037,"src":"980:60:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"02fb0c5e","id":4036,"implemented":false,"kind":"function","modifiers":[],"name":"active","nameLocation":"1054:6:24","nodeType":"FunctionDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[],"src":"1060:2:24"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4036,"src":"1085:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4033,"name":"bool","nodeType":"ElementaryTypeName","src":"1085:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1084:6:24"},"scope":4037,"src":"1045:46:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4038,"src":"78:1015:24","usedErrors":[]}],"src":"51:1043:24"},"id":24},"contracts/interfaces/IRewardsHandler.sol":{"ast":{"absolutePath":"contracts/interfaces/IRewardsHandler.sol","exportedSymbols":{"IRewardsHandler":[4100]},"id":4101,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":4039,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:25"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4100,"linearizedBaseContracts":[4100],"name":"IRewardsHandler","nameLocation":"87:15:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRewardsHandler.UserBalance","id":4044,"members":[{"constant":false,"id":4041,"mutability":"mutable","name":"allocPoint","nameLocation":"144:10:25","nodeType":"VariableDeclaration","scope":4044,"src":"139:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4040,"name":"uint","nodeType":"ElementaryTypeName","src":"139:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"lastMul","nameLocation":"190:7:25","nodeType":"VariableDeclaration","scope":4044,"src":"185:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint","nodeType":"ElementaryTypeName","src":"185:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserBalance","nameLocation":"117:11:25","nodeType":"StructDefinition","scope":4100,"src":"110:94:25","visibility":"public"},{"functionSelector":"2316ad32","id":4051,"implemented":false,"kind":"function","modifiers":[],"name":"receiveFee","nameLocation":"219:10:25","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"token","nameLocation":"238:5:25","nodeType":"VariableDeclaration","scope":4051,"src":"230:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4045,"name":"address","nodeType":"ElementaryTypeName","src":"230:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"amount","nameLocation":"250:6:25","nodeType":"VariableDeclaration","scope":4051,"src":"245:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint","nodeType":"ElementaryTypeName","src":"245:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"229:28:25"},"returnParameters":{"id":4050,"nodeType":"ParameterList","parameters":[],"src":"266:0:25"},"scope":4100,"src":"210:57:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"61120328","id":4058,"implemented":false,"kind":"function","modifiers":[],"name":"updateLPShares","nameLocation":"282:14:25","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"fnftId","nameLocation":"302:6:25","nodeType":"VariableDeclaration","scope":4058,"src":"297:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint","nodeType":"ElementaryTypeName","src":"297:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4055,"mutability":"mutable","name":"newShares","nameLocation":"315:9:25","nodeType":"VariableDeclaration","scope":4058,"src":"310:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint","nodeType":"ElementaryTypeName","src":"310:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"296:29:25"},"returnParameters":{"id":4057,"nodeType":"ParameterList","parameters":[],"src":"334:0:25"},"scope":4100,"src":"273:62:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7af3a86f","id":4065,"implemented":false,"kind":"function","modifiers":[],"name":"updateBasicShares","nameLocation":"350:17:25","nodeType":"FunctionDefinition","parameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"fnftId","nameLocation":"373:6:25","nodeType":"VariableDeclaration","scope":4065,"src":"368:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint","nodeType":"ElementaryTypeName","src":"368:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4062,"mutability":"mutable","name":"newShares","nameLocation":"386:9:25","nodeType":"VariableDeclaration","scope":4065,"src":"381:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint","nodeType":"ElementaryTypeName","src":"381:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"367:29:25"},"returnParameters":{"id":4064,"nodeType":"ParameterList","parameters":[],"src":"405:0:25"},"scope":4100,"src":"341:65:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"352152ff","id":4076,"implemented":false,"kind":"function","modifiers":[],"name":"getAllocPoint","nameLocation":"421:13:25","nodeType":"FunctionDefinition","parameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"fnftId","nameLocation":"440:6:25","nodeType":"VariableDeclaration","scope":4076,"src":"435:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint","nodeType":"ElementaryTypeName","src":"435:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"token","nameLocation":"456:5:25","nodeType":"VariableDeclaration","scope":4076,"src":"448:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4068,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4071,"mutability":"mutable","name":"isBasic","nameLocation":"468:7:25","nodeType":"VariableDeclaration","scope":4076,"src":"463:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4070,"name":"bool","nodeType":"ElementaryTypeName","src":"463:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"434:42:25"},"returnParameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4076,"src":"500:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint","nodeType":"ElementaryTypeName","src":"500:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:6:25"},"scope":4100,"src":"412:94:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c7b69cb","id":4085,"implemented":false,"kind":"function","modifiers":[],"name":"claimRewards","nameLocation":"521:12:25","nodeType":"FunctionDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"fnftId","nameLocation":"539:6:25","nodeType":"VariableDeclaration","scope":4085,"src":"534:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint","nodeType":"ElementaryTypeName","src":"534:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"caller","nameLocation":"555:6:25","nodeType":"VariableDeclaration","scope":4085,"src":"547:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4079,"name":"address","nodeType":"ElementaryTypeName","src":"547:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"533:29:25"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4085,"src":"581:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint","nodeType":"ElementaryTypeName","src":"581:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:6:25"},"scope":4100,"src":"512:75:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dd373b9","id":4090,"implemented":false,"kind":"function","modifiers":[],"name":"setStakingContract","nameLocation":"602:18:25","nodeType":"FunctionDefinition","parameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"mutability":"mutable","name":"stake","nameLocation":"629:5:25","nodeType":"VariableDeclaration","scope":4090,"src":"621:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4086,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"620:15:25"},"returnParameters":{"id":4089,"nodeType":"ParameterList","parameters":[],"src":"644:0:25"},"scope":4100,"src":"593:52:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"29d21a00","id":4099,"implemented":false,"kind":"function","modifiers":[],"name":"getRewards","nameLocation":"660:10:25","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"mutability":"mutable","name":"fnftId","nameLocation":"676:6:25","nodeType":"VariableDeclaration","scope":4099,"src":"671:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint","nodeType":"ElementaryTypeName","src":"671:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4094,"mutability":"mutable","name":"token","nameLocation":"692:5:25","nodeType":"VariableDeclaration","scope":4099,"src":"684:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4093,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"670:28:25"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4099,"src":"722:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint","nodeType":"ElementaryTypeName","src":"722:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"721:6:25"},"scope":4100,"src":"651:77:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4101,"src":"77:653:25","usedErrors":[]}],"src":"51:680:25"},"id":25},"contracts/interfaces/ITokenVault.sol":{"ast":{"absolutePath":"contracts/interfaces/ITokenVault.sol","exportedSymbols":{"IRevest":[3947],"ITokenVault":[4202]},"id":4203,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":4102,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:26"},{"absolutePath":"contracts/interfaces/IRevest.sol","file":"./IRevest.sol","id":4103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4203,"sourceUnit":3948,"src":"77:23:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4202,"linearizedBaseContracts":[4202],"name":"ITokenVault","nameLocation":"112:11:26","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8717293d","id":4115,"implemented":false,"kind":"function","modifiers":[],"name":"createFNFT","nameLocation":"140:10:26","nodeType":"FunctionDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"fnftId","nameLocation":"165:6:26","nodeType":"VariableDeclaration","scope":4115,"src":"160:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint","nodeType":"ElementaryTypeName","src":"160:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4108,"mutability":"mutable","name":"fnftConfig","nameLocation":"207:10:26","nodeType":"VariableDeclaration","scope":4115,"src":"181:36:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":4107,"nodeType":"UserDefinedTypeName","pathNode":{"id":4106,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"181:18:26"},"referencedDeclaration":3776,"src":"181:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"},{"constant":false,"id":4110,"mutability":"mutable","name":"quantity","nameLocation":"232:8:26","nodeType":"VariableDeclaration","scope":4115,"src":"227:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint","nodeType":"ElementaryTypeName","src":"227:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"from","nameLocation":"258:4:26","nodeType":"VariableDeclaration","scope":4115,"src":"250:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4111,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"150:118:26"},"returnParameters":{"id":4114,"nodeType":"ParameterList","parameters":[],"src":"277:0:26"},"scope":4202,"src":"131:147:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5d61210d","id":4124,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"293:13:26","nodeType":"FunctionDefinition","parameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"fnftId","nameLocation":"321:6:26","nodeType":"VariableDeclaration","scope":4124,"src":"316:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint","nodeType":"ElementaryTypeName","src":"316:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"quantity","nameLocation":"342:8:26","nodeType":"VariableDeclaration","scope":4124,"src":"337:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint","nodeType":"ElementaryTypeName","src":"337:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4121,"mutability":"mutable","name":"user","nameLocation":"368:4:26","nodeType":"VariableDeclaration","scope":4124,"src":"360:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4120,"name":"address","nodeType":"ElementaryTypeName","src":"360:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"306:72:26"},"returnParameters":{"id":4123,"nodeType":"ParameterList","parameters":[],"src":"387:0:26"},"scope":4202,"src":"284:104:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a3606b90","id":4133,"implemented":false,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"403:12:26","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"fnftId","nameLocation":"430:6:26","nodeType":"VariableDeclaration","scope":4133,"src":"425:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint","nodeType":"ElementaryTypeName","src":"425:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"amount","nameLocation":"451:6:26","nodeType":"VariableDeclaration","scope":4133,"src":"446:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint","nodeType":"ElementaryTypeName","src":"446:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"quantity","nameLocation":"472:8:26","nodeType":"VariableDeclaration","scope":4133,"src":"467:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint","nodeType":"ElementaryTypeName","src":"467:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:71:26"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[],"src":"495:0:26"},"scope":4202,"src":"394:102:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0bb007b8","id":4142,"implemented":false,"kind":"function","modifiers":[],"name":"cloneFNFTConfig","nameLocation":"511:15:26","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"old","nameLocation":"553:3:26","nodeType":"VariableDeclaration","scope":4142,"src":"527:29:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":4135,"nodeType":"UserDefinedTypeName","pathNode":{"id":4134,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"527:18:26"},"referencedDeclaration":3776,"src":"527:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"526:31:26"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4142,"src":"576:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":4139,"nodeType":"UserDefinedTypeName","pathNode":{"id":4138,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"576:18:26"},"referencedDeclaration":3776,"src":"576:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"575:27:26"},"scope":4202,"src":"502:101:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3c8b3b62","id":4150,"implemented":false,"kind":"function","modifiers":[],"name":"mapFNFTToToken","nameLocation":"618:14:26","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"fnftId","nameLocation":"647:6:26","nodeType":"VariableDeclaration","scope":4150,"src":"642:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint","nodeType":"ElementaryTypeName","src":"642:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"fnftConfig","nameLocation":"689:10:26","nodeType":"VariableDeclaration","scope":4150,"src":"663:36:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":4146,"nodeType":"UserDefinedTypeName","pathNode":{"id":4145,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"663:18:26"},"referencedDeclaration":3776,"src":"663:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"632:73:26"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[],"src":"714:0:26"},"scope":4202,"src":"609:106:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"375d59ba","id":4159,"implemented":false,"kind":"function","modifiers":[],"name":"handleMultipleDeposits","nameLocation":"730:22:26","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"fnftId","nameLocation":"767:6:26","nodeType":"VariableDeclaration","scope":4159,"src":"762:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint","nodeType":"ElementaryTypeName","src":"762:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4154,"mutability":"mutable","name":"newFNFTId","nameLocation":"788:9:26","nodeType":"VariableDeclaration","scope":4159,"src":"783:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint","nodeType":"ElementaryTypeName","src":"783:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4156,"mutability":"mutable","name":"amount","nameLocation":"812:6:26","nodeType":"VariableDeclaration","scope":4159,"src":"807:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint","nodeType":"ElementaryTypeName","src":"807:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"752:72:26"},"returnParameters":{"id":4158,"nodeType":"ParameterList","parameters":[],"src":"833:0:26"},"scope":4202,"src":"721:113:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fbe42921","id":4172,"implemented":false,"kind":"function","modifiers":[],"name":"splitFNFT","nameLocation":"849:9:26","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"fnftId","nameLocation":"873:6:26","nodeType":"VariableDeclaration","scope":4172,"src":"868:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint","nodeType":"ElementaryTypeName","src":"868:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4164,"mutability":"mutable","name":"newFNFTIds","nameLocation":"903:10:26","nodeType":"VariableDeclaration","scope":4172,"src":"889:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4162,"name":"uint","nodeType":"ElementaryTypeName","src":"889:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4163,"nodeType":"ArrayTypeName","src":"889:6:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4167,"mutability":"mutable","name":"proportions","nameLocation":"937:11:26","nodeType":"VariableDeclaration","scope":4172,"src":"923:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4165,"name":"uint","nodeType":"ElementaryTypeName","src":"923:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4166,"nodeType":"ArrayTypeName","src":"923:6:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4169,"mutability":"mutable","name":"quantity","nameLocation":"963:8:26","nodeType":"VariableDeclaration","scope":4172,"src":"958:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint","nodeType":"ElementaryTypeName","src":"958:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"858:119:26"},"returnParameters":{"id":4171,"nodeType":"ParameterList","parameters":[],"src":"986:0:26"},"scope":4202,"src":"840:147:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"522f9b37","id":4180,"implemented":false,"kind":"function","modifiers":[],"name":"getFNFT","nameLocation":"1002:7:26","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"fnftId","nameLocation":"1015:6:26","nodeType":"VariableDeclaration","scope":4180,"src":"1010:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint","nodeType":"ElementaryTypeName","src":"1010:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1009:13:26"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4180,"src":"1046:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_memory_ptr","typeString":"struct IRevest.FNFTConfig"},"typeName":{"id":4177,"nodeType":"UserDefinedTypeName","pathNode":{"id":4176,"name":"IRevest.FNFTConfig","nodeType":"IdentifierPath","referencedDeclaration":3776,"src":"1046:18:26"},"referencedDeclaration":3776,"src":"1046:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_FNFTConfig_$3776_storage_ptr","typeString":"struct IRevest.FNFTConfig"}},"visibility":"internal"}],"src":"1045:27:26"},"scope":4202,"src":"993:80:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3398498d","id":4187,"implemented":false,"kind":"function","modifiers":[],"name":"getFNFTCurrentValue","nameLocation":"1087:19:26","nodeType":"FunctionDefinition","parameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"fnftId","nameLocation":"1112:6:26","nodeType":"VariableDeclaration","scope":4187,"src":"1107:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint","nodeType":"ElementaryTypeName","src":"1107:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1106:13:26"},"returnParameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4187,"src":"1143:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint","nodeType":"ElementaryTypeName","src":"1143:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1142:6:26"},"scope":4202,"src":"1078:71:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5e574a5","id":4194,"implemented":false,"kind":"function","modifiers":[],"name":"getNontransferable","nameLocation":"1163:18:26","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"fnftId","nameLocation":"1187:6:26","nodeType":"VariableDeclaration","scope":4194,"src":"1182:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint","nodeType":"ElementaryTypeName","src":"1182:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1181:13:26"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4194,"src":"1218:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4191,"name":"bool","nodeType":"ElementaryTypeName","src":"1218:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1217:6:26"},"scope":4202,"src":"1154:70:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"14f487fa","id":4201,"implemented":false,"kind":"function","modifiers":[],"name":"getSplitsRemaining","nameLocation":"1238:18:26","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"fnftId","nameLocation":"1262:6:26","nodeType":"VariableDeclaration","scope":4201,"src":"1257:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint","nodeType":"ElementaryTypeName","src":"1257:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1256:13:26"},"returnParameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4201,"src":"1293:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint","nodeType":"ElementaryTypeName","src":"1293:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:6:26"},"scope":4202,"src":"1229:70:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4203,"src":"102:1199:26","usedErrors":[]}],"src":"51:1251:26"},"id":26},"contracts/interfaces/IVotingEscrow.sol":{"ast":{"absolutePath":"contracts/interfaces/IVotingEscrow.sol","exportedSymbols":{"IERC165":[863],"IRegistryProvider":[3661],"IVotingEscrow":[4278]},"id":4279,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":4204,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"51:24:27"},{"absolutePath":"contracts/interfaces/IRegistryProvider.sol","file":"./IRegistryProvider.sol","id":4205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4279,"sourceUnit":3662,"src":"77:33:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":4206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4279,"sourceUnit":864,"src":"111:65:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":4207,"nodeType":"StructuredDocumentation","src":"178:53:27","text":" @title Provider interface for Revest FNFTs"},"fullyImplemented":false,"id":4278,"linearizedBaseContracts":[4278],"name":"IVotingEscrow","nameLocation":"242:13:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IVotingEscrow.Point","id":4216,"members":[{"constant":false,"id":4209,"mutability":"mutable","name":"bias","nameLocation":"293:4:27","nodeType":"VariableDeclaration","scope":4216,"src":"286:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4208,"name":"int128","nodeType":"ElementaryTypeName","src":"286:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"slope","nameLocation":"314:5:27","nodeType":"VariableDeclaration","scope":4216,"src":"307:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4210,"name":"int128","nodeType":"ElementaryTypeName","src":"307:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"ts","nameLocation":"334:2:27","nodeType":"VariableDeclaration","scope":4216,"src":"329:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint","nodeType":"ElementaryTypeName","src":"329:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"blk","nameLocation":"351:3:27","nodeType":"VariableDeclaration","scope":4216,"src":"346:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint","nodeType":"ElementaryTypeName","src":"346:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Point","nameLocation":"270:5:27","nodeType":"StructDefinition","scope":4278,"src":"263:98:27","visibility":"public"},{"functionSelector":"65fc3873","id":4223,"implemented":false,"kind":"function","modifiers":[],"name":"create_lock","nameLocation":"376:11:27","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"_value","nameLocation":"393:6:27","nodeType":"VariableDeclaration","scope":4223,"src":"388:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint","nodeType":"ElementaryTypeName","src":"388:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4220,"mutability":"mutable","name":"_unlock_time","nameLocation":"406:12:27","nodeType":"VariableDeclaration","scope":4223,"src":"401:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint","nodeType":"ElementaryTypeName","src":"401:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"387:32:27"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[],"src":"428:0:27"},"scope":4278,"src":"367:62:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4957677c","id":4228,"implemented":false,"kind":"function","modifiers":[],"name":"increase_amount","nameLocation":"444:15:27","nodeType":"FunctionDefinition","parameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"_value","nameLocation":"465:6:27","nodeType":"VariableDeclaration","scope":4228,"src":"460:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint","nodeType":"ElementaryTypeName","src":"460:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"459:13:27"},"returnParameters":{"id":4227,"nodeType":"ParameterList","parameters":[],"src":"481:0:27"},"scope":4278,"src":"435:47:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eff7a612","id":4233,"implemented":false,"kind":"function","modifiers":[],"name":"increase_unlock_time","nameLocation":"497:20:27","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"_unlock_time","nameLocation":"523:12:27","nodeType":"VariableDeclaration","scope":4233,"src":"518:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint","nodeType":"ElementaryTypeName","src":"518:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:19:27"},"returnParameters":{"id":4232,"nodeType":"ParameterList","parameters":[],"src":"545:0:27"},"scope":4278,"src":"488:58:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3ccfd60b","id":4236,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"561:8:27","nodeType":"FunctionDefinition","parameters":{"id":4234,"nodeType":"ParameterList","parameters":[],"src":"569:2:27"},"returnParameters":{"id":4235,"nodeType":"ParameterList","parameters":[],"src":"580:0:27"},"scope":4278,"src":"552:29:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7175d4f7","id":4241,"implemented":false,"kind":"function","modifiers":[],"name":"smart_wallet_checker","nameLocation":"596:20:27","nodeType":"FunctionDefinition","parameters":{"id":4237,"nodeType":"ParameterList","parameters":[],"src":"616:2:27"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"walletCheck","nameLocation":"650:11:27","nodeType":"VariableDeclaration","scope":4241,"src":"642:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4238,"name":"address","nodeType":"ElementaryTypeName","src":"642:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"641:21:27"},"scope":4278,"src":"587:76:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fc0c546a","id":4246,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"678:5:27","nodeType":"FunctionDefinition","parameters":{"id":4242,"nodeType":"ParameterList","parameters":[],"src":"683:2:27"},"returnParameters":{"id":4245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4244,"mutability":"mutable","name":"tok","nameLocation":"717:3:27","nodeType":"VariableDeclaration","scope":4246,"src":"709:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4243,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:13:27"},"scope":4278,"src":"669:53:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"adc63589","id":4253,"implemented":false,"kind":"function","modifiers":[],"name":"locked__end","nameLocation":"737:11:27","nodeType":"FunctionDefinition","parameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"_addr","nameLocation":"757:5:27","nodeType":"VariableDeclaration","scope":4253,"src":"749:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4247,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"748:15:27"},"returnParameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"lockEnd","nameLocation":"792:7:27","nodeType":"VariableDeclaration","scope":4253,"src":"787:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint","nodeType":"ElementaryTypeName","src":"787:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"786:14:27"},"scope":4278,"src":"728:73:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":4260,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"816:9:27","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"_addr","nameLocation":"834:5:27","nodeType":"VariableDeclaration","scope":4260,"src":"826:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4254,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"825:15:27"},"returnParameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"balance","nameLocation":"869:7:27","nodeType":"VariableDeclaration","scope":4260,"src":"864:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint","nodeType":"ElementaryTypeName","src":"864:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"863:14:27"},"scope":4278,"src":"807:71:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"010ae757","id":4267,"implemented":false,"kind":"function","modifiers":[],"name":"user_point_epoch","nameLocation":"893:16:27","nodeType":"FunctionDefinition","parameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"_addr","nameLocation":"918:5:27","nodeType":"VariableDeclaration","scope":4267,"src":"910:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4261,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"909:15:27"},"returnParameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"epoch","nameLocation":"953:5:27","nodeType":"VariableDeclaration","scope":4267,"src":"948:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint","nodeType":"ElementaryTypeName","src":"948:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"947:12:27"},"scope":4278,"src":"884:76:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"28d09d47","id":4277,"implemented":false,"kind":"function","modifiers":[],"name":"user_point_history","nameLocation":"975:18:27","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"_addr","nameLocation":"1002:5:27","nodeType":"VariableDeclaration","scope":4277,"src":"994:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4268,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"index","nameLocation":"1014:5:27","nodeType":"VariableDeclaration","scope":4277,"src":"1009:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint","nodeType":"ElementaryTypeName","src":"1009:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"993:27:27"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"pt","nameLocation":"1057:2:27","nodeType":"VariableDeclaration","scope":4277,"src":"1044:15:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$4216_memory_ptr","typeString":"struct IVotingEscrow.Point"},"typeName":{"id":4274,"nodeType":"UserDefinedTypeName","pathNode":{"id":4273,"name":"Point","nodeType":"IdentifierPath","referencedDeclaration":4216,"src":"1044:5:27"},"referencedDeclaration":4216,"src":"1044:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$4216_storage_ptr","typeString":"struct IVotingEscrow.Point"}},"visibility":"internal"}],"src":"1043:17:27"},"scope":4278,"src":"966:95:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4279,"src":"232:832:27","usedErrors":[]}],"src":"51:1014:27"},"id":27},"contracts/lib/RevestHelper.sol":{"ast":{"absolutePath":"contracts/lib/RevestHelper.sol","exportedSymbols":{"IERC20":[261],"IERC20Metadata":[286],"ILockManager":[3440],"IRevest":[3947],"ITokenVault":[4202],"RevestHelper":[4848]},"id":4849,"license":"GNU-GPL v3.0 or later","nodeType":"SourceUnit","nodes":[{"id":4280,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"51:23:28"},{"absolutePath":"contracts/interfaces/ITokenVault.sol","file":"../interfaces/ITokenVault.sol","id":4281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4849,"sourceUnit":4203,"src":"76:39:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ILockManager.sol","file":"../interfaces/ILockManager.sol","id":4282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4849,"sourceUnit":3441,"src":"116:40:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRevest.sol","file":"../interfaces/IRevest.sol","id":4283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4849,"sourceUnit":3948,"src":"157:35:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":4284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4849,"sourceUnit":287,"src":"193:75:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4848,"linearizedBaseContracts":[4848],"name":"RevestHelper","nameLocation":"279:12:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":4298,"nodeType":"Block","src":"379:49:28","statements":[{"expression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4291,"name":"boolean","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"389:7:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":4292,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"399:3:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"414:7:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a","typeString":"literal_string \"false\""},"value":"false"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"399:22:28","trueExpression":{"hexValue":"74727565","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"405:6:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034","typeString":"literal_string \"true\""},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"389:32:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4297,"nodeType":"ExpressionStatement","src":"389:32:28"}]},"id":4299,"implemented":true,"kind":"function","modifiers":[],"name":"boolToString","nameLocation":"310:12:28","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"arg","nameLocation":"328:3:28","nodeType":"VariableDeclaration","scope":4299,"src":"323:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4285,"name":"bool","nodeType":"ElementaryTypeName","src":"323:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"322:10:28"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"boolean","nameLocation":"370:7:28","nodeType":"VariableDeclaration","scope":4299,"src":"356:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4288,"name":"string","nodeType":"ElementaryTypeName","src":"356:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"355:23:28"},"scope":4848,"src":"301:127:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4340,"nodeType":"Block","src":"525:279:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"538:4:28","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4308,"name":"IRevest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"546:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRevest_$3947_$","typeString":"type(contract IRevest)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"LockType","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"546:16:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LockType_$3786_$","typeString":"type(enum IRevest.LockType)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"TimeLock","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"546:25:28","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"src":"538:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4317,"nodeType":"IfStatement","src":"535:80:28","trueBody":{"id":4316,"nodeType":"Block","src":"573:42:28","statements":[{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4312,"name":"lockType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"587:8:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"54696d65","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"598:6:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_e180139b7a0083ec3ea1465e2576361288ec5c5e6c2c0760aaba52a0f9c6710f","typeString":"literal_string \"Time\""},"value":"Time"},"src":"587:17:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4315,"nodeType":"ExpressionStatement","src":"587:17:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4318,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"628:4:28","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4319,"name":"IRevest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"636:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRevest_$3947_$","typeString":"type(contract IRevest)"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"LockType","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"636:16:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LockType_$3786_$","typeString":"type(enum IRevest.LockType)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"TimeLock","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"636:25:28","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"src":"628:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4328,"nodeType":"IfStatement","src":"625:81:28","trueBody":{"id":4327,"nodeType":"Block","src":"663:43:28","statements":[{"expression":{"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4323,"name":"lockType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"677:8:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"56616c7565","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"688:7:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3c0461da765722dd3d269af5ea891ac7aeadfe4c3f19cc1e24e4db99c18e787","typeString":"literal_string \"Value\""},"value":"Value"},"src":"677:18:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4326,"nodeType":"ExpressionStatement","src":"677:18:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4329,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"718:4:28","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4330,"name":"IRevest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"726:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRevest_$3947_$","typeString":"type(contract IRevest)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"LockType","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"726:16:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LockType_$3786_$","typeString":"type(enum IRevest.LockType)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"TimeLock","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"726:25:28","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"src":"718:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4339,"nodeType":"IfStatement","src":"715:83:28","trueBody":{"id":4338,"nodeType":"Block","src":"753:45:28","statements":[{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4334,"name":"lockType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"767:8:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"41646472657373","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"778:9:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef949621d9619a7bdc7308bca3bf3f6508504e4bac5dab9b94b151c88dbea455","typeString":"literal_string \"Address\""},"value":"Address"},"src":"767:20:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4337,"nodeType":"ExpressionStatement","src":"767:20:28"}]}}]},"id":4341,"implemented":true,"kind":"function","modifiers":[],"name":"getLockType","nameLocation":"443:11:28","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"lock","nameLocation":"472:4:28","nodeType":"VariableDeclaration","scope":4341,"src":"455:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"},"typeName":{"id":4301,"nodeType":"UserDefinedTypeName","pathNode":{"id":4300,"name":"IRevest.LockType","nodeType":"IdentifierPath","referencedDeclaration":3786,"src":"455:16:28"},"referencedDeclaration":3786,"src":"455:16:28","typeDescriptions":{"typeIdentifier":"t_enum$_LockType_$3786","typeString":"enum IRevest.LockType"}},"visibility":"internal"}],"src":"454:23:28"},"returnParameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"lockType","nameLocation":"515:8:28","nodeType":"VariableDeclaration","scope":4341,"src":"501:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4304,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:24:28"},"scope":4848,"src":"434:370:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4369,"nodeType":"Block","src":"890:164:28","statements":[{"clauses":[{"block":{"id":4360,"nodeType":"Block","src":"964:38:28","statements":[{"expression":{"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4356,"name":"ticker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"978:6:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4357,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"987:4:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"978:13:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4359,"nodeType":"ExpressionStatement","src":"978:13:28"}]},"errorName":"","id":4361,"nodeType":"TryCatchClause","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"tick","nameLocation":"958:4:28","nodeType":"VariableDeclaration","scope":4361,"src":"944:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4353,"name":"string","nodeType":"ElementaryTypeName","src":"944:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"943:20:28"},"src":"935:67:28"},{"block":{"id":4366,"nodeType":"Block","src":"1009:39:28","statements":[{"expression":{"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4362,"name":"ticker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"1023:6:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3f3f3f","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:5:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187","typeString":"literal_string \"???\""},"value":"???"},"src":"1023:14:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4365,"nodeType":"ExpressionStatement","src":"1023:14:28"}]},"errorName":"","id":4367,"nodeType":"TryCatchClause","src":"1003:45:28"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4349,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"919:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4348,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"904:14:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$286_$","typeString":"type(contract IERC20Metadata)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$286","typeString":"contract IERC20Metadata"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":279,"src":"904:28:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:30:28","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4368,"nodeType":"TryStatement","src":"900:148:28"}]},"id":4370,"implemented":true,"kind":"function","modifiers":[],"name":"getTicker","nameLocation":"820:9:28","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4343,"mutability":"mutable","name":"asset","nameLocation":"838:5:28","nodeType":"VariableDeclaration","scope":4370,"src":"830:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4342,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"829:15:28"},"returnParameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"ticker","nameLocation":"882:6:28","nodeType":"VariableDeclaration","scope":4370,"src":"868:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4345,"name":"string","nodeType":"ElementaryTypeName","src":"868:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"867:22:28"},"scope":4848,"src":"811:243:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4398,"nodeType":"Block","src":"1137:172:28","statements":[{"clauses":[{"block":{"id":4389,"nodeType":"Block","src":"1209:38:28","statements":[{"expression":{"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4385,"name":"ticker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"1223:6:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4386,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"1232:4:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1223:13:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4388,"nodeType":"ExpressionStatement","src":"1223:13:28"}]},"errorName":"","id":4390,"nodeType":"TryCatchClause","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"tick","nameLocation":"1203:4:28","nodeType":"VariableDeclaration","scope":4390,"src":"1189:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4382,"name":"string","nodeType":"ElementaryTypeName","src":"1189:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1188:20:28"},"src":"1180:67:28"},{"block":{"id":4395,"nodeType":"Block","src":"1254:49:28","statements":[{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4391,"name":"ticker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"1268:6:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"556e6b6e6f776e20546f6b656e","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1277:15:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d55d260bd9a168c7abeae6417e119034cb78a3b2ddf0a220c726d07bd68a3","typeString":"literal_string \"Unknown Token\""},"value":"Unknown Token"},"src":"1268:24:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4394,"nodeType":"ExpressionStatement","src":"1268:24:28"}]},"errorName":"","id":4396,"nodeType":"TryCatchClause","src":"1248:55:28"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4378,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"1166:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4377,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1151:14:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$286_$","typeString":"type(contract IERC20Metadata)"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1151:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$286","typeString":"contract IERC20Metadata"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"name","nodeType":"MemberAccess","referencedDeclaration":273,"src":"1151:26:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1151:28:28","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4397,"nodeType":"TryStatement","src":"1147:156:28"}]},"id":4399,"implemented":true,"kind":"function","modifiers":[],"name":"getName","nameLocation":"1069:7:28","nodeType":"FunctionDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"asset","nameLocation":"1085:5:28","nodeType":"VariableDeclaration","scope":4399,"src":"1077:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4371,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1076:15:28"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"ticker","nameLocation":"1129:6:28","nodeType":"VariableDeclaration","scope":4399,"src":"1115:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4374,"name":"string","nodeType":"ElementaryTypeName","src":"1115:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1114:22:28"},"scope":4848,"src":"1060:249:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4439,"nodeType":"Block","src":"1410:228:28","statements":[{"assignments":[4409],"declarations":[{"constant":false,"id":4409,"mutability":"mutable","name":"decimals","nameLocation":"1426:8:28","nodeType":"VariableDeclaration","scope":4439,"src":"1420:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4408,"name":"uint8","nodeType":"ElementaryTypeName","src":"1420:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4410,"nodeType":"VariableDeclarationStatement","src":"1420:14:28"},{"clauses":[{"block":{"id":4423,"nodeType":"Block","src":"1501:39:28","statements":[{"expression":{"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"1515:8:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4420,"name":"dec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"1526:3:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1515:14:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4422,"nodeType":"ExpressionStatement","src":"1515:14:28"}]},"errorName":"","id":4424,"nodeType":"TryCatchClause","parameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"dec","nameLocation":"1496:3:28","nodeType":"VariableDeclaration","scope":4424,"src":"1490:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4416,"name":"uint8","nodeType":"ElementaryTypeName","src":"1490:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1489:11:28"},"src":"1481:59:28"},{"block":{"id":4429,"nodeType":"Block","src":"1547:38:28","statements":[{"expression":{"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4425,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"1561:8:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1572:2:28","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1561:13:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4428,"nodeType":"ExpressionStatement","src":"1561:13:28"}]},"errorName":"","id":4430,"nodeType":"TryCatchClause","src":"1541:44:28"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4412,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"1463:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4411,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1448:14:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$286_$","typeString":"type(contract IERC20Metadata)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1448:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$286","typeString":"contract IERC20Metadata"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":285,"src":"1448:30:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1448:32:28","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4431,"nodeType":"TryStatement","src":"1444:141:28"},{"expression":{"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4432,"name":"decStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"1594:6:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4434,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"1617:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4435,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"1622:8:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4433,"name":"decimalString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"1603:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint8) pure returns (string memory)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1603:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1594:37:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4438,"nodeType":"ExpressionStatement","src":"1594:37:28"}]},"id":4440,"implemented":true,"kind":"function","modifiers":[],"name":"amountToDecimal","nameLocation":"1324:15:28","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"amt","nameLocation":"1345:3:28","nodeType":"VariableDeclaration","scope":4440,"src":"1340:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4400,"name":"uint","nodeType":"ElementaryTypeName","src":"1340:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"asset","nameLocation":"1358:5:28","nodeType":"VariableDeclaration","scope":4440,"src":"1350:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4402,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1339:25:28"},"returnParameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"decStr","nameLocation":"1402:6:28","nodeType":"VariableDeclaration","scope":4440,"src":"1388:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4405,"name":"string","nodeType":"ElementaryTypeName","src":"1388:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1387:22:28"},"scope":4848,"src":"1315:323:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4533,"nodeType":"Block","src":"1723:474:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4447,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"1737:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1743:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1737:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4453,"nodeType":"IfStatement","src":"1733:48:28","trueBody":{"id":4452,"nodeType":"Block","src":"1746:35:28","statements":[{"expression":{"hexValue":"30","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1767:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":4446,"id":4451,"nodeType":"Return","src":"1760:10:28"}]}},{"assignments":[4455],"declarations":[{"constant":false,"id":4455,"mutability":"mutable","name":"j","nameLocation":"1795:1:28","nodeType":"VariableDeclaration","scope":4533,"src":"1790:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint","nodeType":"ElementaryTypeName","src":"1790:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4457,"initialValue":{"id":4456,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"1799:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1790:11:28"},{"assignments":[4459],"declarations":[{"constant":false,"id":4459,"mutability":"mutable","name":"len","nameLocation":"1816:3:28","nodeType":"VariableDeclaration","scope":4533,"src":"1811:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint","nodeType":"ElementaryTypeName","src":"1811:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4460,"nodeType":"VariableDeclarationStatement","src":"1811:8:28"},{"body":{"id":4471,"nodeType":"Block","src":"1844:51:28","statements":[{"expression":{"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1858:5:28","subExpression":{"id":4464,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"1858:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4466,"nodeType":"ExpressionStatement","src":"1858:5:28"},{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4467,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"1877:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1877:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4470,"nodeType":"ExpressionStatement","src":"1877:7:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4461,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"1836:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1836:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"nodeType":"WhileStatement","src":"1829:66:28"},{"assignments":[4474],"declarations":[{"constant":false,"id":4474,"mutability":"mutable","name":"bstr","nameLocation":"1917:4:28","nodeType":"VariableDeclaration","scope":4533,"src":"1904:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4473,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4479,"initialValue":{"arguments":[{"id":4477,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"1934:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1924:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4475,"name":"bytes","nodeType":"ElementaryTypeName","src":"1928:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1924:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1904:34:28"},{"assignments":[4481],"declarations":[{"constant":false,"id":4481,"mutability":"mutable","name":"k","nameLocation":"1953:1:28","nodeType":"VariableDeclaration","scope":4533,"src":"1948:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint","nodeType":"ElementaryTypeName","src":"1948:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4483,"initialValue":{"id":4482,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"1957:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1948:12:28"},{"body":{"id":4526,"nodeType":"Block","src":"1986:176:28","statements":[{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4487,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"2000:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"2004:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2006:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2004:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2000:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4492,"nodeType":"ExpressionStatement","src":"2000:7:28"},{"assignments":[4494],"declarations":[{"constant":false,"id":4494,"mutability":"mutable","name":"temp","nameLocation":"2027:4:28","nodeType":"VariableDeclaration","scope":4526,"src":"2021:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4493,"name":"uint8","nodeType":"ElementaryTypeName","src":"2021:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4508,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2035:2:28","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4498,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"2046:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"2051:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2056:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2051:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2061:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2051:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2046:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2040:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4496,"name":"uint8","nodeType":"ElementaryTypeName","src":"2040:5:28","typeDescriptions":{}}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2040:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2035:29:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2034:31:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"2021:44:28"},{"assignments":[4510],"declarations":[{"constant":false,"id":4510,"mutability":"mutable","name":"b1","nameLocation":"2086:2:28","nodeType":"VariableDeclaration","scope":4526,"src":"2079:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4509,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2079:6:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4515,"initialValue":{"arguments":[{"id":4513,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"2098:4:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2091:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4511,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2091:6:28","typeDescriptions":{}}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2091:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"2079:24:28"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4516,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"2117:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4518,"indexExpression":{"id":4517,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"2122:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2117:7:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4519,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"2127:2:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2117:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4521,"nodeType":"ExpressionStatement","src":"2117:12:28"},{"expression":{"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"2143:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2149:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2143:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4525,"nodeType":"ExpressionStatement","src":"2143:8:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"1977:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1983:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1977:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4527,"nodeType":"WhileStatement","src":"1970:192:28"},{"expression":{"arguments":[{"id":4530,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"2185:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2178:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4528,"name":"string","nodeType":"ElementaryTypeName","src":"2178:6:28","typeDescriptions":{}}},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2178:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4446,"id":4532,"nodeType":"Return","src":"2171:19:28"}]},"id":4534,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1653:8:28","nodeType":"FunctionDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"_i","nameLocation":"1667:2:28","nodeType":"VariableDeclaration","scope":4534,"src":"1662:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint","nodeType":"ElementaryTypeName","src":"1662:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1661:9:28"},"returnParameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"_uintAsString","nameLocation":"1708:13:28","nodeType":"VariableDeclaration","scope":4534,"src":"1694:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4444,"name":"string","nodeType":"ElementaryTypeName","src":"1694:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1693:29:28"},"scope":4848,"src":"1644:553:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4712,"nodeType":"Block","src":"2294:1835:28","statements":[{"assignments":[4544],"declarations":[{"constant":false,"id":4544,"mutability":"mutable","name":"tenPowDecimals","nameLocation":"2312:14:28","nodeType":"VariableDeclaration","scope":4712,"src":"2304:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"2304:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4548,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2329:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4546,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2335:8:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2329:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2304:39:28"},{"assignments":[4550],"declarations":[{"constant":false,"id":4550,"mutability":"mutable","name":"temp","nameLocation":"2362:4:28","nodeType":"VariableDeclaration","scope":4712,"src":"2354:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2354:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4552,"initialValue":{"id":4551,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"2369:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2354:21:28"},{"assignments":[4554],"declarations":[{"constant":false,"id":4554,"mutability":"mutable","name":"digits","nameLocation":"2391:6:28","nodeType":"VariableDeclaration","scope":4712,"src":"2385:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4553,"name":"uint8","nodeType":"ElementaryTypeName","src":"2385:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4555,"nodeType":"VariableDeclarationStatement","src":"2385:12:28"},{"assignments":[4557],"declarations":[{"constant":false,"id":4557,"mutability":"mutable","name":"numSigfigs","nameLocation":"2413:10:28","nodeType":"VariableDeclaration","scope":4712,"src":"2407:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4556,"name":"uint8","nodeType":"ElementaryTypeName","src":"2407:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4558,"nodeType":"VariableDeclarationStatement","src":"2407:16:28"},{"body":{"id":4587,"nodeType":"Block","src":"2451:277:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"numSigfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2469:10:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2482:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2469:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"2611:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2618:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2611:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2624:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2611:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"2607:65:28","trueBody":{"id":4577,"nodeType":"Block","src":"2627:45:28","statements":[{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2645:12:28","subExpression":{"id":4574,"name":"numSigfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2645:10:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4576,"nodeType":"ExpressionStatement","src":"2645:12:28"}]}},"id":4579,"nodeType":"IfStatement","src":"2465:207:28","trueBody":{"id":4568,"nodeType":"Block","src":"2485:116:28","statements":[{"expression":{"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2574:12:28","subExpression":{"id":4565,"name":"numSigfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2574:10:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4567,"nodeType":"ExpressionStatement","src":"2574:12:28"}]}},{"expression":{"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2685:8:28","subExpression":{"id":4580,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"2685:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4582,"nodeType":"ExpressionStatement","src":"2685:8:28"},{"expression":{"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"2707:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2707:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4586,"nodeType":"ExpressionStatement","src":"2707:10:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"2440:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2448:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2440:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4588,"nodeType":"WhileStatement","src":"2433:295:28"},{"assignments":[4591],"declarations":[{"constant":false,"id":4591,"mutability":"mutable","name":"params","nameLocation":"2765:6:28","nodeType":"VariableDeclaration","scope":4712,"src":"2738:33:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams"},"typeName":{"id":4590,"nodeType":"UserDefinedTypeName","pathNode":{"id":4589,"name":"DecimalStringParams","nodeType":"IdentifierPath","referencedDeclaration":4728,"src":"2738:19:28"},"referencedDeclaration":4728,"src":"2738:19:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_storage_ptr","typeString":"struct RevestHelper.DecimalStringParams"}},"visibility":"internal"}],"id":4592,"nodeType":"VariableDeclarationStatement","src":"2738:33:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"2785:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4594,"name":"numSigfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2794:10:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2785:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2784:21:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4597,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2809:8:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2784:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4699,"nodeType":"Block","src":"3062:965:28","statements":[{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4623,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3141:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sigfigs","nodeType":"MemberAccess","referencedDeclaration":4715,"src":"3141:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4626,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"3158:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3168:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"3175:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4629,"name":"numSigfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"3184:10:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3175:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3174:21:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3168:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3167:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3158:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3141:55:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4636,"nodeType":"ExpressionStatement","src":"3141:55:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"tenPowDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"3213:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4638,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"3230:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3213:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4697,"nodeType":"Block","src":"3784:233:28","statements":[{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4679,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3906:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"3906:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4682,"name":"numSigfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"3927:10:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3940:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3927:14:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3906:35:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4686,"nodeType":"ExpressionStatement","src":"3906:35:28"},{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4687,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3959:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"decimalIndex","nodeType":"MemberAccess","referencedDeclaration":4721,"src":"3959:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"3981:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4691,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"3990:8:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3981:17:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4001:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3981:21:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3959:43:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4696,"nodeType":"ExpressionStatement","src":"3959:43:28"}]},"id":4698,"nodeType":"IfStatement","src":"3210:807:28","trueBody":{"id":4678,"nodeType":"Block","src":"3237:541:28","statements":[{"expression":{"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4640,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3500:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"zerosStartIndex","nodeType":"MemberAccess","referencedDeclaration":4723,"src":"3500:22:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3525:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3500:26:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4645,"nodeType":"ExpressionStatement","src":"3500:26:28"},{"expression":{"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4646,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3544:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"zerosEndIndex","nodeType":"MemberAccess","referencedDeclaration":4725,"src":"3544:20:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"3567:8:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4650,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"3578:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3567:17:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3587:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3567:21:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3544:44:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4655,"nodeType":"ExpressionStatement","src":"3544:44:28"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4656,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3606:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"3606:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"numSigfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"3627:10:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4660,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3640:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"zerosEndIndex","nodeType":"MemberAccess","referencedDeclaration":4725,"src":"3640:20:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3627:33:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3606:54:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4664,"nodeType":"ExpressionStatement","src":"3606:54:28"},{"expression":{"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4665,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3678:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"bufferLength","nodeType":"MemberAccess","referencedDeclaration":4717,"src":"3678:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4668,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3700:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"3700:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3678:40:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4671,"nodeType":"ExpressionStatement","src":"3678:40:28"},{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4672,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3736:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isLessThanOne","nodeType":"MemberAccess","referencedDeclaration":4727,"src":"3736:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3759:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3736:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4677,"nodeType":"ExpressionStatement","src":"3736:27:28"}]}}]},"id":4700,"nodeType":"IfStatement","src":"2781:1246:28","trueBody":{"id":4622,"nodeType":"Block","src":"2819:237:28","statements":[{"expression":{"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4599,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"2899:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sigfigs","nodeType":"MemberAccess","referencedDeclaration":4715,"src":"2899:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4602,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"2916:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4603,"name":"tenPowDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"2925:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2916:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4606,"nodeType":"ExpressionStatement","src":"2899:40:28"},{"expression":{"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4607,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"2953:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"2953:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4610,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"2974:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4611,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2983:8:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2974:17:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2953:38:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4614,"nodeType":"ExpressionStatement","src":"2953:38:28"},{"expression":{"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4615,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3005:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"bufferLength","nodeType":"MemberAccess","referencedDeclaration":4717,"src":"3005:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4618,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3027:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"3027:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3005:40:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4621,"nodeType":"ExpressionStatement","src":"3005:40:28"}]}},{"expression":{"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4701,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"4036:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"bufferLength","nodeType":"MemberAccess","referencedDeclaration":4717,"src":"4036:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4704,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"4058:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"4058:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4036:40:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4707,"nodeType":"ExpressionStatement","src":"4036:40:28"},{"expression":{"arguments":[{"id":4709,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"4115:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}],"id":4708,"name":"generateDecimalString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"4093:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_DecimalStringParams_$4728_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (struct RevestHelper.DecimalStringParams memory) pure returns (string memory)"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4093:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4542,"id":4711,"nodeType":"Return","src":"4086:36:28"}]},"id":4713,"implemented":true,"kind":"function","modifiers":[],"name":"decimalString","nameLocation":"2212:13:28","nodeType":"FunctionDefinition","parameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"number","nameLocation":"2234:6:28","nodeType":"VariableDeclaration","scope":4713,"src":"2226:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2226:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"decimals","nameLocation":"2248:8:28","nodeType":"VariableDeclaration","scope":4713,"src":"2242:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4537,"name":"uint8","nodeType":"ElementaryTypeName","src":"2242:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2225:32:28"},"returnParameters":{"id":4542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"2280:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4540,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2279:15:28"},"scope":4848,"src":"2203:1926:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"canonicalName":"RevestHelper.DecimalStringParams","id":4728,"members":[{"constant":false,"id":4715,"mutability":"mutable","name":"sigfigs","nameLocation":"4385:7:28","nodeType":"VariableDeclaration","scope":4728,"src":"4377:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4717,"mutability":"mutable","name":"bufferLength","nameLocation":"4444:12:28","nodeType":"VariableDeclaration","scope":4728,"src":"4438:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4716,"name":"uint8","nodeType":"ElementaryTypeName","src":"4438:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4719,"mutability":"mutable","name":"sigfigIndex","nameLocation":"4567:11:28","nodeType":"VariableDeclaration","scope":4728,"src":"4561:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4718,"name":"uint8","nodeType":"ElementaryTypeName","src":"4561:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4721,"mutability":"mutable","name":"decimalIndex","nameLocation":"4646:12:28","nodeType":"VariableDeclaration","scope":4728,"src":"4640:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4720,"name":"uint8","nodeType":"ElementaryTypeName","src":"4640:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4723,"mutability":"mutable","name":"zerosStartIndex","nameLocation":"4751:15:28","nodeType":"VariableDeclaration","scope":4728,"src":"4745:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4722,"name":"uint8","nodeType":"ElementaryTypeName","src":"4745:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4725,"mutability":"mutable","name":"zerosEndIndex","nameLocation":"4857:13:28","nodeType":"VariableDeclaration","scope":4728,"src":"4851:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4724,"name":"uint8","nodeType":"ElementaryTypeName","src":"4851:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4727,"mutability":"mutable","name":"isLessThanOne","nameLocation":"4936:13:28","nodeType":"VariableDeclaration","scope":4728,"src":"4931:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4726,"name":"bool","nodeType":"ElementaryTypeName","src":"4931:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DecimalStringParams","nameLocation":"4305:19:28","nodeType":"StructDefinition","scope":4848,"src":"4298:658:28","visibility":"public"},{"body":{"id":4846,"nodeType":"Block","src":"5065:769:28","statements":[{"assignments":[4737],"declarations":[{"constant":false,"id":4737,"mutability":"mutable","name":"buffer","nameLocation":"5088:6:28","nodeType":"VariableDeclaration","scope":4846,"src":"5075:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4736,"name":"bytes","nodeType":"ElementaryTypeName","src":"5075:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4743,"initialValue":{"arguments":[{"expression":{"id":4740,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5107:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"bufferLength","nodeType":"MemberAccess","referencedDeclaration":4717,"src":"5107:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5097:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4738,"name":"bytes","nodeType":"ElementaryTypeName","src":"5101:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5097:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5075:52:28"},{"condition":{"expression":{"id":4744,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5141:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isLessThanOne","nodeType":"MemberAccess","referencedDeclaration":4727,"src":"5141:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4759,"nodeType":"IfStatement","src":"5137:95:28","trueBody":{"id":4758,"nodeType":"Block","src":"5163:69:28","statements":[{"expression":{"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4746,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"5177:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4748,"indexExpression":{"hexValue":"30","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5184:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5177:9:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"5177:15:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4751,"nodeType":"ExpressionStatement","src":"5177:15:28"},{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4752,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"5206:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4754,"indexExpression":{"hexValue":"31","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5213:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5206:9:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"2e","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5218:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},"src":"5206:15:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4757,"nodeType":"ExpressionStatement","src":"5206:15:28"}]}},{"body":{"id":4784,"nodeType":"Block","src":"5380:64:28","statements":[{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4772,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"5394:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4774,"indexExpression":{"id":4773,"name":"zerosCursor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"5401:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5394:19:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"3438","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5429:2:28","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"}],"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5423:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4777,"name":"uint8","nodeType":"ElementaryTypeName","src":"5423:5:28","typeDescriptions":{}}},"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5423:9:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5416:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4775,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5416:6:28","typeDescriptions":{}}},"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5416:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"5394:39:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4783,"nodeType":"ExpressionStatement","src":"5394:39:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4765,"name":"zerosCursor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"5329:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4766,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5343:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"zerosEndIndex","nodeType":"MemberAccess","referencedDeclaration":4725,"src":"5343:20:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5329:34:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4785,"initializationExpression":{"assignments":[4761],"declarations":[{"constant":false,"id":4761,"mutability":"mutable","name":"zerosCursor","nameLocation":"5291:11:28","nodeType":"VariableDeclaration","scope":4785,"src":"5283:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"5283:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4764,"initialValue":{"expression":{"id":4762,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5305:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"zerosStartIndex","nodeType":"MemberAccess","referencedDeclaration":4723,"src":"5305:22:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5283:44:28"},"loopExpression":{"expression":{"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5365:13:28","subExpression":{"id":4769,"name":"zerosCursor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"5365:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4771,"nodeType":"ExpressionStatement","src":"5365:13:28"},"nodeType":"ForStatement","src":"5278:166:28"},{"body":{"id":4839,"nodeType":"Block","src":"5503:294:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4790,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5521:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"decimalIndex","nodeType":"MemberAccess","referencedDeclaration":4721,"src":"5521:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5521:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4794,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5548:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"5548:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4796,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5570:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"decimalIndex","nodeType":"MemberAccess","referencedDeclaration":4721,"src":"5570:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5548:41:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5521:68:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4809,"nodeType":"IfStatement","src":"5517:141:28","trueBody":{"id":4808,"nodeType":"Block","src":"5591:67:28","statements":[{"expression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4800,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"5609:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4804,"indexExpression":{"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"5616:20:28","subExpression":{"expression":{"id":4801,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5618:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"5618:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5609:28:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"2e","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5640:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},"src":"5609:34:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4807,"nodeType":"ExpressionStatement","src":"5609:34:28"}]}},{"expression":{"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4810,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"5671:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4814,"indexExpression":{"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"5678:20:28","subExpression":{"expression":{"id":4811,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5680:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sigfigIndex","nodeType":"MemberAccess","referencedDeclaration":4719,"src":"5680:18:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5671:28:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"3438","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5723:2:28","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"}],"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5715:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:28","typeDescriptions":{}}},"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5715:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4823,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5730:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sigfigs","nodeType":"MemberAccess","referencedDeclaration":4715,"src":"5730:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5747:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"5730:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5729:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5715:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5709:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4817,"name":"uint8","nodeType":"ElementaryTypeName","src":"5709:5:28","typeDescriptions":{}}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5709:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5702:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4815,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5702:6:28","typeDescriptions":{}}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5702:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"5671:81:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4832,"nodeType":"ExpressionStatement","src":"5671:81:28"},{"expression":{"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4833,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5766:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sigfigs","nodeType":"MemberAccess","referencedDeclaration":4715,"src":"5766:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5784:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"5766:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4838,"nodeType":"ExpressionStatement","src":"5766:20:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4786,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"5483:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams memory"}},"id":4787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sigfigs","nodeType":"MemberAccess","referencedDeclaration":4715,"src":"5483:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5500:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5483:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4840,"nodeType":"WhileStatement","src":"5476:321:28"},{"expression":{"arguments":[{"id":4843,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"5820:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5813:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4841,"name":"string","nodeType":"ElementaryTypeName","src":"5813:6:28","typeDescriptions":{}}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5813:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4735,"id":4845,"nodeType":"Return","src":"5806:21:28"}]},"id":4847,"implemented":true,"kind":"function","modifiers":[],"name":"generateDecimalString","nameLocation":"4971:21:28","nodeType":"FunctionDefinition","parameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"params","nameLocation":"5020:6:28","nodeType":"VariableDeclaration","scope":4847,"src":"4993:33:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_memory_ptr","typeString":"struct RevestHelper.DecimalStringParams"},"typeName":{"id":4730,"nodeType":"UserDefinedTypeName","pathNode":{"id":4729,"name":"DecimalStringParams","nodeType":"IdentifierPath","referencedDeclaration":4728,"src":"4993:19:28"},"referencedDeclaration":4728,"src":"4993:19:28","typeDescriptions":{"typeIdentifier":"t_struct$_DecimalStringParams_$4728_storage_ptr","typeString":"struct RevestHelper.DecimalStringParams"}},"visibility":"internal"}],"src":"4992:35:28"},"returnParameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4847,"src":"5050:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4733,"name":"string","nodeType":"ElementaryTypeName","src":"5050:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5049:15:28"},"scope":4848,"src":"4962:872:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4849,"src":"271:5565:28","usedErrors":[]}],"src":"51:5785:28"},"id":28}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[],"devdoc":{"details":"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041c2a5a33a1e00bb3312f3613687e07e74b627e17ae14876a9b0d88c3c5d8c9164736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xC2 0xA5 LOG3 GASPRICE 0x1E STOP 0xBB CALLER SLT RETURN PUSH2 0x3687 0xE0 PUSH31 0x74B627E17AE14876A9B0D88C3C5D8C9164736F6C6343000804003300000000 ","sourceMap":"688:2817:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;688:2817:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041c2a5a33a1e00bb3312f3613687e07e74b627e17ae14876a9b0d88c3c5d8c9164736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xC2 0xA5 LOG3 GASPRICE 0x1E STOP 0xBB CALLER SLT RETURN PUSH2 0x3687 0xE0 PUSH31 0x74B627E17AE14876A9B0D88C3C5D8C9164736F6C6343000804003300000000 ","sourceMap":"688:2817:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"clone(address)":"infinite","cloneDeterministic(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220787b424132ae677ab7d70408b3e04661a91b131f14b93a69fb06e912d752dc5864736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x7B424132AE677AB7D70408B3E04661A91B131F14B93A69FB06 0xE9 SLT 0xD7 MSTORE 0xDC PC PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"578:3270:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;578:3270:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220787b424132ae677ab7d70408b3e04661a91b131f14b93a69fb06e912d752dc5864736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x7B424132AE677AB7D70408B3E04661A91B131F14B93A69FB06 0xE9 SLT 0xD7 MSTORE 0xDC PC PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"578:3270:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ceb8b7354f58b0f934a657186bf4c76bdacfdae407c6fd79efcc6dba85aad6964736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xEB DUP12 PUSH20 0x54F58B0F934A657186BF4C76BDACFDAE407C6FD7 SWAP15 0xFC 0xC6 0xDB 0xA8 GAS 0xAD PUSH10 0x64736F6C634300080400 CALLER ","sourceMap":"126:7518:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7518:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ceb8b7354f58b0f934a657186bf4c76bdacfdae407c6fd79efcc6dba85aad6964736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xEB DUP12 PUSH20 0x54F58B0F934A657186BF4C76BDACFDAE407C6FD7 SWAP15 0xFC 0xC6 0xDB 0xA8 GAS 0xAD PUSH10 0x64736F6C634300080400 CALLER ","sourceMap":"126:7518:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_verifyCallResult(bool,bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RevestConvexFrax.sol":{"ITokenVaultTracker":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"tokenTrackers","outputs":[{"components":[{"internalType":"uint256","name":"lastBalance","type":"uint256"},{"internalType":"uint256","name":"lastMul","type":"uint256"}],"internalType":"struct IRevest.TokenTracker","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"tokenTrackers(address)":"628645c0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenTrackers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastMul\",\"type\":\"uint256\"}],\"internalType\":\"struct IRevest.TokenTracker\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RevestConvexFrax.sol\":\"ITokenVaultTracker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/RevestConvexFrax.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IAddressRegistry.sol\\\";\\nimport \\\"./interfaces/IOutputReceiverV3.sol\\\";\\nimport \\\"./interfaces/ITokenVault.sol\\\";\\nimport \\\"./interfaces/IRevest.sol\\\";\\nimport \\\"./interfaces/IFNFTHandler.sol\\\";\\nimport \\\"./interfaces/ILockManager.sol\\\";\\n\\nimport \\\"./interfaces/IFraxFarmERC20.sol\\\";\\nimport \\\"./interfaces/IFraxFarmBase.sol\\\";\\nimport \\\"./interfaces/IConvexWrapperV2.sol\\\";\\nimport \\\"./interfaces/IRewards.sol\\\";\\n\\nimport \\\"./VestedEscrowSmartWallet.sol\\\";\\n\\n// OZ imports\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\n\\n// Libraries\\nimport \\\"./lib/RevestHelper.sol\\\";\\n\\ninterface ITokenVaultTracker {\\n    function tokenTrackers(address token) external view returns (IRevest.TokenTracker memory);\\n}\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n}\\n\\n/**\\n * @title LiquidDriver <> Revest integration for tokenizing xLQDR positions\\n * @author RobAnon\\n * @dev \\n */\\ncontract RevestLiquidDriver is IOutputReceiverV3, Ownable, ERC165 {\\n    \\n    using SafeERC20 for IERC20;\\n\\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n\\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\\n\\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\\n\\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\\n\\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\\n\\n\\n    // Where to find the Revest address registry that contains info about what contracts live where\\n    address public addressRegistry;\\n\\n    // Token used for voting escrow\\n    address public constant TOKEN = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n\\n    // Template address for VE wallets\\n    address public immutable TEMPLATE;\\n\\n    // The file which tells our frontend how to visually represent such an FNFT\\n    string public METADATA = \\\"https://revest.mypinata.cloud/ipfs/QmRLesf7CzwLapJS3aWWM9wS9HqgvX8Z36zQhWSd1uMFmp\\\";\\n\\n    // Constant used for approval\\n    uint private constant MAX_INT = 2 ** 256 - 1;\\n\\n    uint private constant DAY = 86400;\\n\\n    uint private constant MAX_LOCKUP = 2 * 365 days;\\n\\n    mapping (uint => bytes32) public kekIds;\\n\\n\\n    // Initialize the contract with the needed valeus\\n    constructor(address _provider) {\\n        addressRegistry = _provider;\\n        VestedEscrowSmartWallet wallet = new VestedEscrowSmartWallet();\\n        TEMPLATE = address(wallet);\\n    }\\n\\n    modifier onlyRevestController() {\\n        require(msg.sender == IAddressRegistry(addressRegistry).getRevest(), 'Unauthorized Access!');\\n        _;\\n    }\\n\\n    modifier onlyTokenHolder(uint fnftId) {\\n        IAddressRegistry reg = IAddressRegistry(addressRegistry);\\n        require(IFNFTHandler(reg.getRevestFNFT()).getBalance(msg.sender, fnftId) > 0, 'E064');\\n        _;\\n    }\\n\\n    // Allows core Revest contracts to make sure this contract can do what is needed\\n    // Mandatory method\\n    function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IOutputReceiver).interfaceId\\n            || interfaceId == type(IOutputReceiverV2).interfaceId\\n            || interfaceId == type(IOutputReceiverV3).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    function lockTokens(\\n        uint endTime,\\n        uint amountToLock\\n    ) external payable returns (uint fnftId) {    \\n\\n        /// Mint FNFT\\n        {\\n            // Initialize the Revest config object\\n            IRevest.FNFTConfig memory fnftConfig;\\n\\n            // Want FNFT to be extendable and support multiple deposits\\n            fnftConfig.isMulti = true;\\n\\n            fnftConfig.maturityExtension = true;\\n\\n            // Will result in the asset being sent back to this contract upon withdrawal\\n            // Results solely in a callback\\n            fnftConfig.pipeToContract = address(this);  \\n\\n            // Set these two arrays according to Revest specifications to say\\n            // Who gets these FNFTs and how many copies of them we should create\\n            address[] memory recipients = new address[](1);\\n            recipients[0] = _msgSender();\\n\\n            uint[] memory quantities = new uint[](1);\\n            quantities[0] = 1;\\n\\n            address revest = IAddressRegistry(addressRegistry).getRevest();\\n\\n            \\n            fnftId = IRevest(revest).mintTimeLock(endTime, recipients, quantities, fnftConfig);\\n        }\\n\\n        address smartWallAdd;\\n        {\\n            // We deploy the smart wallet\\n            smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n            VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n\\n            // Transfer the tokens from the user to this wallet\\n            IERC20(CURVE_LP).safeTransferFrom(msg.sender, smartWallAdd, amountToLock);\\n\\n            // We deposit our funds into the wallet, store kek_id\\n            kekIds[fnftId] = wallet.createLock(amountToLock, endTime, msg.sender);\\n            wallet.cleanMemory();\\n            emit DepositERC20OutputReceiver(msg.sender, TOKEN, amountToLock, fnftId, abi.encode(smartWallAdd));\\n        }\\n    }\\n\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address,\\n        address payable caller,\\n        uint\\n    ) external override  {\\n        \\n        // Security check to make sure the Revest vault is the only contract that can call this method\\n        address vault = IAddressRegistry(addressRegistry).getTokenVault();\\n        require(_msgSender() == vault, 'E016');\\n\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n\\n        uint balance = wallet.withdraw(kekIds[fnftId], caller);\\n        wallet.cleanMemory();\\n        emit WithdrawERC20OutputReceiver(caller, TOKEN, balance, fnftId, abi.encode(smartWallAdd));\\n    }\\n\\n    // Not applicable, as these cannot be split\\n    function handleFNFTRemaps(uint, uint[] memory, address, bool) external pure override {\\n        require(false, 'Not applicable');\\n    }\\n    \\n    // Allows custom parameters to be passed during withdrawals\\n    // This and the proceeding method are both parts of the V2 output receiver interface\\n    // and not typically necessary. For the sake of demonstration, they are included\\n    function receiveSecondaryCallback(\\n        uint fnftId,\\n        address payable owner,\\n        uint quantity,\\n        IRevest.FNFTConfig memory config,\\n        bytes memory args\\n    ) external payable override {}\\n\\n    // Callback from Revest.sol to extend maturity\\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external override onlyRevestController {\\n        require(expiration - block.timestamp <= MAX_LOCKUP, 'Max lockup is 2 years');\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        wallet.increaseUnlockTime(expiration, kekIds[fnftId], caller);\\n    }\\n\\n    /// Prerequisite: User has approved this contract to spend tokens on their behalf\\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint, address caller) external override onlyRevestController {\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        IERC20(TOKEN).safeTransferFrom(caller, smartWallAdd, amountToDeposit);\\n        wallet.increaseAmount(amountToDeposit, kekIds[fnftId], caller);\\n    }\\n\\n    // Not applicable\\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external override {}\\n\\n    // Claims REWARDS on user's behalf\\n    function triggerOutputReceiverUpdate(\\n        uint fnftId,\\n        bytes memory\\n    ) external override onlyTokenHolder(fnftId) {\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        wallet.claimRewards(msg.sender);\\n    }       \\n\\n\\n    /// Admin Functions\\n\\n    function setAddressRegistry(address addressRegistry_) external override onlyOwner {\\n        addressRegistry = addressRegistry_;\\n    }\\n\\n    function setMetadata(string memory _meta) external onlyOwner {\\n        METADATA = _meta;\\n    }\\n\\n    /// If funds are mistakenly sent to smart wallets, this will allow the owner to assist in rescue\\n    function rescueNativeFunds() external onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n    }\\n\\n    /// Under no circumstances should this contract ever contain ERC-20 tokens at the end of a transaction\\n    /// If it does, someone has mistakenly sent funds to the contract, and this function can rescue their tokens\\n    function rescueERC20(address token) external onlyOwner {\\n        uint amount = IERC20(token).balanceOf(address(this));\\n        IERC20(token).safeTransfer(msg.sender, amount);\\n    }\\n\\n    /// View Functions\\n\\n    function getCustomMetadata(uint) external view override returns (string memory) {\\n        return METADATA;\\n    }\\n    \\n    // Will give balance in LPs\\n    function getValue(uint fnftId) public view override returns (uint) {\\n        return IConvexWrapperV2(STAKING_TOKEN).totalBalanceOf(Clones.predictDeterministicAddress(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId))));\\n    }\\n\\n    // Must always be in native token\\n    function getAsset(uint) external pure override returns (address) {\\n        return CURVE_LP;\\n    }\\n\\n    function getOutputDisplayValues(uint fnftId) external view override returns (bytes memory displayData) {\\n        (address[] memory tokens, uint256[] memory rewardAmounts) = earned(fnftId);\\n        string[] memory rewardsDesc = new string[](rewardAmounts.length);\\n        bool hasRewards = rewardAmounts.length > 0;\\n        if(hasRewards) {\\n            for(uint i = 0; i < tokens.length; i++) {\\n                address token = tokens[i];\\n                string memory par1 = string(abi.encodePacked(RevestHelper.getName(token),\\\": \\\"));\\n                string memory par2 = string(abi.encodePacked(RevestHelper.amountToDecimal(rewardAmounts[i], token), \\\" [\\\", RevestHelper.getTicker(token), \\\"] Tokens Available\\\"));\\n                rewardsDesc[i] = string(abi.encodePacked(par1, par2));\\n            }\\n        }\\n        address smartWallet = getAddressForFNFT(fnftId);\\n        uint maxExtension = block.timestamp / (1 days) * (1 days) + MAX_LOCKUP; //Ensures no confusion with time zones and date-selectors\\n        displayData = abi.encode(smartWallet, rewardsDesc, hasRewards, maxExtension, TOKEN);\\n    }\\n\\n    function getAddressRegistry() external view override returns (address) {\\n        return addressRegistry;\\n    }\\n\\n    function getRevest() internal view returns (IRevest) {\\n        return IRevest(IAddressRegistry(addressRegistry).getRevest());\\n    }\\n\\n    function getAddressForFNFT(uint fnftId) public view returns (address smartWallAdd) {\\n        smartWallAdd = Clones.predictDeterministicAddress(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n    }\\n\\n    \\n    //helper function to combine earned tokens on staking contract and any tokens that are on this vault\\n    function earned(uint fnftId) internal view returns (address[] memory token_addresses, uint256[] memory total_earned) {\\n        //get list of reward tokens\\n        address smartWallAdd = getAddressForFNFT(fnftId);\\n\\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\\n        uint256[] memory stakedearned = IFraxFarmERC20(STAKING_ADDRESS).earned(smartWallAdd);\\n        IConvexWrapperV2.EarnedData[] memory convexrewards = IConvexWrapperV2(STAKING_TOKEN).earnedView(smartWallAdd);\\n\\n        uint256 extraRewardsLength = IRewards(REWARDS).rewardTokenLength();\\n        token_addresses = new address[](rewardTokens.length + extraRewardsLength + convexrewards.length);\\n        total_earned = new uint256[](rewardTokens.length + extraRewardsLength + convexrewards.length);\\n\\n        //add any tokens that happen to be already claimed but sitting on the vault\\n        //(ex. withdraw claiming REWARDS)\\n        for(uint256 i = 0; i < rewardTokens.length; i++){\\n            token_addresses[i] = rewardTokens[i];\\n            total_earned[i] = stakedearned[i] + IERC20(rewardTokens[i]).balanceOf(smartWallAdd);\\n        }\\n\\n        IRewards.EarnedData[] memory extraRewards = IRewards(REWARDS).claimableRewards(smartWallAdd);\\n        for(uint256 i = 0; i < extraRewards.length; i++){\\n            token_addresses[i+rewardTokens.length] = extraRewards[i].token;\\n            total_earned[i+rewardTokens.length] = extraRewards[i].amount;\\n        }\\n\\n        //add convex farm earned tokens\\n        for(uint256 i = 0; i < convexrewards.length; i++){\\n            token_addresses[i+rewardTokens.length+extraRewardsLength] = convexrewards[i].token;\\n            total_earned[i+rewardTokens.length+extraRewardsLength] = convexrewards[i].amount;\\n        }\\n    }\\n    \\n}\\n\",\"keccak256\":\"0xdb68b70dd9be7a4f49870af79dbea24c0a14ddd96eb8e13917c5eb0837fb19d1\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/VestedEscrowSmartWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\nimport \\\"./interfaces/IFraxFarmERC20.sol\\\";\\nimport \\\"./interfaces/IFraxFarmBase.sol\\\";\\nimport \\\"./interfaces/IConvexWrapperV2.sol\\\";\\nimport \\\"./interfaces/IRewards.sol\\\";\\n\\nimport \\\"./interfaces/IDistributor.sol\\\";\\nimport \\\"./interfaces/IRewardsHandler.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n\\npragma solidity ^0.8.0;\\n\\n/// @author RobAnon\\ncontract VestedEscrowSmartWallet {\\n\\n    using SafeERC20 for IERC20;\\n\\n    uint private constant MAX_INT = 2 ** 256 - 1;\\n\\n    address private immutable MASTER;\\n\\n    // Hardcoded for MVP\\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\\n\\n    address public constant FXS = 0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0;\\n    address public constant CRV = 0xD533a949740bb3306d119CC777fa900bA034cd52;\\n    address public constant CVX = 0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B;\\n\\n\\n\\n    constructor() {\\n        MASTER = msg.sender;\\n    }\\n\\n    modifier onlyMaster() {\\n        require(msg.sender == MASTER, 'Unauthorized!');\\n        _;\\n    }\\n\\n    function createLock(uint value, uint unlockTime, address user) external onlyMaster returns (bytes32 kek_id) {\\n        // Set all approvals up, don't if they're already set\\n        if(IERC20(STAKING_TOKEN).allowance(address(this), STAKING_ADDRESS) != MAX_INT) {\\n            IERC20(STAKING_TOKEN).approve(STAKING_ADDRESS, MAX_INT);\\n        }\\n        if(IERC20(CURVE_LP).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\\n            IERC20(CURVE_LP).approve(STAKING_TOKEN, MAX_INT);\\n        }\\n        if(IERC20(CONVEX_DEPOSIT_TOKEN).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\\n            IERC20(CONVEX_DEPOSIT_TOKEN).approve(STAKING_TOKEN, MAX_INT);\\n        }\\n\\n        //deposit into wrapper\\n        IConvexWrapperV2(STAKING_TOKEN).deposit(value, address(this));\\n\\n        //stake\\n        kek_id = IFraxFarmERC20(STAKING_ADDRESS).stakeLocked(value, unlockTime - block.timestamp);\\n        _checkpointRewards(user);\\n    }\\n\\n    function increaseAmount(uint amount, bytes32 kek_id, address user) external onlyMaster {\\n        if(amount > 0){\\n            //deposit into wrapper\\n            IConvexWrapperV2(STAKING_TOKEN).deposit(amount, address(this));\\n\\n            //add stake\\n            IFraxFarmERC20(STAKING_ADDRESS).lockAdditional(kek_id, amount);\\n        }\\n        \\n        //checkpoint rewards\\n        _checkpointRewards(user);\\n        _cleanMemory();\\n    }\\n\\n    function increaseUnlockTime(uint unlockTime, bytes32 kek_id, address user) external onlyMaster {\\n        //update time\\n        IFraxFarmERC20(STAKING_ADDRESS).lockLonger(kek_id, unlockTime);\\n        //checkpoint rewards\\n        _checkpointRewards(user);\\n        _cleanMemory();\\n    }\\n\\n    function withdraw(bytes32 kek_id, address user) external onlyMaster returns (uint balance) {\\n        // Withdraw\\n        IFraxFarmERC20(STAKING_ADDRESS).withdrawLocked(kek_id, address(this));\\n\\n        // Unwrap\\n        IConvexWrapperV2(STAKING_TOKEN).withdrawAndUnwrap(IERC20(STAKING_TOKEN).balanceOf(address(this)));\\n\\n        // Handle transfer\\n        balance = IERC20(CURVE_LP).balanceOf(address(this));\\n        IERC20(CURVE_LP).safeTransfer(user, balance);\\n        _checkpointRewards(user);\\n    }\\n\\n    function claimRewards(address user) external onlyMaster {\\n        _getReward(true, user); // Since this is just a demo, falling into edge cases acceptable.\\n        // Full produce will require proper edge-case handling for _getRewards\\n        _cleanMemory();\\n    }\\n\\n    /// Credit to doublesharp for the brilliant gas-saving concept\\n    /// Self-destructing clone pattern\\n    function cleanMemory() external onlyMaster {\\n        _cleanMemory();\\n    }\\n\\n    function _cleanMemory() internal {\\n        selfdestruct(payable(MASTER));\\n    }\\n\\n    //get reward with claim option.\\n    //_claim bool is for the off chance that rewardCollectionPause is true so getReward() fails but\\n    //there are tokens on this vault for cases such as withdraw() also calling claim.\\n    //can also be used to rescue tokens on the vault\\n    function _getReward(bool _claim, address user) internal {\\n\\n        //claim\\n        if(_claim){\\n            //claim frax farm\\n            IFraxFarmERC20(STAKING_ADDRESS).getReward(address(this));\\n            //claim convex farm and forward to owner\\n            IConvexWrapperV2(STAKING_TOKEN).getReward(address(this), user);\\n\\n            //double check there have been no crv/cvx claims directly to this address\\n            uint256 b = IERC20(CRV).balanceOf(address(this));\\n            if(b > 0){\\n                IERC20(CRV).safeTransfer(user, b);\\n            }\\n            b = IERC20(CVX).balanceOf(address(this));\\n            if(b > 0){\\n                IERC20(CVX).safeTransfer(user, b);\\n            }\\n        }\\n\\n        //process fxs fees\\n        _processFxs(user);\\n\\n        //get list of reward tokens\\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\\n\\n        //transfer\\n        _transferTokens(rewardTokens, user);\\n\\n        //extra rewards\\n        _processExtraRewards(user);\\n    }\\n\\n    //checkpoint and add/remove weight to convex rewards contract\\n    function _checkpointRewards(address user) internal{\\n        //if rewards are active, checkpoint\\n        if(IRewards(REWARDS).active()){\\n            //using liquidity shares from staking contract will handle rebasing tokens correctly\\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\\n            //get current balance of reward contract\\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\\n            if(userLiq >= bal){\\n                //add the difference to reward contract\\n                IRewards(REWARDS).deposit(user, userLiq - bal);\\n            }else{\\n                //remove the difference from the reward contract\\n                IRewards(REWARDS).withdraw(user, bal - userLiq);\\n            }\\n        }\\n    }\\n\\n    //apply fees to FXS and send remaining to owner\\n    function _processFxs(address user) internal{\\n\\n        // Transfer any FXS present to user\\n        uint sendAmount = IERC20(FXS).balanceOf(address(this));\\n        if(sendAmount > 0){\\n            IERC20(FXS).transfer(user, sendAmount);\\n        }\\n    }\\n\\n    //get extra rewards\\n    function _processExtraRewards(address user) internal{\\n        if(IRewards(REWARDS).active()){\\n            //check if there is a balance because the reward contract could have be activated later\\n            //dont use _checkpointRewards since difference of 0 will still call deposit() and cost gas\\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\\n            if(bal == 0 && userLiq > 0){\\n                //bal == 0 and liq > 0 can only happen if rewards were turned on after staking\\n                IRewards(REWARDS).deposit(user,userLiq);\\n            }\\n            IRewards(REWARDS).getReward(user);\\n        }\\n    }\\n\\n    //transfer other reward tokens besides FXS(which needs to have fees applied)\\n    function _transferTokens(address[] memory _tokens, address user) internal{\\n        //transfer all tokens\\n        for(uint256 i = 0; i < _tokens.length; i++){\\n            if(_tokens[i] != FXS){\\n                uint256 bal = IERC20(_tokens[i]).balanceOf(address(this));\\n                if(bal > 0){\\n                    IERC20(_tokens[i]).safeTransfer(user, bal);\\n                }\\n            }\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xc120b2fda12365bb110d517869e6cd51f4c8efe3080786dc6f8de7494320fa13\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IAddressRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n * @dev\\n *\\n */\\ninterface IAddressRegistry {\\n\\n    function initialize(\\n        address lock_manager_,\\n        address liquidity_,\\n        address revest_token_,\\n        address token_vault_,\\n        address revest_,\\n        address fnft_,\\n        address metadata_,\\n        address admin_,\\n        address rewards_\\n    ) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function setAdmin(address admin) external;\\n\\n    function getLockManager() external view returns (address);\\n\\n    function setLockManager(address manager) external;\\n\\n    function getTokenVault() external view returns (address);\\n\\n    function setTokenVault(address vault) external;\\n\\n    function getRevestFNFT() external view returns (address);\\n\\n    function setRevestFNFT(address fnft) external;\\n\\n    function getMetadataHandler() external view returns (address);\\n\\n    function setMetadataHandler(address metadata) external;\\n\\n    function getRevest() external view returns (address);\\n\\n    function setRevest(address revest) external;\\n\\n    function getDEX(uint index) external view returns (address);\\n\\n    function setDex(address dex) external;\\n\\n    function getRevestToken() external view returns (address);\\n\\n    function setRevestToken(address token) external;\\n\\n    function getRewardsHandler() external view returns(address);\\n\\n    function setRewardsHandler(address esc) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLPs() external view returns (address);\\n\\n    function setLPs(address liquidToken) external;\\n\\n}\\n\",\"keccak256\":\"0x129fecf36c5c18bcf17fcbb1b09267d52ca7a6e136ab9eaa037fd123d4822685\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IConvexWrapperV2.sol\":{\"content\":\"interface IConvexWrapperV2{\\n\\n   struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n\\n  function collateralVault() external view returns(address vault);\\n  function convexPoolId() external view returns(uint256 _poolId);\\n  function balanceOf(address _account) external view returns(uint256);\\n  function totalBalanceOf(address _account) external view returns(uint256);\\n  function deposit(uint256 _amount, address _to) external;\\n  function stake(uint256 _amount, address _to) external;\\n  function withdraw(uint256 _amount) external;\\n  function withdrawAndUnwrap(uint256 _amount) external;\\n  function getReward(address _account) external;\\n  function getReward(address _account, address _forwardTo) external;\\n  function rewardLength() external view returns(uint256);\\n  function earned(address _account) external returns(EarnedData[] memory claimable);\\n  function earnedView(address _account) external view returns(EarnedData[] memory claimable);\\n  function setVault(address _vault) external;\\n  function user_checkpoint(address[2] calldata _accounts) external returns(bool);\\n}\\n\",\"keccak256\":\"0xb8840d397b7bc4beb21b1cbc0a81f5b28ced3728cdfc216b1de960a0c0f0e449\"},\"contracts/interfaces/IDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IDistributor {\\n\\n    function claim() external returns (uint amountTransferred);\\n\\n    function N_COINS() external view returns (uint n);\\n\\n    function tokens(uint index) external view returns (address token);\\n\\n    function user_epoch_of(address _addr) external view returns (uint epoch);\\n\\n    function tokens_per_day(uint index, uint index2) external view returns (uint tokensPerDay);\\n\\n    function start_time() external view returns (uint startTime);\\n\\n    function last_token_times(uint index) external view returns (uint lastTime);//Call with index 0\\n\\n    function time_cursor() external view returns (uint timeCursor);\\n\\n    function time_cursor_of(address addr) external view returns (uint timeCursor);\\n\\n    function ve_supply(uint index) external view returns (uint supply);\\n\\n}\\n\",\"keccak256\":\"0x23be8c33a74f1edc05db02131855cef8250231bc41dc3122f9483dca6b4e11be\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IFNFTHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n\\ninterface IFNFTHandler  {\\n    function mint(address account, uint id, uint amount, bytes memory data) external;\\n\\n    function mintBatchRec(address[] memory recipients, uint[] memory quantities, uint id, uint newSupply, bytes memory data) external;\\n\\n    function mintBatch(address to, uint[] memory ids, uint[] memory amounts, bytes memory data) external;\\n\\n    function setURI(string memory newuri) external;\\n\\n    function burn(address account, uint id, uint amount) external;\\n\\n    function burnBatch(address account, uint[] memory ids, uint[] memory amounts) external;\\n\\n    function getBalance(address tokenHolder, uint id) external view returns (uint);\\n\\n    function getSupply(uint fnftId) external view returns (uint);\\n\\n    function getNextId() external view returns (uint);\\n}\\n\",\"keccak256\":\"0x9824a781b38146e5d6cd04f7a7a126ad3047188f39b8ac63189124219b524df6\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IFraxFarmBase.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IFraxFarmBase{\\n\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n\\n}\",\"keccak256\":\"0x345cf192a1be9f325aa553e9baf7dfa99ee8cf940febbd38e55ff16965ddb7d1\"},\"contracts/interfaces/IFraxFarmERC20.sol\":{\"content\":\"\\ninterface IFraxFarmERC20 {\\n    \\n    struct LockedStake {\\n        bytes32 kek_id;\\n        uint256 start_timestamp;\\n        uint256 liquidity;\\n        uint256 ending_timestamp;\\n        uint256 lock_multiplier; // 6 decimals of precision. 1x = 1000000\\n    }\\n\\n    function owner() external view returns (address);\\n    function stakingToken() external view returns (address);\\n    function fraxPerLPToken() external view returns (uint256);\\n    function calcCurCombinedWeight(address account) external view\\n        returns (\\n            uint256 old_combined_weight,\\n            uint256 new_vefxs_multiplier,\\n            uint256 new_combined_weight\\n        );\\n    function lockedStakesOf(address account) external view returns (LockedStake[] memory);\\n    function lockedStakesOfLength(address account) external view returns (uint256);\\n    function lockAdditional(bytes32 kek_id, uint256 addl_liq) external;\\n    function lockLonger(bytes32 kek_id, uint256 new_ending_ts) external;\\n    function stakeLocked(uint256 liquidity, uint256 secs) external returns (bytes32);\\n    function withdrawLocked(bytes32 kek_id, address destination_address) external returns (uint256);\\n\\n\\n\\n    function periodFinish() external view returns (uint256);\\n    function getAllRewardTokens() external view returns (address[] memory);\\n    function earned(address account) external view returns (uint256[] memory new_earned);\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n    function totalCombinedWeight() external view returns (uint256);\\n    function combinedWeightOf(address account) external view returns (uint256);\\n    function lockMultiplier(uint256 secs) external view returns (uint256);\\n    function rewardRates(uint256 token_idx) external view returns (uint256 rwd_rate);\\n\\n    function userStakedFrax(address account) external view returns (uint256);\\n    function proxyStakedFrax(address proxy_address) external view returns (uint256);\\n    function maxLPForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoostProxy(address proxy_address) external view returns (uint256);\\n    function veFXSMultiplier(address account) external view returns (uint256 vefxs_multiplier);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n    function vefxs_max_multiplier() external view returns(uint256);\\n    function vefxs_boost_scale_factor() external view returns(uint256);\\n    function vefxs_per_frax_for_max_boost() external view returns(uint256);\\n    function getProxyFor(address addr) external view returns (address);\\n\\n    function sync() external;\\n}\",\"keccak256\":\"0xed963af53ab2562f97d7d9e883939ac82945d9d7b614fb26707b4d803cc0b600\"},\"contracts/interfaces/ILockManager.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ILockManager {\\n\\n    function createLock(uint fnftId, IRevest.LockParam memory lock) external returns (uint);\\n\\n    function getLock(uint lockId) external view returns (IRevest.Lock memory);\\n\\n    function fnftIdToLockId(uint fnftId) external view returns (uint);\\n\\n    function fnftIdToLock(uint fnftId) external view returns (IRevest.Lock memory);\\n\\n    function pointFNFTToLock(uint fnftId, uint lockId) external;\\n\\n    function lockTypes(uint tokenId) external view returns (IRevest.LockType);\\n\\n    function unlockFNFT(uint fnftId, address sender) external returns (bool);\\n\\n    function getLockMaturity(uint fnftId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7b3170ed345d9750b315197f48f8076c8731e21640f7a063563bc93a6c2d1c00\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiver is IRegistryProvider, IERC165 {\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address asset,\\n        address payable owner,\\n        uint quantity\\n    ) external;\\n\\n    function getCustomMetadata(uint fnftId) external view returns (string memory);\\n\\n    function getValue(uint fnftId) external view returns (uint);\\n\\n    function getAsset(uint fnftId) external view returns (address);\\n\\n    function getOutputDisplayValues(uint fnftId) external view returns (bytes memory);\\n\\n}\\n\",\"keccak256\":\"0xdb291a6d6ff61ba3992f23044751c20736dbde86d879d3a466c854382abd9550\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV2.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiver.sol\\\";\\nimport \\\"./IRevest.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV2 is IOutputReceiver {\\n\\n    // Future proofing for secondary callbacks during withdrawal\\n    // Could just use triggerOutputReceiverUpdate and call withdrawal function\\n    // But deliberately using reentry is poor form and reminds me too much of OAuth 2.0 \\n    function receiveSecondaryCallback(\\n        uint fnftId,\\n        address payable owner,\\n        uint quantity,\\n        IRevest.FNFTConfig memory config,\\n        bytes memory args\\n    ) external payable;\\n\\n    // Allows for similar function to address lock, updating state while still locked\\n    // Called by the user directly\\n    function triggerOutputReceiverUpdate(\\n        uint fnftId,\\n        bytes memory args\\n    ) external;\\n\\n    // This function should only ever be called when a split or additional deposit has occurred \\n    function handleFNFTRemaps(uint fnftId, uint[] memory newFNFTIds, address caller, bool cleanup) external;\\n\\n}\\n\",\"keccak256\":\"0x3f54001da218efb1d47b5b5419f1796995a483fffc368d51929ab5fb61de0d62\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV3.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiverV2.sol\\\";\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV3 is IOutputReceiverV2 {\\n\\n    event DepositERC20OutputReceiver(address indexed mintTo, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event DepositERC721OutputReceiver(address indexed mintTo, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\\n\\n    event DepositERC1155OutputReceiver(address indexed mintTo, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC20OutputReceiver(address indexed caller, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC721OutputReceiver(address indexed caller, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC1155OutputReceiver(address indexed caller, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external;\\n\\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint quantity, address caller) external;\\n\\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external;\\n\\n}\\n\",\"keccak256\":\"0xb6b7ca189b8c8238df161cf2425aaf5fddc772947d654341ea9b4eb9f1e3c616\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRewards.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >= 0.8.0;\\n\\ninterface IRewards{\\n    struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n    \\n    function initialize(uint256 _pid, bool _startActive) external;\\n    function addReward(address _rewardsToken, address _distributor) external;\\n    function approveRewardDistributor(\\n        address _rewardsToken,\\n        address _distributor,\\n        bool _approved\\n    ) external;\\n    function deposit(address _owner, uint256 _amount) external;\\n    function withdraw(address _owner, uint256 _amount) external;\\n    function getReward(address _forward) external;\\n    function notifyRewardAmount(address _rewardsToken, uint256 _reward) external;\\n    function balanceOf(address account) external view returns (uint256);\\n    function claimableRewards(address _account) external view returns(EarnedData[] memory userRewards);\\n    function rewardTokens(uint256 _rid) external view returns (address);\\n    function rewardTokenLength() external view returns(uint256);\\n    function active() external view returns(bool);\\n}\\n\",\"keccak256\":\"0x5c4bd045413172f1911d4756733f9914dd33044472ccfbe41a2479d3add977df\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRewardsHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRewardsHandler {\\n\\n    struct UserBalance {\\n        uint allocPoint; // Allocation points\\n        uint lastMul;\\n    }\\n\\n    function receiveFee(address token, uint amount) external;\\n\\n    function updateLPShares(uint fnftId, uint newShares) external;\\n\\n    function updateBasicShares(uint fnftId, uint newShares) external;\\n\\n    function getAllocPoint(uint fnftId, address token, bool isBasic) external view returns (uint);\\n\\n    function claimRewards(uint fnftId, address caller) external returns (uint);\\n\\n    function setStakingContract(address stake) external;\\n\\n    function getRewards(uint fnftId, address token) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x7940819dfa042009e0b10dff3dd7224f3d1ae3a4c7addab3e8f33631c1ed5db7\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/ITokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ITokenVault {\\n\\n    function createFNFT(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig,\\n        uint quantity,\\n        address from\\n    ) external;\\n\\n    function withdrawToken(\\n        uint fnftId,\\n        uint quantity,\\n        address user\\n    ) external;\\n\\n    function depositToken(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external;\\n\\n    function cloneFNFTConfig(IRevest.FNFTConfig memory old) external returns (IRevest.FNFTConfig memory);\\n\\n    function mapFNFTToToken(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external;\\n\\n    function handleMultipleDeposits(\\n        uint fnftId,\\n        uint newFNFTId,\\n        uint amount\\n    ) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory newFNFTIds,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external;\\n\\n    function getFNFT(uint fnftId) external view returns (IRevest.FNFTConfig memory);\\n    function getFNFTCurrentValue(uint fnftId) external view returns (uint);\\n    function getNontransferable(uint fnftId) external view returns (bool);\\n    function getSplitsRemaining(uint fnftId) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xaf57460b4494ba71a094c4c89f095254c65796c1ddff0f41978c5f141472962d\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/lib/RevestHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ITokenVault.sol\\\";\\nimport \\\"../interfaces/ILockManager.sol\\\";\\nimport \\\"../interfaces/IRevest.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n\\nlibrary RevestHelper {\\n\\n \\n    function boolToString(bool arg) internal pure returns (string memory boolean) {\\n        boolean = arg ? \\\"true\\\" : \\\"false\\\";\\n    }\\n\\n    function getLockType(IRevest.LockType lock) internal pure returns (string memory lockType) {\\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Time\\\";\\n        } \\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Value\\\";\\n        }\\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Address\\\";\\n        }\\n    } \\n\\n    function getTicker(address asset) internal view returns (string memory ticker) {\\n        try IERC20Metadata(asset).symbol() returns (string memory tick) {\\n            ticker = tick;\\n        } catch {\\n            ticker = '???';\\n        }\\n    }\\n\\n    function getName(address asset) internal view returns (string memory ticker) {\\n        try IERC20Metadata(asset).name() returns (string memory tick) {\\n            ticker = tick;\\n        } catch {\\n            ticker = 'Unknown Token';\\n        }\\n    }\\n\\n    function amountToDecimal(uint amt, address asset) internal view returns (string memory decStr) {\\n        uint8 decimals;\\n        try IERC20Metadata(asset).decimals() returns (uint8 dec) {\\n            decimals = dec;\\n        } catch {\\n            decimals = 18;\\n        }\\n        decStr = decimalString(amt, decimals);\\n    }\\n\\n    function toString(uint _i) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint j = _i;\\n        uint len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint k = len;\\n        while (_i != 0) {\\n            k = k-1;\\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    function decimalString(uint256 number, uint8 decimals) internal pure returns(string memory){\\n        uint256 tenPowDecimals = 10 ** decimals;\\n\\n        uint256 temp = number;\\n        uint8 digits;\\n        uint8 numSigfigs;\\n        while (temp != 0) {\\n            if (numSigfigs > 0) {\\n                // count all digits preceding least significant figure\\n                numSigfigs++;\\n            } else if (temp % 10 != 0) {\\n                numSigfigs++;\\n            }\\n            digits++;\\n            temp /= 10;\\n        }\\n\\n        DecimalStringParams memory params;\\n        if((digits - numSigfigs) >= decimals) {\\n            // no decimals, ensure we preserve all trailing zeros\\n            params.sigfigs = number / tenPowDecimals;\\n            params.sigfigIndex = digits - decimals;\\n            params.bufferLength = params.sigfigIndex;\\n        } else {\\n            // chop all trailing zeros for numbers with decimals\\n            params.sigfigs = number / (10 ** (digits - numSigfigs));\\n            if(tenPowDecimals > number){\\n                // number is less tahn one\\n                // in this case, there may be leading zeros after the decimal place \\n                // that need to be added\\n\\n                // offset leading zeros by two to account for leading '0.'\\n                params.zerosStartIndex = 2;\\n                params.zerosEndIndex = decimals - digits + 2;\\n                params.sigfigIndex = numSigfigs + params.zerosEndIndex;\\n                params.bufferLength = params.sigfigIndex;\\n                params.isLessThanOne = true;\\n            } else {\\n                // In this case, there are digits before and\\n                // after the decimal place\\n                params.sigfigIndex = numSigfigs + 1;\\n                params.decimalIndex = digits - decimals + 1;\\n            }\\n        }\\n        params.bufferLength = params.sigfigIndex;\\n        return generateDecimalString(params);\\n    }\\n\\n    // With modifications, the below taken \\n    // from https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/NFTDescriptor.sol#L189-L231\\n\\n    struct DecimalStringParams {\\n        // significant figures of decimal\\n        uint256 sigfigs;\\n        // length of decimal string\\n        uint8 bufferLength;\\n        // ending index for significant figures (funtion works backwards when copying sigfigs)\\n        uint8 sigfigIndex;\\n        // index of decimal place (0 if no decimal)\\n        uint8 decimalIndex;\\n        // start index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosStartIndex;\\n        // end index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosEndIndex;\\n        // true if decimal number is less than one\\n        bool isLessThanOne;\\n    }\\n\\n    function generateDecimalString(DecimalStringParams memory params) private pure returns (string memory) {\\n        bytes memory buffer = new bytes(params.bufferLength);\\n        if (params.isLessThanOne) {\\n            buffer[0] = '0';\\n            buffer[1] = '.';\\n        }\\n\\n        // add leading/trailing 0's\\n        for (uint256 zerosCursor = params.zerosStartIndex; zerosCursor < params.zerosEndIndex; zerosCursor++) {\\n            buffer[zerosCursor] = bytes1(uint8(48));\\n        }\\n        // add sigfigs\\n        while (params.sigfigs > 0) {\\n            if (params.decimalIndex > 0 && params.sigfigIndex == params.decimalIndex) {\\n                buffer[--params.sigfigIndex] = '.';\\n            }\\n            buffer[--params.sigfigIndex] = bytes1(uint8(uint256(48) + (params.sigfigs % 10)));\\n            params.sigfigs /= 10;\\n        }\\n        return string(buffer);\\n    }\\n}\",\"keccak256\":\"0xe9708bee1fa68c61aeca3780e52cb8eb741844388c508cda66195fabbb967cdb\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IWETH":{"abi":[{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"deposit()":"d0e30db0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RevestConvexFrax.sol\":\"IWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/RevestConvexFrax.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IAddressRegistry.sol\\\";\\nimport \\\"./interfaces/IOutputReceiverV3.sol\\\";\\nimport \\\"./interfaces/ITokenVault.sol\\\";\\nimport \\\"./interfaces/IRevest.sol\\\";\\nimport \\\"./interfaces/IFNFTHandler.sol\\\";\\nimport \\\"./interfaces/ILockManager.sol\\\";\\n\\nimport \\\"./interfaces/IFraxFarmERC20.sol\\\";\\nimport \\\"./interfaces/IFraxFarmBase.sol\\\";\\nimport \\\"./interfaces/IConvexWrapperV2.sol\\\";\\nimport \\\"./interfaces/IRewards.sol\\\";\\n\\nimport \\\"./VestedEscrowSmartWallet.sol\\\";\\n\\n// OZ imports\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\n\\n// Libraries\\nimport \\\"./lib/RevestHelper.sol\\\";\\n\\ninterface ITokenVaultTracker {\\n    function tokenTrackers(address token) external view returns (IRevest.TokenTracker memory);\\n}\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n}\\n\\n/**\\n * @title LiquidDriver <> Revest integration for tokenizing xLQDR positions\\n * @author RobAnon\\n * @dev \\n */\\ncontract RevestLiquidDriver is IOutputReceiverV3, Ownable, ERC165 {\\n    \\n    using SafeERC20 for IERC20;\\n\\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n\\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\\n\\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\\n\\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\\n\\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\\n\\n\\n    // Where to find the Revest address registry that contains info about what contracts live where\\n    address public addressRegistry;\\n\\n    // Token used for voting escrow\\n    address public constant TOKEN = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n\\n    // Template address for VE wallets\\n    address public immutable TEMPLATE;\\n\\n    // The file which tells our frontend how to visually represent such an FNFT\\n    string public METADATA = \\\"https://revest.mypinata.cloud/ipfs/QmRLesf7CzwLapJS3aWWM9wS9HqgvX8Z36zQhWSd1uMFmp\\\";\\n\\n    // Constant used for approval\\n    uint private constant MAX_INT = 2 ** 256 - 1;\\n\\n    uint private constant DAY = 86400;\\n\\n    uint private constant MAX_LOCKUP = 2 * 365 days;\\n\\n    mapping (uint => bytes32) public kekIds;\\n\\n\\n    // Initialize the contract with the needed valeus\\n    constructor(address _provider) {\\n        addressRegistry = _provider;\\n        VestedEscrowSmartWallet wallet = new VestedEscrowSmartWallet();\\n        TEMPLATE = address(wallet);\\n    }\\n\\n    modifier onlyRevestController() {\\n        require(msg.sender == IAddressRegistry(addressRegistry).getRevest(), 'Unauthorized Access!');\\n        _;\\n    }\\n\\n    modifier onlyTokenHolder(uint fnftId) {\\n        IAddressRegistry reg = IAddressRegistry(addressRegistry);\\n        require(IFNFTHandler(reg.getRevestFNFT()).getBalance(msg.sender, fnftId) > 0, 'E064');\\n        _;\\n    }\\n\\n    // Allows core Revest contracts to make sure this contract can do what is needed\\n    // Mandatory method\\n    function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IOutputReceiver).interfaceId\\n            || interfaceId == type(IOutputReceiverV2).interfaceId\\n            || interfaceId == type(IOutputReceiverV3).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    function lockTokens(\\n        uint endTime,\\n        uint amountToLock\\n    ) external payable returns (uint fnftId) {    \\n\\n        /// Mint FNFT\\n        {\\n            // Initialize the Revest config object\\n            IRevest.FNFTConfig memory fnftConfig;\\n\\n            // Want FNFT to be extendable and support multiple deposits\\n            fnftConfig.isMulti = true;\\n\\n            fnftConfig.maturityExtension = true;\\n\\n            // Will result in the asset being sent back to this contract upon withdrawal\\n            // Results solely in a callback\\n            fnftConfig.pipeToContract = address(this);  \\n\\n            // Set these two arrays according to Revest specifications to say\\n            // Who gets these FNFTs and how many copies of them we should create\\n            address[] memory recipients = new address[](1);\\n            recipients[0] = _msgSender();\\n\\n            uint[] memory quantities = new uint[](1);\\n            quantities[0] = 1;\\n\\n            address revest = IAddressRegistry(addressRegistry).getRevest();\\n\\n            \\n            fnftId = IRevest(revest).mintTimeLock(endTime, recipients, quantities, fnftConfig);\\n        }\\n\\n        address smartWallAdd;\\n        {\\n            // We deploy the smart wallet\\n            smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n            VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n\\n            // Transfer the tokens from the user to this wallet\\n            IERC20(CURVE_LP).safeTransferFrom(msg.sender, smartWallAdd, amountToLock);\\n\\n            // We deposit our funds into the wallet, store kek_id\\n            kekIds[fnftId] = wallet.createLock(amountToLock, endTime, msg.sender);\\n            wallet.cleanMemory();\\n            emit DepositERC20OutputReceiver(msg.sender, TOKEN, amountToLock, fnftId, abi.encode(smartWallAdd));\\n        }\\n    }\\n\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address,\\n        address payable caller,\\n        uint\\n    ) external override  {\\n        \\n        // Security check to make sure the Revest vault is the only contract that can call this method\\n        address vault = IAddressRegistry(addressRegistry).getTokenVault();\\n        require(_msgSender() == vault, 'E016');\\n\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n\\n        uint balance = wallet.withdraw(kekIds[fnftId], caller);\\n        wallet.cleanMemory();\\n        emit WithdrawERC20OutputReceiver(caller, TOKEN, balance, fnftId, abi.encode(smartWallAdd));\\n    }\\n\\n    // Not applicable, as these cannot be split\\n    function handleFNFTRemaps(uint, uint[] memory, address, bool) external pure override {\\n        require(false, 'Not applicable');\\n    }\\n    \\n    // Allows custom parameters to be passed during withdrawals\\n    // This and the proceeding method are both parts of the V2 output receiver interface\\n    // and not typically necessary. For the sake of demonstration, they are included\\n    function receiveSecondaryCallback(\\n        uint fnftId,\\n        address payable owner,\\n        uint quantity,\\n        IRevest.FNFTConfig memory config,\\n        bytes memory args\\n    ) external payable override {}\\n\\n    // Callback from Revest.sol to extend maturity\\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external override onlyRevestController {\\n        require(expiration - block.timestamp <= MAX_LOCKUP, 'Max lockup is 2 years');\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        wallet.increaseUnlockTime(expiration, kekIds[fnftId], caller);\\n    }\\n\\n    /// Prerequisite: User has approved this contract to spend tokens on their behalf\\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint, address caller) external override onlyRevestController {\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        IERC20(TOKEN).safeTransferFrom(caller, smartWallAdd, amountToDeposit);\\n        wallet.increaseAmount(amountToDeposit, kekIds[fnftId], caller);\\n    }\\n\\n    // Not applicable\\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external override {}\\n\\n    // Claims REWARDS on user's behalf\\n    function triggerOutputReceiverUpdate(\\n        uint fnftId,\\n        bytes memory\\n    ) external override onlyTokenHolder(fnftId) {\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        wallet.claimRewards(msg.sender);\\n    }       \\n\\n\\n    /// Admin Functions\\n\\n    function setAddressRegistry(address addressRegistry_) external override onlyOwner {\\n        addressRegistry = addressRegistry_;\\n    }\\n\\n    function setMetadata(string memory _meta) external onlyOwner {\\n        METADATA = _meta;\\n    }\\n\\n    /// If funds are mistakenly sent to smart wallets, this will allow the owner to assist in rescue\\n    function rescueNativeFunds() external onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n    }\\n\\n    /// Under no circumstances should this contract ever contain ERC-20 tokens at the end of a transaction\\n    /// If it does, someone has mistakenly sent funds to the contract, and this function can rescue their tokens\\n    function rescueERC20(address token) external onlyOwner {\\n        uint amount = IERC20(token).balanceOf(address(this));\\n        IERC20(token).safeTransfer(msg.sender, amount);\\n    }\\n\\n    /// View Functions\\n\\n    function getCustomMetadata(uint) external view override returns (string memory) {\\n        return METADATA;\\n    }\\n    \\n    // Will give balance in LPs\\n    function getValue(uint fnftId) public view override returns (uint) {\\n        return IConvexWrapperV2(STAKING_TOKEN).totalBalanceOf(Clones.predictDeterministicAddress(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId))));\\n    }\\n\\n    // Must always be in native token\\n    function getAsset(uint) external pure override returns (address) {\\n        return CURVE_LP;\\n    }\\n\\n    function getOutputDisplayValues(uint fnftId) external view override returns (bytes memory displayData) {\\n        (address[] memory tokens, uint256[] memory rewardAmounts) = earned(fnftId);\\n        string[] memory rewardsDesc = new string[](rewardAmounts.length);\\n        bool hasRewards = rewardAmounts.length > 0;\\n        if(hasRewards) {\\n            for(uint i = 0; i < tokens.length; i++) {\\n                address token = tokens[i];\\n                string memory par1 = string(abi.encodePacked(RevestHelper.getName(token),\\\": \\\"));\\n                string memory par2 = string(abi.encodePacked(RevestHelper.amountToDecimal(rewardAmounts[i], token), \\\" [\\\", RevestHelper.getTicker(token), \\\"] Tokens Available\\\"));\\n                rewardsDesc[i] = string(abi.encodePacked(par1, par2));\\n            }\\n        }\\n        address smartWallet = getAddressForFNFT(fnftId);\\n        uint maxExtension = block.timestamp / (1 days) * (1 days) + MAX_LOCKUP; //Ensures no confusion with time zones and date-selectors\\n        displayData = abi.encode(smartWallet, rewardsDesc, hasRewards, maxExtension, TOKEN);\\n    }\\n\\n    function getAddressRegistry() external view override returns (address) {\\n        return addressRegistry;\\n    }\\n\\n    function getRevest() internal view returns (IRevest) {\\n        return IRevest(IAddressRegistry(addressRegistry).getRevest());\\n    }\\n\\n    function getAddressForFNFT(uint fnftId) public view returns (address smartWallAdd) {\\n        smartWallAdd = Clones.predictDeterministicAddress(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n    }\\n\\n    \\n    //helper function to combine earned tokens on staking contract and any tokens that are on this vault\\n    function earned(uint fnftId) internal view returns (address[] memory token_addresses, uint256[] memory total_earned) {\\n        //get list of reward tokens\\n        address smartWallAdd = getAddressForFNFT(fnftId);\\n\\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\\n        uint256[] memory stakedearned = IFraxFarmERC20(STAKING_ADDRESS).earned(smartWallAdd);\\n        IConvexWrapperV2.EarnedData[] memory convexrewards = IConvexWrapperV2(STAKING_TOKEN).earnedView(smartWallAdd);\\n\\n        uint256 extraRewardsLength = IRewards(REWARDS).rewardTokenLength();\\n        token_addresses = new address[](rewardTokens.length + extraRewardsLength + convexrewards.length);\\n        total_earned = new uint256[](rewardTokens.length + extraRewardsLength + convexrewards.length);\\n\\n        //add any tokens that happen to be already claimed but sitting on the vault\\n        //(ex. withdraw claiming REWARDS)\\n        for(uint256 i = 0; i < rewardTokens.length; i++){\\n            token_addresses[i] = rewardTokens[i];\\n            total_earned[i] = stakedearned[i] + IERC20(rewardTokens[i]).balanceOf(smartWallAdd);\\n        }\\n\\n        IRewards.EarnedData[] memory extraRewards = IRewards(REWARDS).claimableRewards(smartWallAdd);\\n        for(uint256 i = 0; i < extraRewards.length; i++){\\n            token_addresses[i+rewardTokens.length] = extraRewards[i].token;\\n            total_earned[i+rewardTokens.length] = extraRewards[i].amount;\\n        }\\n\\n        //add convex farm earned tokens\\n        for(uint256 i = 0; i < convexrewards.length; i++){\\n            token_addresses[i+rewardTokens.length+extraRewardsLength] = convexrewards[i].token;\\n            total_earned[i+rewardTokens.length+extraRewardsLength] = convexrewards[i].amount;\\n        }\\n    }\\n    \\n}\\n\",\"keccak256\":\"0xdb68b70dd9be7a4f49870af79dbea24c0a14ddd96eb8e13917c5eb0837fb19d1\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/VestedEscrowSmartWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\nimport \\\"./interfaces/IFraxFarmERC20.sol\\\";\\nimport \\\"./interfaces/IFraxFarmBase.sol\\\";\\nimport \\\"./interfaces/IConvexWrapperV2.sol\\\";\\nimport \\\"./interfaces/IRewards.sol\\\";\\n\\nimport \\\"./interfaces/IDistributor.sol\\\";\\nimport \\\"./interfaces/IRewardsHandler.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n\\npragma solidity ^0.8.0;\\n\\n/// @author RobAnon\\ncontract VestedEscrowSmartWallet {\\n\\n    using SafeERC20 for IERC20;\\n\\n    uint private constant MAX_INT = 2 ** 256 - 1;\\n\\n    address private immutable MASTER;\\n\\n    // Hardcoded for MVP\\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\\n\\n    address public constant FXS = 0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0;\\n    address public constant CRV = 0xD533a949740bb3306d119CC777fa900bA034cd52;\\n    address public constant CVX = 0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B;\\n\\n\\n\\n    constructor() {\\n        MASTER = msg.sender;\\n    }\\n\\n    modifier onlyMaster() {\\n        require(msg.sender == MASTER, 'Unauthorized!');\\n        _;\\n    }\\n\\n    function createLock(uint value, uint unlockTime, address user) external onlyMaster returns (bytes32 kek_id) {\\n        // Set all approvals up, don't if they're already set\\n        if(IERC20(STAKING_TOKEN).allowance(address(this), STAKING_ADDRESS) != MAX_INT) {\\n            IERC20(STAKING_TOKEN).approve(STAKING_ADDRESS, MAX_INT);\\n        }\\n        if(IERC20(CURVE_LP).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\\n            IERC20(CURVE_LP).approve(STAKING_TOKEN, MAX_INT);\\n        }\\n        if(IERC20(CONVEX_DEPOSIT_TOKEN).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\\n            IERC20(CONVEX_DEPOSIT_TOKEN).approve(STAKING_TOKEN, MAX_INT);\\n        }\\n\\n        //deposit into wrapper\\n        IConvexWrapperV2(STAKING_TOKEN).deposit(value, address(this));\\n\\n        //stake\\n        kek_id = IFraxFarmERC20(STAKING_ADDRESS).stakeLocked(value, unlockTime - block.timestamp);\\n        _checkpointRewards(user);\\n    }\\n\\n    function increaseAmount(uint amount, bytes32 kek_id, address user) external onlyMaster {\\n        if(amount > 0){\\n            //deposit into wrapper\\n            IConvexWrapperV2(STAKING_TOKEN).deposit(amount, address(this));\\n\\n            //add stake\\n            IFraxFarmERC20(STAKING_ADDRESS).lockAdditional(kek_id, amount);\\n        }\\n        \\n        //checkpoint rewards\\n        _checkpointRewards(user);\\n        _cleanMemory();\\n    }\\n\\n    function increaseUnlockTime(uint unlockTime, bytes32 kek_id, address user) external onlyMaster {\\n        //update time\\n        IFraxFarmERC20(STAKING_ADDRESS).lockLonger(kek_id, unlockTime);\\n        //checkpoint rewards\\n        _checkpointRewards(user);\\n        _cleanMemory();\\n    }\\n\\n    function withdraw(bytes32 kek_id, address user) external onlyMaster returns (uint balance) {\\n        // Withdraw\\n        IFraxFarmERC20(STAKING_ADDRESS).withdrawLocked(kek_id, address(this));\\n\\n        // Unwrap\\n        IConvexWrapperV2(STAKING_TOKEN).withdrawAndUnwrap(IERC20(STAKING_TOKEN).balanceOf(address(this)));\\n\\n        // Handle transfer\\n        balance = IERC20(CURVE_LP).balanceOf(address(this));\\n        IERC20(CURVE_LP).safeTransfer(user, balance);\\n        _checkpointRewards(user);\\n    }\\n\\n    function claimRewards(address user) external onlyMaster {\\n        _getReward(true, user); // Since this is just a demo, falling into edge cases acceptable.\\n        // Full produce will require proper edge-case handling for _getRewards\\n        _cleanMemory();\\n    }\\n\\n    /// Credit to doublesharp for the brilliant gas-saving concept\\n    /// Self-destructing clone pattern\\n    function cleanMemory() external onlyMaster {\\n        _cleanMemory();\\n    }\\n\\n    function _cleanMemory() internal {\\n        selfdestruct(payable(MASTER));\\n    }\\n\\n    //get reward with claim option.\\n    //_claim bool is for the off chance that rewardCollectionPause is true so getReward() fails but\\n    //there are tokens on this vault for cases such as withdraw() also calling claim.\\n    //can also be used to rescue tokens on the vault\\n    function _getReward(bool _claim, address user) internal {\\n\\n        //claim\\n        if(_claim){\\n            //claim frax farm\\n            IFraxFarmERC20(STAKING_ADDRESS).getReward(address(this));\\n            //claim convex farm and forward to owner\\n            IConvexWrapperV2(STAKING_TOKEN).getReward(address(this), user);\\n\\n            //double check there have been no crv/cvx claims directly to this address\\n            uint256 b = IERC20(CRV).balanceOf(address(this));\\n            if(b > 0){\\n                IERC20(CRV).safeTransfer(user, b);\\n            }\\n            b = IERC20(CVX).balanceOf(address(this));\\n            if(b > 0){\\n                IERC20(CVX).safeTransfer(user, b);\\n            }\\n        }\\n\\n        //process fxs fees\\n        _processFxs(user);\\n\\n        //get list of reward tokens\\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\\n\\n        //transfer\\n        _transferTokens(rewardTokens, user);\\n\\n        //extra rewards\\n        _processExtraRewards(user);\\n    }\\n\\n    //checkpoint and add/remove weight to convex rewards contract\\n    function _checkpointRewards(address user) internal{\\n        //if rewards are active, checkpoint\\n        if(IRewards(REWARDS).active()){\\n            //using liquidity shares from staking contract will handle rebasing tokens correctly\\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\\n            //get current balance of reward contract\\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\\n            if(userLiq >= bal){\\n                //add the difference to reward contract\\n                IRewards(REWARDS).deposit(user, userLiq - bal);\\n            }else{\\n                //remove the difference from the reward contract\\n                IRewards(REWARDS).withdraw(user, bal - userLiq);\\n            }\\n        }\\n    }\\n\\n    //apply fees to FXS and send remaining to owner\\n    function _processFxs(address user) internal{\\n\\n        // Transfer any FXS present to user\\n        uint sendAmount = IERC20(FXS).balanceOf(address(this));\\n        if(sendAmount > 0){\\n            IERC20(FXS).transfer(user, sendAmount);\\n        }\\n    }\\n\\n    //get extra rewards\\n    function _processExtraRewards(address user) internal{\\n        if(IRewards(REWARDS).active()){\\n            //check if there is a balance because the reward contract could have be activated later\\n            //dont use _checkpointRewards since difference of 0 will still call deposit() and cost gas\\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\\n            if(bal == 0 && userLiq > 0){\\n                //bal == 0 and liq > 0 can only happen if rewards were turned on after staking\\n                IRewards(REWARDS).deposit(user,userLiq);\\n            }\\n            IRewards(REWARDS).getReward(user);\\n        }\\n    }\\n\\n    //transfer other reward tokens besides FXS(which needs to have fees applied)\\n    function _transferTokens(address[] memory _tokens, address user) internal{\\n        //transfer all tokens\\n        for(uint256 i = 0; i < _tokens.length; i++){\\n            if(_tokens[i] != FXS){\\n                uint256 bal = IERC20(_tokens[i]).balanceOf(address(this));\\n                if(bal > 0){\\n                    IERC20(_tokens[i]).safeTransfer(user, bal);\\n                }\\n            }\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xc120b2fda12365bb110d517869e6cd51f4c8efe3080786dc6f8de7494320fa13\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IAddressRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n * @dev\\n *\\n */\\ninterface IAddressRegistry {\\n\\n    function initialize(\\n        address lock_manager_,\\n        address liquidity_,\\n        address revest_token_,\\n        address token_vault_,\\n        address revest_,\\n        address fnft_,\\n        address metadata_,\\n        address admin_,\\n        address rewards_\\n    ) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function setAdmin(address admin) external;\\n\\n    function getLockManager() external view returns (address);\\n\\n    function setLockManager(address manager) external;\\n\\n    function getTokenVault() external view returns (address);\\n\\n    function setTokenVault(address vault) external;\\n\\n    function getRevestFNFT() external view returns (address);\\n\\n    function setRevestFNFT(address fnft) external;\\n\\n    function getMetadataHandler() external view returns (address);\\n\\n    function setMetadataHandler(address metadata) external;\\n\\n    function getRevest() external view returns (address);\\n\\n    function setRevest(address revest) external;\\n\\n    function getDEX(uint index) external view returns (address);\\n\\n    function setDex(address dex) external;\\n\\n    function getRevestToken() external view returns (address);\\n\\n    function setRevestToken(address token) external;\\n\\n    function getRewardsHandler() external view returns(address);\\n\\n    function setRewardsHandler(address esc) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLPs() external view returns (address);\\n\\n    function setLPs(address liquidToken) external;\\n\\n}\\n\",\"keccak256\":\"0x129fecf36c5c18bcf17fcbb1b09267d52ca7a6e136ab9eaa037fd123d4822685\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IConvexWrapperV2.sol\":{\"content\":\"interface IConvexWrapperV2{\\n\\n   struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n\\n  function collateralVault() external view returns(address vault);\\n  function convexPoolId() external view returns(uint256 _poolId);\\n  function balanceOf(address _account) external view returns(uint256);\\n  function totalBalanceOf(address _account) external view returns(uint256);\\n  function deposit(uint256 _amount, address _to) external;\\n  function stake(uint256 _amount, address _to) external;\\n  function withdraw(uint256 _amount) external;\\n  function withdrawAndUnwrap(uint256 _amount) external;\\n  function getReward(address _account) external;\\n  function getReward(address _account, address _forwardTo) external;\\n  function rewardLength() external view returns(uint256);\\n  function earned(address _account) external returns(EarnedData[] memory claimable);\\n  function earnedView(address _account) external view returns(EarnedData[] memory claimable);\\n  function setVault(address _vault) external;\\n  function user_checkpoint(address[2] calldata _accounts) external returns(bool);\\n}\\n\",\"keccak256\":\"0xb8840d397b7bc4beb21b1cbc0a81f5b28ced3728cdfc216b1de960a0c0f0e449\"},\"contracts/interfaces/IDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IDistributor {\\n\\n    function claim() external returns (uint amountTransferred);\\n\\n    function N_COINS() external view returns (uint n);\\n\\n    function tokens(uint index) external view returns (address token);\\n\\n    function user_epoch_of(address _addr) external view returns (uint epoch);\\n\\n    function tokens_per_day(uint index, uint index2) external view returns (uint tokensPerDay);\\n\\n    function start_time() external view returns (uint startTime);\\n\\n    function last_token_times(uint index) external view returns (uint lastTime);//Call with index 0\\n\\n    function time_cursor() external view returns (uint timeCursor);\\n\\n    function time_cursor_of(address addr) external view returns (uint timeCursor);\\n\\n    function ve_supply(uint index) external view returns (uint supply);\\n\\n}\\n\",\"keccak256\":\"0x23be8c33a74f1edc05db02131855cef8250231bc41dc3122f9483dca6b4e11be\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IFNFTHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n\\ninterface IFNFTHandler  {\\n    function mint(address account, uint id, uint amount, bytes memory data) external;\\n\\n    function mintBatchRec(address[] memory recipients, uint[] memory quantities, uint id, uint newSupply, bytes memory data) external;\\n\\n    function mintBatch(address to, uint[] memory ids, uint[] memory amounts, bytes memory data) external;\\n\\n    function setURI(string memory newuri) external;\\n\\n    function burn(address account, uint id, uint amount) external;\\n\\n    function burnBatch(address account, uint[] memory ids, uint[] memory amounts) external;\\n\\n    function getBalance(address tokenHolder, uint id) external view returns (uint);\\n\\n    function getSupply(uint fnftId) external view returns (uint);\\n\\n    function getNextId() external view returns (uint);\\n}\\n\",\"keccak256\":\"0x9824a781b38146e5d6cd04f7a7a126ad3047188f39b8ac63189124219b524df6\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IFraxFarmBase.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IFraxFarmBase{\\n\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n\\n}\",\"keccak256\":\"0x345cf192a1be9f325aa553e9baf7dfa99ee8cf940febbd38e55ff16965ddb7d1\"},\"contracts/interfaces/IFraxFarmERC20.sol\":{\"content\":\"\\ninterface IFraxFarmERC20 {\\n    \\n    struct LockedStake {\\n        bytes32 kek_id;\\n        uint256 start_timestamp;\\n        uint256 liquidity;\\n        uint256 ending_timestamp;\\n        uint256 lock_multiplier; // 6 decimals of precision. 1x = 1000000\\n    }\\n\\n    function owner() external view returns (address);\\n    function stakingToken() external view returns (address);\\n    function fraxPerLPToken() external view returns (uint256);\\n    function calcCurCombinedWeight(address account) external view\\n        returns (\\n            uint256 old_combined_weight,\\n            uint256 new_vefxs_multiplier,\\n            uint256 new_combined_weight\\n        );\\n    function lockedStakesOf(address account) external view returns (LockedStake[] memory);\\n    function lockedStakesOfLength(address account) external view returns (uint256);\\n    function lockAdditional(bytes32 kek_id, uint256 addl_liq) external;\\n    function lockLonger(bytes32 kek_id, uint256 new_ending_ts) external;\\n    function stakeLocked(uint256 liquidity, uint256 secs) external returns (bytes32);\\n    function withdrawLocked(bytes32 kek_id, address destination_address) external returns (uint256);\\n\\n\\n\\n    function periodFinish() external view returns (uint256);\\n    function getAllRewardTokens() external view returns (address[] memory);\\n    function earned(address account) external view returns (uint256[] memory new_earned);\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n    function totalCombinedWeight() external view returns (uint256);\\n    function combinedWeightOf(address account) external view returns (uint256);\\n    function lockMultiplier(uint256 secs) external view returns (uint256);\\n    function rewardRates(uint256 token_idx) external view returns (uint256 rwd_rate);\\n\\n    function userStakedFrax(address account) external view returns (uint256);\\n    function proxyStakedFrax(address proxy_address) external view returns (uint256);\\n    function maxLPForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoostProxy(address proxy_address) external view returns (uint256);\\n    function veFXSMultiplier(address account) external view returns (uint256 vefxs_multiplier);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n    function vefxs_max_multiplier() external view returns(uint256);\\n    function vefxs_boost_scale_factor() external view returns(uint256);\\n    function vefxs_per_frax_for_max_boost() external view returns(uint256);\\n    function getProxyFor(address addr) external view returns (address);\\n\\n    function sync() external;\\n}\",\"keccak256\":\"0xed963af53ab2562f97d7d9e883939ac82945d9d7b614fb26707b4d803cc0b600\"},\"contracts/interfaces/ILockManager.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ILockManager {\\n\\n    function createLock(uint fnftId, IRevest.LockParam memory lock) external returns (uint);\\n\\n    function getLock(uint lockId) external view returns (IRevest.Lock memory);\\n\\n    function fnftIdToLockId(uint fnftId) external view returns (uint);\\n\\n    function fnftIdToLock(uint fnftId) external view returns (IRevest.Lock memory);\\n\\n    function pointFNFTToLock(uint fnftId, uint lockId) external;\\n\\n    function lockTypes(uint tokenId) external view returns (IRevest.LockType);\\n\\n    function unlockFNFT(uint fnftId, address sender) external returns (bool);\\n\\n    function getLockMaturity(uint fnftId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7b3170ed345d9750b315197f48f8076c8731e21640f7a063563bc93a6c2d1c00\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiver is IRegistryProvider, IERC165 {\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address asset,\\n        address payable owner,\\n        uint quantity\\n    ) external;\\n\\n    function getCustomMetadata(uint fnftId) external view returns (string memory);\\n\\n    function getValue(uint fnftId) external view returns (uint);\\n\\n    function getAsset(uint fnftId) external view returns (address);\\n\\n    function getOutputDisplayValues(uint fnftId) external view returns (bytes memory);\\n\\n}\\n\",\"keccak256\":\"0xdb291a6d6ff61ba3992f23044751c20736dbde86d879d3a466c854382abd9550\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV2.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiver.sol\\\";\\nimport \\\"./IRevest.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV2 is IOutputReceiver {\\n\\n    // Future proofing for secondary callbacks during withdrawal\\n    // Could just use triggerOutputReceiverUpdate and call withdrawal function\\n    // But deliberately using reentry is poor form and reminds me too much of OAuth 2.0 \\n    function receiveSecondaryCallback(\\n        uint fnftId,\\n        address payable owner,\\n        uint quantity,\\n        IRevest.FNFTConfig memory config,\\n        bytes memory args\\n    ) external payable;\\n\\n    // Allows for similar function to address lock, updating state while still locked\\n    // Called by the user directly\\n    function triggerOutputReceiverUpdate(\\n        uint fnftId,\\n        bytes memory args\\n    ) external;\\n\\n    // This function should only ever be called when a split or additional deposit has occurred \\n    function handleFNFTRemaps(uint fnftId, uint[] memory newFNFTIds, address caller, bool cleanup) external;\\n\\n}\\n\",\"keccak256\":\"0x3f54001da218efb1d47b5b5419f1796995a483fffc368d51929ab5fb61de0d62\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV3.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiverV2.sol\\\";\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV3 is IOutputReceiverV2 {\\n\\n    event DepositERC20OutputReceiver(address indexed mintTo, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event DepositERC721OutputReceiver(address indexed mintTo, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\\n\\n    event DepositERC1155OutputReceiver(address indexed mintTo, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC20OutputReceiver(address indexed caller, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC721OutputReceiver(address indexed caller, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC1155OutputReceiver(address indexed caller, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external;\\n\\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint quantity, address caller) external;\\n\\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external;\\n\\n}\\n\",\"keccak256\":\"0xb6b7ca189b8c8238df161cf2425aaf5fddc772947d654341ea9b4eb9f1e3c616\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRewards.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >= 0.8.0;\\n\\ninterface IRewards{\\n    struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n    \\n    function initialize(uint256 _pid, bool _startActive) external;\\n    function addReward(address _rewardsToken, address _distributor) external;\\n    function approveRewardDistributor(\\n        address _rewardsToken,\\n        address _distributor,\\n        bool _approved\\n    ) external;\\n    function deposit(address _owner, uint256 _amount) external;\\n    function withdraw(address _owner, uint256 _amount) external;\\n    function getReward(address _forward) external;\\n    function notifyRewardAmount(address _rewardsToken, uint256 _reward) external;\\n    function balanceOf(address account) external view returns (uint256);\\n    function claimableRewards(address _account) external view returns(EarnedData[] memory userRewards);\\n    function rewardTokens(uint256 _rid) external view returns (address);\\n    function rewardTokenLength() external view returns(uint256);\\n    function active() external view returns(bool);\\n}\\n\",\"keccak256\":\"0x5c4bd045413172f1911d4756733f9914dd33044472ccfbe41a2479d3add977df\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRewardsHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRewardsHandler {\\n\\n    struct UserBalance {\\n        uint allocPoint; // Allocation points\\n        uint lastMul;\\n    }\\n\\n    function receiveFee(address token, uint amount) external;\\n\\n    function updateLPShares(uint fnftId, uint newShares) external;\\n\\n    function updateBasicShares(uint fnftId, uint newShares) external;\\n\\n    function getAllocPoint(uint fnftId, address token, bool isBasic) external view returns (uint);\\n\\n    function claimRewards(uint fnftId, address caller) external returns (uint);\\n\\n    function setStakingContract(address stake) external;\\n\\n    function getRewards(uint fnftId, address token) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x7940819dfa042009e0b10dff3dd7224f3d1ae3a4c7addab3e8f33631c1ed5db7\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/ITokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ITokenVault {\\n\\n    function createFNFT(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig,\\n        uint quantity,\\n        address from\\n    ) external;\\n\\n    function withdrawToken(\\n        uint fnftId,\\n        uint quantity,\\n        address user\\n    ) external;\\n\\n    function depositToken(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external;\\n\\n    function cloneFNFTConfig(IRevest.FNFTConfig memory old) external returns (IRevest.FNFTConfig memory);\\n\\n    function mapFNFTToToken(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external;\\n\\n    function handleMultipleDeposits(\\n        uint fnftId,\\n        uint newFNFTId,\\n        uint amount\\n    ) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory newFNFTIds,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external;\\n\\n    function getFNFT(uint fnftId) external view returns (IRevest.FNFTConfig memory);\\n    function getFNFTCurrentValue(uint fnftId) external view returns (uint);\\n    function getNontransferable(uint fnftId) external view returns (bool);\\n    function getSplitsRemaining(uint fnftId) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xaf57460b4494ba71a094c4c89f095254c65796c1ddff0f41978c5f141472962d\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/lib/RevestHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ITokenVault.sol\\\";\\nimport \\\"../interfaces/ILockManager.sol\\\";\\nimport \\\"../interfaces/IRevest.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n\\nlibrary RevestHelper {\\n\\n \\n    function boolToString(bool arg) internal pure returns (string memory boolean) {\\n        boolean = arg ? \\\"true\\\" : \\\"false\\\";\\n    }\\n\\n    function getLockType(IRevest.LockType lock) internal pure returns (string memory lockType) {\\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Time\\\";\\n        } \\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Value\\\";\\n        }\\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Address\\\";\\n        }\\n    } \\n\\n    function getTicker(address asset) internal view returns (string memory ticker) {\\n        try IERC20Metadata(asset).symbol() returns (string memory tick) {\\n            ticker = tick;\\n        } catch {\\n            ticker = '???';\\n        }\\n    }\\n\\n    function getName(address asset) internal view returns (string memory ticker) {\\n        try IERC20Metadata(asset).name() returns (string memory tick) {\\n            ticker = tick;\\n        } catch {\\n            ticker = 'Unknown Token';\\n        }\\n    }\\n\\n    function amountToDecimal(uint amt, address asset) internal view returns (string memory decStr) {\\n        uint8 decimals;\\n        try IERC20Metadata(asset).decimals() returns (uint8 dec) {\\n            decimals = dec;\\n        } catch {\\n            decimals = 18;\\n        }\\n        decStr = decimalString(amt, decimals);\\n    }\\n\\n    function toString(uint _i) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint j = _i;\\n        uint len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint k = len;\\n        while (_i != 0) {\\n            k = k-1;\\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    function decimalString(uint256 number, uint8 decimals) internal pure returns(string memory){\\n        uint256 tenPowDecimals = 10 ** decimals;\\n\\n        uint256 temp = number;\\n        uint8 digits;\\n        uint8 numSigfigs;\\n        while (temp != 0) {\\n            if (numSigfigs > 0) {\\n                // count all digits preceding least significant figure\\n                numSigfigs++;\\n            } else if (temp % 10 != 0) {\\n                numSigfigs++;\\n            }\\n            digits++;\\n            temp /= 10;\\n        }\\n\\n        DecimalStringParams memory params;\\n        if((digits - numSigfigs) >= decimals) {\\n            // no decimals, ensure we preserve all trailing zeros\\n            params.sigfigs = number / tenPowDecimals;\\n            params.sigfigIndex = digits - decimals;\\n            params.bufferLength = params.sigfigIndex;\\n        } else {\\n            // chop all trailing zeros for numbers with decimals\\n            params.sigfigs = number / (10 ** (digits - numSigfigs));\\n            if(tenPowDecimals > number){\\n                // number is less tahn one\\n                // in this case, there may be leading zeros after the decimal place \\n                // that need to be added\\n\\n                // offset leading zeros by two to account for leading '0.'\\n                params.zerosStartIndex = 2;\\n                params.zerosEndIndex = decimals - digits + 2;\\n                params.sigfigIndex = numSigfigs + params.zerosEndIndex;\\n                params.bufferLength = params.sigfigIndex;\\n                params.isLessThanOne = true;\\n            } else {\\n                // In this case, there are digits before and\\n                // after the decimal place\\n                params.sigfigIndex = numSigfigs + 1;\\n                params.decimalIndex = digits - decimals + 1;\\n            }\\n        }\\n        params.bufferLength = params.sigfigIndex;\\n        return generateDecimalString(params);\\n    }\\n\\n    // With modifications, the below taken \\n    // from https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/NFTDescriptor.sol#L189-L231\\n\\n    struct DecimalStringParams {\\n        // significant figures of decimal\\n        uint256 sigfigs;\\n        // length of decimal string\\n        uint8 bufferLength;\\n        // ending index for significant figures (funtion works backwards when copying sigfigs)\\n        uint8 sigfigIndex;\\n        // index of decimal place (0 if no decimal)\\n        uint8 decimalIndex;\\n        // start index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosStartIndex;\\n        // end index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosEndIndex;\\n        // true if decimal number is less than one\\n        bool isLessThanOne;\\n    }\\n\\n    function generateDecimalString(DecimalStringParams memory params) private pure returns (string memory) {\\n        bytes memory buffer = new bytes(params.bufferLength);\\n        if (params.isLessThanOne) {\\n            buffer[0] = '0';\\n            buffer[1] = '.';\\n        }\\n\\n        // add leading/trailing 0's\\n        for (uint256 zerosCursor = params.zerosStartIndex; zerosCursor < params.zerosEndIndex; zerosCursor++) {\\n            buffer[zerosCursor] = bytes1(uint8(48));\\n        }\\n        // add sigfigs\\n        while (params.sigfigs > 0) {\\n            if (params.decimalIndex > 0 && params.sigfigIndex == params.decimalIndex) {\\n                buffer[--params.sigfigIndex] = '.';\\n            }\\n            buffer[--params.sigfigIndex] = bytes1(uint8(uint256(48) + (params.sigfigs % 10)));\\n            params.sigfigs /= 10;\\n        }\\n        return string(buffer);\\n    }\\n}\",\"keccak256\":\"0xe9708bee1fa68c61aeca3780e52cb8eb741844388c508cda66195fabbb967cdb\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"RevestLiquidDriver":{"abi":[{"inputs":[{"internalType":"address","name":"_provider","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"mintTo","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountTokens","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"DepositERC1155OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"mintTo","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountTokens","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"DepositERC20OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"mintTo","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"DepositERC721OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountTokens","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"WithdrawERC1155OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountTokens","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"WithdrawERC20OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"WithdrawERC721OutputReceiver","type":"event"},{"inputs":[],"name":"CONVEX_DEPOSIT_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CURVE_LP","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"METADATA","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARDS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKING_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKING_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TEMPLATE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addressRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getAddressForFNFT","outputs":[{"internalType":"address","name":"smartWallAdd","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAddressRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getCustomMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getOutputDisplayValues","outputs":[{"internalType":"bytes","name":"displayData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"amountToDeposit","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"handleAdditionalDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"address","name":"","type":"address"},{"internalType":"bool","name":"","type":"bool"}],"name":"handleFNFTRemaps","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256[]","name":"proportions","type":"uint256[]"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"handleSplitOperation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"handleTimelockExtensions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"kekIds","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"amountToLock","type":"uint256"}],"name":"lockTokens","outputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"address payable","name":"caller","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"receiveRevestOutput","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"config","type":"tuple"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"receiveSecondaryCallback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"rescueERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rescueNativeFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addressRegistry_","type":"address"}],"name":"setAddressRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_meta","type":"string"}],"name":"setMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"triggerOutputReceiverUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"RobAnon","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"LiquidDriver <> Revest integration for tokenizing xLQDR positions","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:711:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:29"},"nodeType":"YulFunctionCall","src":"143:22:29"},"nodeType":"YulExpressionStatement","src":"143:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:29"},"nodeType":"YulFunctionCall","src":"112:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:29"},"nodeType":"YulFunctionCall","src":"108:32:29"},"nodeType":"YulIf","src":"105:2:29"},{"nodeType":"YulVariableDeclaration","src":"176:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:29"},"nodeType":"YulFunctionCall","src":"189:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"268:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"277:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"285:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"270:6:29"},"nodeType":"YulFunctionCall","src":"270:22:29"},"nodeType":"YulExpressionStatement","src":"270:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"238:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"249:3:29"},"nodeType":"YulFunctionCall","src":"249:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"245:3:29"},"nodeType":"YulFunctionCall","src":"245:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234:3:29"},"nodeType":"YulFunctionCall","src":"234:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"224:2:29"},"nodeType":"YulFunctionCall","src":"224:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:29"},"nodeType":"YulFunctionCall","src":"217:50:29"},"nodeType":"YulIf","src":"214:2:29"},{"nodeType":"YulAssignment","src":"303:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:29"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:29","type":""}],"src":"14:310:29"},{"body":{"nodeType":"YulBlock","src":"384:325:29","statements":[{"nodeType":"YulAssignment","src":"394:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"408:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"411:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"404:3:29"},"nodeType":"YulFunctionCall","src":"404:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"394:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"425:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"455:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"461:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"451:3:29"},"nodeType":"YulFunctionCall","src":"451:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"429:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"502:31:29","statements":[{"nodeType":"YulAssignment","src":"504:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"518:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"526:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"514:3:29"},"nodeType":"YulFunctionCall","src":"514:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"504:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"482:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"475:6:29"},"nodeType":"YulFunctionCall","src":"475:26:29"},"nodeType":"YulIf","src":"472:2:29"},{"body":{"nodeType":"YulBlock","src":"592:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"613:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"620:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"625:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"616:3:29"},"nodeType":"YulFunctionCall","src":"616:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"606:6:29"},"nodeType":"YulFunctionCall","src":"606:31:29"},"nodeType":"YulExpressionStatement","src":"606:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"657:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"660:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"650:6:29"},"nodeType":"YulFunctionCall","src":"650:15:29"},"nodeType":"YulExpressionStatement","src":"650:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"685:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"688:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"678:6:29"},"nodeType":"YulFunctionCall","src":"678:15:29"},"nodeType":"YulExpressionStatement","src":"678:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"548:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"571:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"579:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"568:2:29"},"nodeType":"YulFunctionCall","src":"568:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"545:2:29"},"nodeType":"YulFunctionCall","src":"545:38:29"},"nodeType":"YulIf","src":"542:2:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"364:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"373:6:29","type":""}],"src":"329:380:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE PUSH1 0x51 PUSH1 0xA0 DUP2 DUP2 MSTORE SWAP1 PUSH3 0x6870 PUSH1 0xC0 CODECOPY DUP1 MLOAD PUSH3 0x2A SWAP2 PUSH1 0x2 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x119 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x68C1 CODESIZE SUB DUP1 PUSH3 0x68C1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x5B SWAP2 PUSH3 0x1CD JUMP JUMPDEST PUSH3 0x66 CALLER PUSH3 0xC9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH3 0x92 SWAP1 PUSH3 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE POP PUSH3 0x23A SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x127 SWAP1 PUSH3 0x1FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x14B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x196 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x166 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x196 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x196 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x196 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x179 JUMP JUMPDEST POP PUSH3 0x1A4 SWAP3 SWAP2 POP PUSH3 0x1B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x24AF DUP1 PUSH3 0x43C1 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1A4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1DF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1F6 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x212 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x234 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x4137 PUSH3 0x28A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x43C ADD MSTORE DUP2 DUP2 PUSH2 0x83B ADD MSTORE DUP2 DUP2 PUSH2 0xA79 ADD MSTORE DUP2 DUP2 PUSH2 0xCFE ADD MSTORE DUP2 DUP2 PUSH2 0x1207 ADD MSTORE DUP2 DUP2 PUSH2 0x1793 ADD MSTORE DUP2 DUP2 PUSH2 0x196E ADD MSTORE PUSH2 0x1C48 ADD MSTORE PUSH2 0x4137 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BFD9174 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xC0034E0C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xF3AD65F4 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xF443FAEB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xF48FE050 EQ PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0034E0C EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xCCEC3716 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xD2551412 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xEAC8F5B8 EQ PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8ECACB1B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8ECACB1B EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xA49A1E7D EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xACA1C665 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xBA156BCB EQ PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8BFD9174 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x8C20570B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x8D9D6705 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27C7812C GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x76DA63F3 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x82BFEFC8 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x89158D8E EQ PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27C7812C EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x38C3DF07 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x4C238851 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x644BF7D8 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x109BBF05 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x109BBF05 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x1355F7AB EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x16F49E8A EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x1D145721 EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x479D644 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x63C27F8 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xFF4C916 EQ PUSH2 0x274 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x35A1 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x764 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3940 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x3C34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x3978 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F2 JUMP JUMPDEST PUSH2 0xDE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x381A JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0xF4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3884 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP2 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x391F JUMP JUMPDEST PUSH2 0xFB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x245 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x245 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x1603 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x37D3 JUMP JUMPDEST PUSH2 0x1674 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x1941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F2 JUMP JUMPDEST PUSH2 0x1996 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x5A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38DA JUMP JUMPDEST PUSH2 0x1A99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST POP PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F2 JUMP JUMPDEST PUSH2 0x1CBA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x245 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x62C CALLDATASIZE PUSH1 0x4 PUSH2 0x36B2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD1A3AF5A00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x6C6 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4291039A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x712 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x789BC37900000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x75E JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x4B0EE02A SWAP1 PUSH2 0x87A SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1D99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF97E7D74 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642041636365737321000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH4 0x3C26700 PUSH2 0x9FE TIMESTAMP DUP5 PUSH2 0x3F53 JUMP JUMPDEST GT ISZERO PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178206C6F636B757020697320322079656172730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xAB8 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0x3C0672BB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 DUP3 AND SWAP1 PUSH4 0x3C0672BB SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xB66 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB92 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBDF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBB4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBDF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF97E7D74 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642041636365737321000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xD26 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD PUSH2 0xA9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD49 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP5 DUP4 DUP9 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0x5AFF427D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x5AFF427D SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xE86 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEB2 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xED4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEFF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206170706C696361626C65000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH2 0xFB3 PUSH1 0x0 PUSH2 0x1F84 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xE0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x20 DUP5 ADD MSTORE DUP4 MLOAD DUP2 DUP2 MSTORE DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE SWAP1 SWAP3 DUP4 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP CALLER DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1041 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF97E7D74 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1111 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5A7C08F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x5A7C08F0 SWAP1 PUSH2 0x1183 SWAP1 DUP11 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3C47 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x119D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D5 SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP6 POP PUSH1 0x0 SWAP5 POP PUSH2 0x1232 SWAP4 POP PUSH32 0x0 SWAP3 POP PUSH1 0x60 ADD SWAP1 POP PUSH2 0xA9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1255 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A CALLER DUP4 DUP8 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3C4F8DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3C4F8DD8 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F5 SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FF5B85F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x135B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP7 SWAP4 POP PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP3 POP CALLER SWAP2 PUSH32 0x5BED1F834B92CC21CEC09497AFA47D36952B8A037E988ECA6E9ECFFEB497B227 SWAP2 DUP10 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x13CC SWAP3 SWAP2 PUSH2 0x3CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x13EA DUP5 PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x144B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1436 JUMPI SWAP1 POP JUMPDEST POP DUP3 MLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1580 JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1487 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x149C DUP3 PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x3B3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x14F0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x14E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x285B JUMP JUMPDEST PUSH2 0x14F9 DUP5 PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x150A SWAP3 SWAP2 SWAP1 PUSH2 0x3ABB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x152E SWAP3 SWAP2 SWAP1 PUSH2 0x3A8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x155D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x1576 SWAP1 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x145C JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x158B DUP8 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x3C26700 PUSH2 0x15A1 PUSH3 0x15180 TIMESTAMP PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x15AE SWAP1 PUSH3 0x15180 PUSH2 0x3F16 JUMP JUMPDEST PUSH2 0x15B8 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST SWAP1 POP DUP2 DUP5 DUP5 DUP4 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15E7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1670 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x3122 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x54F2F7AF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x54F2F7AF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH32 0x4530313600000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x17BB SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0x1B258D5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP DUP4 SWAP3 DUP4 AND SWAP1 PUSH4 0x1B258D50 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1847 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186B SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FF5B85F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 SWAP5 POP PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP4 POP DUP11 AND SWAP2 PUSH32 0xF2B6E7F64080F438239B56473F2CD92B33165C88688FD898E1D99082BD0EB954 SWAP2 DUP7 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x192F SWAP3 SWAP2 PUSH2 0x3CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x75E SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD PUSH2 0x85F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A83 SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST SWAP1 POP PUSH2 0x1670 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xD59E296E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x0 SWAP2 DUP4 SWAP2 PUSH4 0xD59E296E SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B33 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B04E84000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x2B04E840 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BCC SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST GT PUSH2 0x1C1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH32 0x4530363400000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1C70 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xEF5CFB8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xEF5CFB8C SWAP1 PUSH1 0x24 ADD PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1D90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x7EF DUP2 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E15 DUP4 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 DUP5 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF3FF00000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE SWAP3 SHL PUSH1 0x38 DUP4 ADD MSTORE PUSH1 0x4C DUP3 ADD MSTORE PUSH1 0x37 DUP1 DUP3 KECCAK256 PUSH1 0x6C DUP4 ADD MSTORE PUSH1 0x55 SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x3E9 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1FFA DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x12EDB24C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x204B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2087 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH31 0x8CC26200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH3 0x8CC262 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x210B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2133 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x34E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB277E8F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0xB277E8F0 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x21E1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x33C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x857CB94A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2246 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x226A SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST SWAP1 POP DUP2 MLOAD DUP2 DUP6 MLOAD PUSH2 0x227B SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x2285 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP7 POP DUP2 MLOAD DUP2 DUP6 MLOAD PUSH2 0x22E6 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x22F0 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x233F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24E3 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x236E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2396 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x23D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x243C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2474 SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2494 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24A6 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x24DB DUP2 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2345 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xDC01F60D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0xDC01F60D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2567 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x258F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x268A JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x25BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP10 DUP8 MLOAD DUP4 PUSH2 0x25D7 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x25F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2635 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP8 MLOAD DUP4 PUSH2 0x264F SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x266D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2682 DUP2 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2594 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x279A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x26B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP10 DUP5 DUP9 MLOAD DUP5 PUSH2 0x26D2 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x26DC SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x26FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x273A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP5 DUP9 MLOAD DUP5 PUSH2 0x2755 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x275F SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x277D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2792 DUP2 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x268E JUMP JUMPDEST POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2816 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2813 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2853 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH32 0x556E6B6E6F776E20546F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x28C8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x28C5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x28D4 JUMPI POP PUSH1 0x12 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x28E1 DUP5 DUP3 PUSH2 0x2AC9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2959 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2956 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2853 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x3F3F3F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x29DF SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0x1F20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A39 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C7E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x29DF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2A57 SWAP2 SWAP1 PUSH2 0x356D JUMP JUMPDEST PUSH2 0x29DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2AD8 DUP4 PUSH1 0xA PUSH2 0x3E4D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 DUP1 JUMPDEST DUP3 ISZERO PUSH2 0x2B3E JUMPI PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x2B00 JUMPI DUP1 PUSH2 0x2AF8 DUP2 PUSH2 0x4068 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B1E JUMP JUMPDEST PUSH2 0x2B0B PUSH1 0xA DUP5 PUSH2 0x4088 JUMP JUMPDEST ISZERO PUSH2 0x2B1E JUMPI DUP1 PUSH2 0x2B1A DUP2 PUSH2 0x4068 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP2 PUSH2 0x2B28 DUP2 PUSH2 0x4068 JUMP JUMPDEST SWAP3 POP PUSH2 0x2B37 SWAP1 POP PUSH1 0xA DUP5 PUSH2 0x3DD8 JUMP JUMPDEST SWAP3 POP PUSH2 0x2ADF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF DUP8 AND PUSH2 0x2B85 DUP4 DUP6 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0xFF AND LT PUSH2 0x2BB7 JUMPI PUSH2 0x2B97 DUP6 DUP10 PUSH2 0x3DD8 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2BA3 DUP8 DUP5 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2C5C JUMP JUMPDEST PUSH2 0x2BC1 DUP3 DUP5 PUSH2 0x3F6A JUMP JUMPDEST PUSH2 0x2BCC SWAP1 PUSH1 0xA PUSH2 0x3E4D JUMP JUMPDEST PUSH2 0x2BD6 SWAP1 DUP10 PUSH2 0x3DD8 JUMP JUMPDEST DUP2 MSTORE DUP8 DUP6 GT ISZERO PUSH2 0x2C2B JUMPI PUSH1 0x2 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x2BF1 DUP4 DUP9 PUSH2 0x3F6A JUMP JUMPDEST PUSH2 0x2BFC SWAP1 PUSH1 0x2 PUSH2 0x3DB3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2C10 SWAP1 DUP4 PUSH2 0x3DB3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x2C5C JUMP JUMPDEST PUSH2 0x2C36 DUP3 PUSH1 0x1 PUSH2 0x3DB3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x2C48 DUP8 DUP5 PUSH2 0x3F6A JUMP JUMPDEST PUSH2 0x2C53 SWAP1 PUSH1 0x1 PUSH2 0x3DB3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2C72 DUP2 PUSH2 0x2C8D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28E1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2FAA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CBF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CE9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 PUSH1 0xC0 ADD MLOAD ISZERO PUSH2 0x2DD9 JUMPI PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D38 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DA9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xFF AND JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x2E57 JUMPI PUSH1 0x30 PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E16 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 PUSH2 0x2E4F DUP2 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2DE2 JUMP JUMPDEST POP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2853 JUMPI PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x2E84 JUMPI POP DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x2F0F JUMPI PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP5 PUSH1 0x40 ADD DUP1 MLOAD PUSH2 0x2EBA SWAP1 PUSH2 0x3FB9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 DUP2 SWAP1 MSTORE DUP2 MLOAD DUP2 LT PUSH2 0x2EDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST DUP3 MLOAD PUSH2 0x2F1D SWAP1 PUSH1 0xA SWAP1 PUSH2 0x4088 JUMP JUMPDEST PUSH2 0x2F28 SWAP1 PUSH1 0x30 PUSH2 0x3D9B JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP5 PUSH1 0x40 ADD DUP1 MLOAD PUSH2 0x2F3B SWAP1 PUSH2 0x3FB9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 DUP2 SWAP1 MSTORE DUP2 MLOAD DUP2 LT PUSH2 0x2F60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP4 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x2FA2 SWAP2 SWAP1 PUSH2 0x3DD8 JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x3070 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x308C SWAP2 SWAP1 PUSH2 0x3A70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x30C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x30DE DUP3 DUP3 DUP7 PUSH2 0x30E9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x30F8 JUMPI POP DUP2 PUSH2 0x1E15 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3108 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x3C34 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x312E SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3150 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3196 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3169 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3196 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3196 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3196 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x317B JUMP JUMPDEST POP PUSH2 0x31A2 SWAP3 SWAP2 POP PUSH2 0x31A6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x31A2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x31A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31CE PUSH2 0x31C9 DUP5 PUSH2 0x3D73 JUMP JUMPDEST PUSH2 0x3D1E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x31E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2856 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3214 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3224 PUSH2 0x31C9 DUP4 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3243 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3261 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3245 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2856 DUP2 PUSH2 0x40F3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3289 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E15 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x31BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x32CC JUMPI PUSH2 0x32CC PUSH2 0x40C8 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 MLOAD PUSH2 0x32DF DUP2 PUSH2 0x40DE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3303 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E15 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x331F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E15 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x333C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3352 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x3362 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x3370 PUSH2 0x31C9 DUP3 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x338F JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x33BA JUMPI DUP1 MLOAD PUSH2 0x33A6 DUP2 PUSH2 0x40DE JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x3393 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33D8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33EE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x33FE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x340C PUSH2 0x31C9 DUP3 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x6 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x342B JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x33BA JUMPI PUSH2 0x3441 DUP10 DUP3 PUSH2 0x3298 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x342F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3468 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x347E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x348E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x349C PUSH2 0x31C9 DUP3 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x6 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x34BB JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x33BA JUMPI PUSH2 0x34D1 DUP10 DUP3 PUSH2 0x3298 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x34BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34F8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x350E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x351E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x352C PUSH2 0x31C9 DUP3 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x354B JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x33BA JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x354F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x357E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E15 DUP2 PUSH2 0x40F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359A JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35B2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1E15 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35F2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3608 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x3618 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x28E1 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x31BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3638 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x364E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x365E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x366C PUSH2 0x31C9 DUP3 PUSH2 0x3D73 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x3680 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x3691 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3F8D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36AB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH2 0x1A0 DUP2 SLT ISZERO PUSH2 0x36CB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x36DD DUP2 PUSH2 0x40DE JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP3 ADD DUP2 SGT ISZERO PUSH2 0x3717 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x371F PUSH2 0x3CF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x372D PUSH1 0x60 DUP10 ADD PUSH2 0x31F9 JUMP JUMPDEST DUP3 MSTORE PUSH2 0x373B PUSH1 0x80 DUP10 ADD PUSH2 0x31F9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xE0 DUP9 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP10 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x3775 DUP3 DUP11 ADD PUSH2 0x326E JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x3787 PUSH2 0x140 DUP11 ADD PUSH2 0x326E JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x3799 PUSH2 0x160 DUP11 ADD PUSH2 0x326E JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE POP SWAP2 POP PUSH2 0x180 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37BA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x37C6 DUP9 DUP3 DUP10 ADD PUSH2 0x3279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37E8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x37FA DUP2 PUSH2 0x40DE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x380A DUP2 PUSH2 0x40DE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x382F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x384C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3858 DUP8 DUP3 DUP9 ADD PUSH2 0x3204 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x3869 DUP2 PUSH2 0x40DE JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3879 DUP2 PUSH2 0x40F3 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3899 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38B6 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x38C2 DUP8 DUP3 DUP9 ADD PUSH2 0x3204 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3879 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38EC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3909 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3915 DUP6 DUP3 DUP7 ADD PUSH2 0x3279 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3931 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3954 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x396D DUP2 PUSH2 0x40DE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x398D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3879 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39BE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1E15 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x39E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3F8D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x3A5C PUSH1 0xE0 DUP5 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP2 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP5 DUP4 ADD MSTORE PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3A82 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F8D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3A9E DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x3F8D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x3AB2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x3F8D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3ACD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x3F8D JUMP JUMPDEST PUSH32 0x205B000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x3B07 DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3F8D JUMP JUMPDEST PUSH32 0x5D20546F6B656E7320417661696C61626C650000000000000000000000000000 PUSH1 0x2 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x14 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3B4F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F8D JUMP JUMPDEST PUSH32 0x3A20000000000000000000000000000000000000000000000000000000000000 SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE PUSH1 0x20 PUSH1 0xA0 DUP2 DUP6 ADD MSTORE DUP2 DUP9 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0xC0 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP11 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C00 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF40 DUP9 DUP8 SUB ADD DUP5 MSTORE PUSH2 0x3BEE DUP7 DUP4 MLOAD PUSH2 0x39CE JUMP JUMPDEST SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3BB4 JUMP JUMPDEST POP POP POP POP DUP7 ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE POP SWAP1 POP DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C2A PUSH1 0x80 DUP4 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E15 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39CE JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH2 0x180 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP6 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH2 0x1A0 DUP5 ADD SWAP2 DUP8 DUP2 ADD SWAP2 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C91 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x3C6C JUMP JUMPDEST POP POP DUP5 DUP4 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP5 MSTORE DUP2 DUP9 ADD SWAP4 DUP3 ADD SWAP3 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CC6 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x3CAA JUMP JUMPDEST POP POP POP DUP1 SWAP3 POP POP POP PUSH2 0x3691 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x39FA JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x28E1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3D18 JUMPI PUSH2 0x3D18 PUSH2 0x40C8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3D47 JUMPI PUSH2 0x3D47 PUSH2 0x40C8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3D69 JUMPI PUSH2 0x3D69 PUSH2 0x40C8 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3D8D JUMPI PUSH2 0x3D8D PUSH2 0x40C8 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3DAE JUMPI PUSH2 0x3DAE PUSH2 0x409C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3DD0 JUMPI PUSH2 0x3DD0 PUSH2 0x409C JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3DE7 JUMPI PUSH2 0x3DE7 PUSH2 0x40B2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3E45 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3E2B JUMPI PUSH2 0x3E2B PUSH2 0x409C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3E38 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x3DF1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E15 PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x3E66 JUMPI POP PUSH1 0x1 PUSH2 0x75E JUMP JUMPDEST DUP2 PUSH2 0x3E73 JUMPI POP PUSH1 0x0 PUSH2 0x75E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3E89 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3E93 JUMPI PUSH2 0x3EAF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x75E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3EA4 JUMPI PUSH2 0x3EA4 PUSH2 0x409C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x75E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3ED2 JUMPI POP DUP2 DUP2 EXP PUSH2 0x75E JUMP JUMPDEST PUSH2 0x3EDC DUP4 DUP4 PUSH2 0x3DEC JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3F0E JUMPI PUSH2 0x3F0E PUSH2 0x409C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3F4E JUMPI PUSH2 0x3F4E PUSH2 0x409C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3F65 JUMPI PUSH2 0x3F65 PUSH2 0x409C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 DUP3 LT ISZERO PUSH2 0x3F84 JUMPI PUSH2 0x3F84 PUSH2 0x409C JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FA8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3F90 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3E9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x3FCC JUMPI PUSH2 0x3FCC PUSH2 0x409C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4008 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4029 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4061 JUMPI PUSH2 0x4061 PUSH2 0x409C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x407F JUMPI PUSH2 0x407F PUSH2 0x409C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4097 JUMPI PUSH2 0x4097 PUSH2 0x40B2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xB1 LOG2 0xFC 0x1F TIMESTAMP NOT 0xC8 0x28 0xAB PUSH3 0xCE21BA 0x4A CALLDATASIZE SGT 0x5E 0x26 TIMESTAMP 0x2B 0xC9 0xD8 DUP13 PUSH1 0xD6 CHAINID 0xCB 0xB4 PUSH7 0xB84C64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x80 MSTORE PUSH2 0x2453 PUSH2 0x5C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x282 ADD MSTORE DUP2 DUP2 PUSH2 0x589 ADD MSTORE DUP2 DUP2 PUSH2 0x6C6 ADD MSTORE DUP2 DUP2 PUSH2 0xD1C ADD MSTORE DUP2 DUP2 PUSH2 0xDC5 ADD MSTORE DUP2 DUP2 PUSH2 0xF4F ADD MSTORE PUSH2 0x132D ADD MSTORE PUSH2 0x2453 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5AFF427D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x945C9142 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x945C9142 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xC0034E0C EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xEF5CFB8C EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF443FAEB EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5AFF427D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x759CB53B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8C20570B EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200EA222 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x200EA222 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x3C0672BB EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x3C4F8DD8 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x3FF5B85F EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x479D644 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x109BBF05 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x1B258D50 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12B JUMP JUMPDEST PUSH2 0x10A PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 DUP2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x19E PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x220F JUMP JUMPDEST PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x10A PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 DUP2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE44B9FA500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xE44B9FA5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x3969DFB4 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP3 POP PUSH4 0x70A08231 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x562 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x56B DUP3 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD2FBDC0D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD2FBDC0D SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x69F DUP2 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x132B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF8 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E553F6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP3 POP PUSH4 0x17B18C89 SWAP2 POP DUP7 SWAP1 POP PUSH2 0xC64 TIMESTAMP DUP8 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCFD DUP3 PUSH2 0x1079 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH2 0xDAB PUSH2 0x132B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E553F6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xB85EFD0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP3 POP PUSH4 0xB85EFD06 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x664 JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x1079 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH2 0xFE1 PUSH1 0x1 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xFE9 PUSH2 0x132B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x1720 JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2FB0C5E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD9F96E8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD9F96E8D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124F SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x1306 JUMPI PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH4 0x47E7EF24 DUP5 PUSH2 0x127D DUP5 DUP7 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH4 0xF3FEF3A3 DUP5 PUSH2 0x127D DUP6 DUP6 PUSH2 0x233B JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST DUP2 ISZERO PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH32 0xC00007B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xC00007B0 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1429 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2121 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6B09169500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6B091695 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1561 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1588 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x164A JUMPI PUSH2 0x164A PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST POP JUMPDEST PUSH2 0x1655 DUP2 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12EDB24C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x170B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2080 JUMP JUMPDEST SWAP1 POP PUSH2 0x1717 DUP2 DUP4 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x6A7 DUP3 PUSH2 0x1B8E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1782 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E7A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x6A7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17A0 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18CA SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1968 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6A7 JUMPI PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A00 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A5E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B07 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B7A DUP4 DUP3 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1B4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1B86 DUP2 PUSH2 0x2382 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1993 JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2FB0C5E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C20 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC3 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD9F96E8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD9F96E8D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D64 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1D74 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1E14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x47E7EF2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x47E7EF24 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC00007B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0xC00007B0 SWAP1 PUSH1 0x24 ADD PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E89 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1E91 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1F23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x305 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1F8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FB4 SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FF1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2006 DUP3 DUP3 DUP7 PUSH2 0x2011 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2020 JUMPI POP DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2030 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2075 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCFD DUP2 PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2092 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x20B8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x20CB PUSH2 0x20C6 DUP3 PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x22C8 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x20EA JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2115 JUMPI DUP1 MLOAD PUSH2 0x2101 DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x20EE JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2133 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2149 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2159 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2167 PUSH2 0x20C6 DUP3 PUSH2 0x2317 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2186 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2115 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x218A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCFD JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21F2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2204 DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2223 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x223C DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2223 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x226D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2352 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2296 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x230F JUMPI PUSH2 0x230F PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2331 JUMPI PUSH2 0x2331 PUSH2 0x23CC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x234D JUMPI PUSH2 0x234D PUSH2 0x239D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x236D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2355 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x237C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2396 JUMPI PUSH2 0x2396 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xE34EF58C957F00919860 SWAP12 0xE9 INVALID PUSH14 0xE22B31E200884867BFE67FA7617A JUMPDEST 0x2F 0xED PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER PUSH9 0x747470733A2F2F7265 PUSH23 0x6573742E6D7970696E6174612E636C6F75642F69706673 0x2F MLOAD PUSH14 0x524C65736637437A774C61704A53 CALLER PUSH2 0x5757 0x4D CODECOPY PUSH24 0x53394871677658385A33367A516857536431754D466D7000 ","sourceMap":"2244:108:9:-:0;1258:12276;2244:108;;1258:12276;2244:108;;;1258:12276;2244:108;;;;;;;;;;;;;;;:::i;:::-;;2639:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:6;867:9:0;:23::i;:::-;2680:15:9;:27;;-1:-1:-1;;;;;;2680:27:9;-1:-1:-1;;;;;2680:27:9;;;;;2750:29;;-1:-1:-1;;2750:29:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2789:26:9;;-1:-1:-1;;;;;;2789:26:9;;;-1:-1:-1;1258:12276:9;;-1:-1:-1;1258:12276:9;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;1258:12276:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1258:12276:9;;;-1:-1:-1;1258:12276:9;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:310:29;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:29;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:29:o;329:380::-;408:1;404:12;;;;451;;;472:2;;526:4;518:6;514:17;504:27;;472:2;579;571:6;568:14;548:18;545:38;542:2;;;625:10;620:3;616:20;613:1;606:31;660:4;657:1;650:15;688:4;685:1;678:15;542:2;;384:325;;;:::o;:::-;1258:12276:9;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:33448:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"88:262:29","statements":[{"nodeType":"YulAssignment","src":"98:61:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"151:6:29"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"123:27:29"},"nodeType":"YulFunctionCall","src":"123:35:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"107:15:29"},"nodeType":"YulFunctionCall","src":"107:52:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"98:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"175:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"182:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"168:6:29"},"nodeType":"YulFunctionCall","src":"168:21:29"},"nodeType":"YulExpressionStatement","src":"168:21:29"},{"body":{"nodeType":"YulBlock","src":"227:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"236:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"239:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"229:6:29"},"nodeType":"YulFunctionCall","src":"229:12:29"},"nodeType":"YulExpressionStatement","src":"229:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"208:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"213:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"204:3:29"},"nodeType":"YulFunctionCall","src":"204:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"222:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"201:2:29"},"nodeType":"YulFunctionCall","src":"201:25:29"},"nodeType":"YulIf","src":"198:2:29"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"269:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"276:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"265:3:29"},"nodeType":"YulFunctionCall","src":"265:16:29"},{"name":"src","nodeType":"YulIdentifier","src":"283:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"288:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"252:12:29"},"nodeType":"YulFunctionCall","src":"252:43:29"},"nodeType":"YulExpressionStatement","src":"252:43:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"319:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"326:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"315:3:29"},"nodeType":"YulFunctionCall","src":"315:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"335:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"311:3:29"},"nodeType":"YulFunctionCall","src":"311:29:29"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"304:6:29"},"nodeType":"YulFunctionCall","src":"304:40:29"},"nodeType":"YulExpressionStatement","src":"304:40:29"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"57:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"62:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"70:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"78:5:29","type":""}],"src":"14:336:29"},{"body":{"nodeType":"YulBlock","src":"404:85:29","statements":[{"nodeType":"YulAssignment","src":"414:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"436:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"423:12:29"},"nodeType":"YulFunctionCall","src":"423:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"414:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"477:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"452:24:29"},"nodeType":"YulFunctionCall","src":"452:31:29"},"nodeType":"YulExpressionStatement","src":"452:31:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"383:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"394:5:29","type":""}],"src":"355:134:29"},{"body":{"nodeType":"YulBlock","src":"558:629:29","statements":[{"body":{"nodeType":"YulBlock","src":"607:24:29","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"616:5:29"},{"name":"array","nodeType":"YulIdentifier","src":"623:5:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"609:6:29"},"nodeType":"YulFunctionCall","src":"609:20:29"},"nodeType":"YulExpressionStatement","src":"609:20:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"586:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"594:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:29"},"nodeType":"YulFunctionCall","src":"582:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"601:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"578:3:29"},"nodeType":"YulFunctionCall","src":"578:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"571:6:29"},"nodeType":"YulFunctionCall","src":"571:35:29"},"nodeType":"YulIf","src":"568:2:29"},{"nodeType":"YulVariableDeclaration","src":"640:30:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"663:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"650:12:29"},"nodeType":"YulFunctionCall","src":"650:20:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"644:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"679:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"689:4:29","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"683:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"702:71:29","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"769:2:29"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"729:39:29"},"nodeType":"YulFunctionCall","src":"729:43:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"713:15:29"},"nodeType":"YulFunctionCall","src":"713:60:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"706:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"782:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"795:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"786:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"814:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"819:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"807:6:29"},"nodeType":"YulFunctionCall","src":"807:15:29"},"nodeType":"YulExpressionStatement","src":"807:15:29"},{"nodeType":"YulAssignment","src":"831:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"842:3:29"},{"name":"_2","nodeType":"YulIdentifier","src":"847:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"838:3:29"},"nodeType":"YulFunctionCall","src":"838:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"831:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"859:26:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"874:6:29"},{"name":"_2","nodeType":"YulIdentifier","src":"882:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"870:3:29"},"nodeType":"YulFunctionCall","src":"870:15:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"863:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"939:24:29","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"948:5:29"},{"name":"array","nodeType":"YulIdentifier","src":"955:5:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"941:6:29"},"nodeType":"YulFunctionCall","src":"941:20:29"},"nodeType":"YulExpressionStatement","src":"941:20:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"908:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"920:1:29","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"923:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"916:3:29"},"nodeType":"YulFunctionCall","src":"916:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"904:3:29"},"nodeType":"YulFunctionCall","src":"904:23:29"},{"name":"_2","nodeType":"YulIdentifier","src":"929:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"900:3:29"},"nodeType":"YulFunctionCall","src":"900:32:29"},{"name":"end","nodeType":"YulIdentifier","src":"934:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"897:2:29"},"nodeType":"YulFunctionCall","src":"897:41:29"},"nodeType":"YulIf","src":"894:2:29"},{"nodeType":"YulVariableDeclaration","src":"972:14:29","value":{"name":"array","nodeType":"YulIdentifier","src":"981:5:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"976:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1040:118:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1061:3:29"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1079:3:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1066:12:29"},"nodeType":"YulFunctionCall","src":"1066:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1054:6:29"},"nodeType":"YulFunctionCall","src":"1054:30:29"},"nodeType":"YulExpressionStatement","src":"1054:30:29"},{"nodeType":"YulAssignment","src":"1097:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1108:3:29"},{"name":"_2","nodeType":"YulIdentifier","src":"1113:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1104:3:29"},"nodeType":"YulFunctionCall","src":"1104:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1097:3:29"}]},{"nodeType":"YulAssignment","src":"1129:19:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1140:3:29"},{"name":"_2","nodeType":"YulIdentifier","src":"1145:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1136:3:29"},"nodeType":"YulFunctionCall","src":"1136:12:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1129:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1006:1:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1009:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1003:2:29"},"nodeType":"YulFunctionCall","src":"1003:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1013:18:29","statements":[{"nodeType":"YulAssignment","src":"1015:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1024:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1027:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1020:3:29"},"nodeType":"YulFunctionCall","src":"1020:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1015:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"999:3:29","statements":[]},"src":"995:163:29"},{"nodeType":"YulAssignment","src":"1167:14:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"1176:5:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1167:5:29"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"532:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"540:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"548:5:29","type":""}],"src":"494:693:29"},{"body":{"nodeType":"YulBlock","src":"1238:82:29","statements":[{"nodeType":"YulAssignment","src":"1248:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1270:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1257:12:29"},"nodeType":"YulFunctionCall","src":"1257:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1248:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1308:5:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"1286:21:29"},"nodeType":"YulFunctionCall","src":"1286:28:29"},"nodeType":"YulExpressionStatement","src":"1286:28:29"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1217:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1228:5:29","type":""}],"src":"1192:128:29"},{"body":{"nodeType":"YulBlock","src":"1377:176:29","statements":[{"body":{"nodeType":"YulBlock","src":"1426:24:29","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1435:5:29"},{"name":"array","nodeType":"YulIdentifier","src":"1442:5:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1428:6:29"},"nodeType":"YulFunctionCall","src":"1428:20:29"},"nodeType":"YulExpressionStatement","src":"1428:20:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1405:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1413:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:29"},"nodeType":"YulFunctionCall","src":"1401:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"1420:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1397:3:29"},"nodeType":"YulFunctionCall","src":"1397:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1390:6:29"},"nodeType":"YulFunctionCall","src":"1390:35:29"},"nodeType":"YulIf","src":"1387:2:29"},{"nodeType":"YulAssignment","src":"1459:88:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1506:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1514:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1502:3:29"},"nodeType":"YulFunctionCall","src":"1502:17:29"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1534:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1521:12:29"},"nodeType":"YulFunctionCall","src":"1521:20:29"},{"name":"end","nodeType":"YulIdentifier","src":"1543:3:29"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"1468:33:29"},"nodeType":"YulFunctionCall","src":"1468:79:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1459:5:29"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1351:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1359:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1367:5:29","type":""}],"src":"1325:228:29"},{"body":{"nodeType":"YulBlock","src":"1636:479:29","statements":[{"body":{"nodeType":"YulBlock","src":"1680:24:29","statements":[{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1689:5:29"},{"name":"value","nodeType":"YulIdentifier","src":"1696:5:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1682:6:29"},"nodeType":"YulFunctionCall","src":"1682:20:29"},"nodeType":"YulExpressionStatement","src":"1682:20:29"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1657:3:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1662:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1653:3:29"},"nodeType":"YulFunctionCall","src":"1653:19:29"},{"kind":"number","nodeType":"YulLiteral","src":"1674:4:29","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1649:3:29"},"nodeType":"YulFunctionCall","src":"1649:30:29"},"nodeType":"YulIf","src":"1646:2:29"},{"nodeType":"YulVariableDeclaration","src":"1713:25:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1733:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1727:5:29"},"nodeType":"YulFunctionCall","src":"1727:11:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1717:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1747:35:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1769:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1777:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1765:3:29"},"nodeType":"YulFunctionCall","src":"1765:17:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1751:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1857:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1859:16:29"},"nodeType":"YulFunctionCall","src":"1859:18:29"},"nodeType":"YulExpressionStatement","src":"1859:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1800:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1812:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1797:2:29"},"nodeType":"YulFunctionCall","src":"1797:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1836:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1848:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1833:2:29"},"nodeType":"YulFunctionCall","src":"1833:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1794:2:29"},"nodeType":"YulFunctionCall","src":"1794:62:29"},"nodeType":"YulIf","src":"1791:2:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1895:4:29","type":"","value":"0x40"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1901:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1888:6:29"},"nodeType":"YulFunctionCall","src":"1888:24:29"},"nodeType":"YulExpressionStatement","src":"1888:24:29"},{"nodeType":"YulAssignment","src":"1921:15:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1930:6:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1921:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"1945:31:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1966:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:29"},"nodeType":"YulFunctionCall","src":"1960:16:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1949:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2010:7:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1985:24:29"},"nodeType":"YulFunctionCall","src":"1985:33:29"},"nodeType":"YulExpressionStatement","src":"1985:33:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2034:6:29"},{"name":"value_1","nodeType":"YulIdentifier","src":"2042:7:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2027:6:29"},"nodeType":"YulFunctionCall","src":"2027:23:29"},"nodeType":"YulExpressionStatement","src":"2027:23:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2070:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2078:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2066:3:29"},"nodeType":"YulFunctionCall","src":"2066:15:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2093:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2104:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2089:3:29"},"nodeType":"YulFunctionCall","src":"2089:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2083:5:29"},"nodeType":"YulFunctionCall","src":"2083:25:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2059:6:29"},"nodeType":"YulFunctionCall","src":"2059:50:29"},"nodeType":"YulExpressionStatement","src":"2059:50:29"}]},"name":"abi_decode_struct_EarnedData_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1607:9:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1618:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1626:5:29","type":""}],"src":"1558:557:29"},{"body":{"nodeType":"YulBlock","src":"2190:187:29","statements":[{"body":{"nodeType":"YulBlock","src":"2236:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2245:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2253:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2238:6:29"},"nodeType":"YulFunctionCall","src":"2238:22:29"},"nodeType":"YulExpressionStatement","src":"2238:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2211:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2220:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2207:3:29"},"nodeType":"YulFunctionCall","src":"2207:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2232:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2203:3:29"},"nodeType":"YulFunctionCall","src":"2203:32:29"},"nodeType":"YulIf","src":"2200:2:29"},{"nodeType":"YulVariableDeclaration","src":"2271:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2284:12:29"},"nodeType":"YulFunctionCall","src":"2284:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2275:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2341:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2316:24:29"},"nodeType":"YulFunctionCall","src":"2316:31:29"},"nodeType":"YulExpressionStatement","src":"2316:31:29"},{"nodeType":"YulAssignment","src":"2356:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2366:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2356:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2156:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2167:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2179:6:29","type":""}],"src":"2120:257:29"},{"body":{"nodeType":"YulBlock","src":"2463:180:29","statements":[{"body":{"nodeType":"YulBlock","src":"2509:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2518:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2526:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2511:6:29"},"nodeType":"YulFunctionCall","src":"2511:22:29"},"nodeType":"YulExpressionStatement","src":"2511:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2484:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2493:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2480:3:29"},"nodeType":"YulFunctionCall","src":"2480:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2505:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2476:3:29"},"nodeType":"YulFunctionCall","src":"2476:32:29"},"nodeType":"YulIf","src":"2473:2:29"},{"nodeType":"YulVariableDeclaration","src":"2544:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2563:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2557:5:29"},"nodeType":"YulFunctionCall","src":"2557:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2548:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2607:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2582:24:29"},"nodeType":"YulFunctionCall","src":"2582:31:29"},"nodeType":"YulExpressionStatement","src":"2582:31:29"},{"nodeType":"YulAssignment","src":"2622:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2632:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2622:6:29"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2429:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2440:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2452:6:29","type":""}],"src":"2382:261:29"},{"body":{"nodeType":"YulBlock","src":"2754:906:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2764:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2774:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2768:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2821:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2830:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2838:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2823:6:29"},"nodeType":"YulFunctionCall","src":"2823:22:29"},"nodeType":"YulExpressionStatement","src":"2823:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2796:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2805:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2792:3:29"},"nodeType":"YulFunctionCall","src":"2792:23:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2817:2:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2788:3:29"},"nodeType":"YulFunctionCall","src":"2788:32:29"},"nodeType":"YulIf","src":"2785:2:29"},{"nodeType":"YulVariableDeclaration","src":"2856:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2876:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2870:5:29"},"nodeType":"YulFunctionCall","src":"2870:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2860:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2929:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2938:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2946:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2931:6:29"},"nodeType":"YulFunctionCall","src":"2931:22:29"},"nodeType":"YulExpressionStatement","src":"2931:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2901:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2909:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2898:2:29"},"nodeType":"YulFunctionCall","src":"2898:30:29"},"nodeType":"YulIf","src":"2895:2:29"},{"nodeType":"YulVariableDeclaration","src":"2964:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2978:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2989:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2974:3:29"},"nodeType":"YulFunctionCall","src":"2974:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2968:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3044:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3053:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"3061:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3046:6:29"},"nodeType":"YulFunctionCall","src":"3046:22:29"},"nodeType":"YulExpressionStatement","src":"3046:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3023:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"3027:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3019:3:29"},"nodeType":"YulFunctionCall","src":"3019:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3034:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3015:3:29"},"nodeType":"YulFunctionCall","src":"3015:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3008:6:29"},"nodeType":"YulFunctionCall","src":"3008:35:29"},"nodeType":"YulIf","src":"3005:2:29"},{"nodeType":"YulVariableDeclaration","src":"3079:19:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3095:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3089:5:29"},"nodeType":"YulFunctionCall","src":"3089:9:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3083:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3107:71:29","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3174:2:29"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"3134:39:29"},"nodeType":"YulFunctionCall","src":"3134:43:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3118:15:29"},"nodeType":"YulFunctionCall","src":"3118:60:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3111:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3187:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"3200:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3191:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3219:3:29"},{"name":"_3","nodeType":"YulIdentifier","src":"3224:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3212:6:29"},"nodeType":"YulFunctionCall","src":"3212:15:29"},"nodeType":"YulExpressionStatement","src":"3212:15:29"},{"nodeType":"YulAssignment","src":"3236:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3247:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3252:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3243:3:29"},"nodeType":"YulFunctionCall","src":"3243:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3236:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"3264:22:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3279:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3283:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3275:3:29"},"nodeType":"YulFunctionCall","src":"3275:11:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3268:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3340:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3349:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"3357:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3342:6:29"},"nodeType":"YulFunctionCall","src":"3342:22:29"},"nodeType":"YulExpressionStatement","src":"3342:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3309:2:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3317:1:29","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"3320:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3313:3:29"},"nodeType":"YulFunctionCall","src":"3313:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3305:3:29"},"nodeType":"YulFunctionCall","src":"3305:19:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3326:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3301:3:29"},"nodeType":"YulFunctionCall","src":"3301:28:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3331:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3298:2:29"},"nodeType":"YulFunctionCall","src":"3298:41:29"},"nodeType":"YulIf","src":"3295:2:29"},{"nodeType":"YulVariableDeclaration","src":"3375:15:29","value":{"name":"value0","nodeType":"YulIdentifier","src":"3384:6:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3379:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3444:186:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3458:23:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3477:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3471:5:29"},"nodeType":"YulFunctionCall","src":"3471:10:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3462:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3519:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3494:24:29"},"nodeType":"YulFunctionCall","src":"3494:31:29"},"nodeType":"YulExpressionStatement","src":"3494:31:29"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3545:3:29"},{"name":"value","nodeType":"YulIdentifier","src":"3550:5:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3538:6:29"},"nodeType":"YulFunctionCall","src":"3538:18:29"},"nodeType":"YulExpressionStatement","src":"3538:18:29"},{"nodeType":"YulAssignment","src":"3569:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3580:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3585:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3576:3:29"},"nodeType":"YulFunctionCall","src":"3576:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3569:3:29"}]},{"nodeType":"YulAssignment","src":"3601:19:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3612:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3617:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3608:3:29"},"nodeType":"YulFunctionCall","src":"3608:12:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3601:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:29"},{"name":"_3","nodeType":"YulIdentifier","src":"3413:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3407:2:29"},"nodeType":"YulFunctionCall","src":"3407:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3417:18:29","statements":[{"nodeType":"YulAssignment","src":"3419:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3428:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"3431:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3424:3:29"},"nodeType":"YulFunctionCall","src":"3424:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3419:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"3403:3:29","statements":[]},"src":"3399:231:29"},{"nodeType":"YulAssignment","src":"3639:15:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3649:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3639:6:29"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2720:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2731:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2743:6:29","type":""}],"src":"2648:1012:29"},{"body":{"nodeType":"YulBlock","src":"3799:876:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3809:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3819:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3813:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3866:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3875:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"3883:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3868:6:29"},"nodeType":"YulFunctionCall","src":"3868:22:29"},"nodeType":"YulExpressionStatement","src":"3868:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3841:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3850:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3837:3:29"},"nodeType":"YulFunctionCall","src":"3837:23:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3862:2:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3833:3:29"},"nodeType":"YulFunctionCall","src":"3833:32:29"},"nodeType":"YulIf","src":"3830:2:29"},{"nodeType":"YulVariableDeclaration","src":"3901:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3921:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3915:5:29"},"nodeType":"YulFunctionCall","src":"3915:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3905:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3974:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3983:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"3991:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3976:6:29"},"nodeType":"YulFunctionCall","src":"3976:22:29"},"nodeType":"YulExpressionStatement","src":"3976:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3946:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3954:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3943:2:29"},"nodeType":"YulFunctionCall","src":"3943:30:29"},"nodeType":"YulIf","src":"3940:2:29"},{"nodeType":"YulVariableDeclaration","src":"4009:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4023:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4034:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4019:3:29"},"nodeType":"YulFunctionCall","src":"4019:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4013:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4089:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4098:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"4106:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4091:6:29"},"nodeType":"YulFunctionCall","src":"4091:22:29"},"nodeType":"YulExpressionStatement","src":"4091:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4068:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"4072:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4064:3:29"},"nodeType":"YulFunctionCall","src":"4064:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4079:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4060:3:29"},"nodeType":"YulFunctionCall","src":"4060:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4053:6:29"},"nodeType":"YulFunctionCall","src":"4053:35:29"},"nodeType":"YulIf","src":"4050:2:29"},{"nodeType":"YulVariableDeclaration","src":"4124:19:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4140:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4134:5:29"},"nodeType":"YulFunctionCall","src":"4134:9:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4128:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4152:71:29","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4219:2:29"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"4179:39:29"},"nodeType":"YulFunctionCall","src":"4179:43:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4163:15:29"},"nodeType":"YulFunctionCall","src":"4163:60:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4156:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4232:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"4245:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"4236:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4264:3:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4269:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4257:6:29"},"nodeType":"YulFunctionCall","src":"4257:15:29"},"nodeType":"YulExpressionStatement","src":"4257:15:29"},{"nodeType":"YulAssignment","src":"4281:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4292:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4297:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:29"},"nodeType":"YulFunctionCall","src":"4288:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4281:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"4309:22:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4324:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4328:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4320:3:29"},"nodeType":"YulFunctionCall","src":"4320:11:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4313:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4385:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4394:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"4402:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4387:6:29"},"nodeType":"YulFunctionCall","src":"4387:22:29"},"nodeType":"YulExpressionStatement","src":"4387:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4354:2:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4362:1:29","type":"","value":"6"},{"name":"_3","nodeType":"YulIdentifier","src":"4365:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4358:3:29"},"nodeType":"YulFunctionCall","src":"4358:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4350:3:29"},"nodeType":"YulFunctionCall","src":"4350:19:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4371:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4346:3:29"},"nodeType":"YulFunctionCall","src":"4346:28:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4376:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4343:2:29"},"nodeType":"YulFunctionCall","src":"4343:41:29"},"nodeType":"YulIf","src":"4340:2:29"},{"nodeType":"YulVariableDeclaration","src":"4420:15:29","value":{"name":"value0","nodeType":"YulIdentifier","src":"4429:6:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4424:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4489:156:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4510:3:29"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4555:3:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4560:7:29"}],"functionName":{"name":"abi_decode_struct_EarnedData_fromMemory","nodeType":"YulIdentifier","src":"4515:39:29"},"nodeType":"YulFunctionCall","src":"4515:53:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4503:6:29"},"nodeType":"YulFunctionCall","src":"4503:66:29"},"nodeType":"YulExpressionStatement","src":"4503:66:29"},{"nodeType":"YulAssignment","src":"4582:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4593:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4598:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4589:3:29"},"nodeType":"YulFunctionCall","src":"4589:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4582:3:29"}]},{"nodeType":"YulAssignment","src":"4614:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4625:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"4630:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4621:3:29"},"nodeType":"YulFunctionCall","src":"4621:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4614:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4455:1:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4458:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4452:2:29"},"nodeType":"YulFunctionCall","src":"4452:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4462:18:29","statements":[{"nodeType":"YulAssignment","src":"4464:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4473:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"4476:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4469:3:29"},"nodeType":"YulFunctionCall","src":"4469:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4464:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"4448:3:29","statements":[]},"src":"4444:201:29"},{"nodeType":"YulAssignment","src":"4654:15:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"4664:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4654:6:29"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3765:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3776:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3788:6:29","type":""}],"src":"3665:1010:29"},{"body":{"nodeType":"YulBlock","src":"4814:876:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4824:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4834:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4828:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4881:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4890:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"4898:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4883:6:29"},"nodeType":"YulFunctionCall","src":"4883:22:29"},"nodeType":"YulExpressionStatement","src":"4883:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4856:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4865:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4852:3:29"},"nodeType":"YulFunctionCall","src":"4852:23:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4877:2:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4848:3:29"},"nodeType":"YulFunctionCall","src":"4848:32:29"},"nodeType":"YulIf","src":"4845:2:29"},{"nodeType":"YulVariableDeclaration","src":"4916:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4936:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4930:5:29"},"nodeType":"YulFunctionCall","src":"4930:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4920:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4989:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4998:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5006:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4991:6:29"},"nodeType":"YulFunctionCall","src":"4991:22:29"},"nodeType":"YulExpressionStatement","src":"4991:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4961:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4969:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4958:2:29"},"nodeType":"YulFunctionCall","src":"4958:30:29"},"nodeType":"YulIf","src":"4955:2:29"},{"nodeType":"YulVariableDeclaration","src":"5024:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5038:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5049:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5034:3:29"},"nodeType":"YulFunctionCall","src":"5034:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5028:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5104:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5113:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5121:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5106:6:29"},"nodeType":"YulFunctionCall","src":"5106:22:29"},"nodeType":"YulExpressionStatement","src":"5106:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5083:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"5087:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5079:3:29"},"nodeType":"YulFunctionCall","src":"5079:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5094:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5075:3:29"},"nodeType":"YulFunctionCall","src":"5075:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5068:6:29"},"nodeType":"YulFunctionCall","src":"5068:35:29"},"nodeType":"YulIf","src":"5065:2:29"},{"nodeType":"YulVariableDeclaration","src":"5139:19:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5155:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5149:5:29"},"nodeType":"YulFunctionCall","src":"5149:9:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5143:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5167:71:29","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5234:2:29"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"5194:39:29"},"nodeType":"YulFunctionCall","src":"5194:43:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5178:15:29"},"nodeType":"YulFunctionCall","src":"5178:60:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5171:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5247:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"5260:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"5251:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5279:3:29"},{"name":"_3","nodeType":"YulIdentifier","src":"5284:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5272:6:29"},"nodeType":"YulFunctionCall","src":"5272:15:29"},"nodeType":"YulExpressionStatement","src":"5272:15:29"},{"nodeType":"YulAssignment","src":"5296:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5307:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"5312:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5303:3:29"},"nodeType":"YulFunctionCall","src":"5303:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5296:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"5324:22:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5339:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"5343:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5335:3:29"},"nodeType":"YulFunctionCall","src":"5335:11:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5328:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5400:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5409:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5417:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5402:6:29"},"nodeType":"YulFunctionCall","src":"5402:22:29"},"nodeType":"YulExpressionStatement","src":"5402:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5369:2:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5377:1:29","type":"","value":"6"},{"name":"_3","nodeType":"YulIdentifier","src":"5380:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5373:3:29"},"nodeType":"YulFunctionCall","src":"5373:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5365:3:29"},"nodeType":"YulFunctionCall","src":"5365:19:29"},{"name":"_1","nodeType":"YulIdentifier","src":"5386:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5361:3:29"},"nodeType":"YulFunctionCall","src":"5361:28:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5391:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5358:2:29"},"nodeType":"YulFunctionCall","src":"5358:41:29"},"nodeType":"YulIf","src":"5355:2:29"},{"nodeType":"YulVariableDeclaration","src":"5435:15:29","value":{"name":"value0","nodeType":"YulIdentifier","src":"5444:6:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5439:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5504:156:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5525:3:29"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5570:3:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5575:7:29"}],"functionName":{"name":"abi_decode_struct_EarnedData_fromMemory","nodeType":"YulIdentifier","src":"5530:39:29"},"nodeType":"YulFunctionCall","src":"5530:53:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5518:6:29"},"nodeType":"YulFunctionCall","src":"5518:66:29"},"nodeType":"YulExpressionStatement","src":"5518:66:29"},{"nodeType":"YulAssignment","src":"5597:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5608:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"5613:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5604:3:29"},"nodeType":"YulFunctionCall","src":"5604:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5597:3:29"}]},{"nodeType":"YulAssignment","src":"5629:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5640:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"5645:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5636:3:29"},"nodeType":"YulFunctionCall","src":"5636:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5629:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5470:1:29"},{"name":"_3","nodeType":"YulIdentifier","src":"5473:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5467:2:29"},"nodeType":"YulFunctionCall","src":"5467:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5477:18:29","statements":[{"nodeType":"YulAssignment","src":"5479:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5488:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"5491:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5484:3:29"},"nodeType":"YulFunctionCall","src":"5484:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5479:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"5463:3:29","statements":[]},"src":"5459:201:29"},{"nodeType":"YulAssignment","src":"5669:15:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5679:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5669:6:29"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4780:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4791:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4803:6:29","type":""}],"src":"4680:1010:29"},{"body":{"nodeType":"YulBlock","src":"5801:831:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5811:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5821:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5815:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5868:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5877:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5885:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5870:6:29"},"nodeType":"YulFunctionCall","src":"5870:22:29"},"nodeType":"YulExpressionStatement","src":"5870:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5843:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5852:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5839:3:29"},"nodeType":"YulFunctionCall","src":"5839:23:29"},{"name":"_1","nodeType":"YulIdentifier","src":"5864:2:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5835:3:29"},"nodeType":"YulFunctionCall","src":"5835:32:29"},"nodeType":"YulIf","src":"5832:2:29"},{"nodeType":"YulVariableDeclaration","src":"5903:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5923:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5917:5:29"},"nodeType":"YulFunctionCall","src":"5917:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5907:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5976:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5985:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5993:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5978:6:29"},"nodeType":"YulFunctionCall","src":"5978:22:29"},"nodeType":"YulExpressionStatement","src":"5978:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5948:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5956:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5945:2:29"},"nodeType":"YulFunctionCall","src":"5945:30:29"},"nodeType":"YulIf","src":"5942:2:29"},{"nodeType":"YulVariableDeclaration","src":"6011:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6025:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6036:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6021:3:29"},"nodeType":"YulFunctionCall","src":"6021:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6015:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6091:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6100:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"6108:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6093:6:29"},"nodeType":"YulFunctionCall","src":"6093:22:29"},"nodeType":"YulExpressionStatement","src":"6093:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6070:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"6074:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6066:3:29"},"nodeType":"YulFunctionCall","src":"6066:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6081:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6062:3:29"},"nodeType":"YulFunctionCall","src":"6062:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6055:6:29"},"nodeType":"YulFunctionCall","src":"6055:35:29"},"nodeType":"YulIf","src":"6052:2:29"},{"nodeType":"YulVariableDeclaration","src":"6126:19:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6142:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6136:5:29"},"nodeType":"YulFunctionCall","src":"6136:9:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6130:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6154:71:29","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6221:2:29"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"6181:39:29"},"nodeType":"YulFunctionCall","src":"6181:43:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6165:15:29"},"nodeType":"YulFunctionCall","src":"6165:60:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6158:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6234:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"6247:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6238:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6266:3:29"},{"name":"_3","nodeType":"YulIdentifier","src":"6271:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6259:6:29"},"nodeType":"YulFunctionCall","src":"6259:15:29"},"nodeType":"YulExpressionStatement","src":"6259:15:29"},{"nodeType":"YulAssignment","src":"6283:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6294:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6299:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6290:3:29"},"nodeType":"YulFunctionCall","src":"6290:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6283:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"6311:22:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6326:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6330:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6322:3:29"},"nodeType":"YulFunctionCall","src":"6322:11:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6315:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6387:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6396:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"6404:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6389:6:29"},"nodeType":"YulFunctionCall","src":"6389:22:29"},"nodeType":"YulExpressionStatement","src":"6389:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6356:2:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6364:1:29","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"6367:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6360:3:29"},"nodeType":"YulFunctionCall","src":"6360:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6352:3:29"},"nodeType":"YulFunctionCall","src":"6352:19:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6373:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6348:3:29"},"nodeType":"YulFunctionCall","src":"6348:28:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6378:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6345:2:29"},"nodeType":"YulFunctionCall","src":"6345:41:29"},"nodeType":"YulIf","src":"6342:2:29"},{"nodeType":"YulVariableDeclaration","src":"6422:15:29","value":{"name":"value0","nodeType":"YulIdentifier","src":"6431:6:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6426:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6491:111:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6512:3:29"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6523:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6517:5:29"},"nodeType":"YulFunctionCall","src":"6517:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6505:6:29"},"nodeType":"YulFunctionCall","src":"6505:23:29"},"nodeType":"YulExpressionStatement","src":"6505:23:29"},{"nodeType":"YulAssignment","src":"6541:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6552:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6557:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6548:3:29"},"nodeType":"YulFunctionCall","src":"6548:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6541:3:29"}]},{"nodeType":"YulAssignment","src":"6573:19:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6584:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6589:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6580:3:29"},"nodeType":"YulFunctionCall","src":"6580:12:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6573:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6457:1:29"},{"name":"_3","nodeType":"YulIdentifier","src":"6460:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6454:2:29"},"nodeType":"YulFunctionCall","src":"6454:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6464:18:29","statements":[{"nodeType":"YulAssignment","src":"6466:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6475:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"6478:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6471:3:29"},"nodeType":"YulFunctionCall","src":"6471:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6466:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"6450:3:29","statements":[]},"src":"6446:156:29"},{"nodeType":"YulAssignment","src":"6611:15:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"6621:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6611:6:29"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5767:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5778:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5790:6:29","type":""}],"src":"5695:937:29"},{"body":{"nodeType":"YulBlock","src":"6715:177:29","statements":[{"body":{"nodeType":"YulBlock","src":"6761:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6770:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"6778:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6763:6:29"},"nodeType":"YulFunctionCall","src":"6763:22:29"},"nodeType":"YulExpressionStatement","src":"6763:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6736:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6745:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6732:3:29"},"nodeType":"YulFunctionCall","src":"6732:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6757:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6728:3:29"},"nodeType":"YulFunctionCall","src":"6728:32:29"},"nodeType":"YulIf","src":"6725:2:29"},{"nodeType":"YulVariableDeclaration","src":"6796:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6815:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6809:5:29"},"nodeType":"YulFunctionCall","src":"6809:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6800:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6856:5:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6834:21:29"},"nodeType":"YulFunctionCall","src":"6834:28:29"},"nodeType":"YulExpressionStatement","src":"6834:28:29"},{"nodeType":"YulAssignment","src":"6871:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"6881:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6871:6:29"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6681:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6692:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6704:6:29","type":""}],"src":"6637:255:29"},{"body":{"nodeType":"YulBlock","src":"6978:113:29","statements":[{"body":{"nodeType":"YulBlock","src":"7024:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7033:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"7041:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7026:6:29"},"nodeType":"YulFunctionCall","src":"7026:22:29"},"nodeType":"YulExpressionStatement","src":"7026:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6999:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7008:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6995:3:29"},"nodeType":"YulFunctionCall","src":"6995:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6991:3:29"},"nodeType":"YulFunctionCall","src":"6991:32:29"},"nodeType":"YulIf","src":"6988:2:29"},{"nodeType":"YulAssignment","src":"7059:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7075:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7069:5:29"},"nodeType":"YulFunctionCall","src":"7069:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7059:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6944:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6955:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6967:6:29","type":""}],"src":"6897:194:29"},{"body":{"nodeType":"YulBlock","src":"7165:283:29","statements":[{"body":{"nodeType":"YulBlock","src":"7211:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7220:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"7228:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7213:6:29"},"nodeType":"YulFunctionCall","src":"7213:22:29"},"nodeType":"YulExpressionStatement","src":"7213:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7186:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7195:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7182:3:29"},"nodeType":"YulFunctionCall","src":"7182:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7207:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7178:3:29"},"nodeType":"YulFunctionCall","src":"7178:32:29"},"nodeType":"YulIf","src":"7175:2:29"},{"nodeType":"YulVariableDeclaration","src":"7246:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7272:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7259:12:29"},"nodeType":"YulFunctionCall","src":"7259:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7250:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7392:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7401:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"7409:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7394:6:29"},"nodeType":"YulFunctionCall","src":"7394:22:29"},"nodeType":"YulExpressionStatement","src":"7394:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7304:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7315:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7322:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7311:3:29"},"nodeType":"YulFunctionCall","src":"7311:78:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7301:2:29"},"nodeType":"YulFunctionCall","src":"7301:89:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7294:6:29"},"nodeType":"YulFunctionCall","src":"7294:97:29"},"nodeType":"YulIf","src":"7291:2:29"},{"nodeType":"YulAssignment","src":"7427:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"7437:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7427:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7131:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7142:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7154:6:29","type":""}],"src":"7096:352:29"},{"body":{"nodeType":"YulBlock","src":"7533:400:29","statements":[{"body":{"nodeType":"YulBlock","src":"7579:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7588:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"7596:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7581:6:29"},"nodeType":"YulFunctionCall","src":"7581:22:29"},"nodeType":"YulExpressionStatement","src":"7581:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7554:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7563:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7550:3:29"},"nodeType":"YulFunctionCall","src":"7550:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7575:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7546:3:29"},"nodeType":"YulFunctionCall","src":"7546:32:29"},"nodeType":"YulIf","src":"7543:2:29"},{"nodeType":"YulVariableDeclaration","src":"7614:37:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7641:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7628:12:29"},"nodeType":"YulFunctionCall","src":"7628:23:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7618:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7694:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7703:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"7711:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7696:6:29"},"nodeType":"YulFunctionCall","src":"7696:22:29"},"nodeType":"YulExpressionStatement","src":"7696:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7666:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7674:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7663:2:29"},"nodeType":"YulFunctionCall","src":"7663:30:29"},"nodeType":"YulIf","src":"7660:2:29"},{"nodeType":"YulVariableDeclaration","src":"7729:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7743:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"7754:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:29"},"nodeType":"YulFunctionCall","src":"7739:22:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7733:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7809:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7818:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"7826:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7811:6:29"},"nodeType":"YulFunctionCall","src":"7811:22:29"},"nodeType":"YulExpressionStatement","src":"7811:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7788:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7792:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7784:3:29"},"nodeType":"YulFunctionCall","src":"7784:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7799:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7780:3:29"},"nodeType":"YulFunctionCall","src":"7780:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7773:6:29"},"nodeType":"YulFunctionCall","src":"7773:35:29"},"nodeType":"YulIf","src":"7770:2:29"},{"nodeType":"YulAssignment","src":"7844:83:29","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7892:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7896:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7888:3:29"},"nodeType":"YulFunctionCall","src":"7888:11:29"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7914:2:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7901:12:29"},"nodeType":"YulFunctionCall","src":"7901:16:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7919:7:29"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"7854:33:29"},"nodeType":"YulFunctionCall","src":"7854:73:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7844:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7499:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7510:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7522:6:29","type":""}],"src":"7453:480:29"},{"body":{"nodeType":"YulBlock","src":"8029:584:29","statements":[{"body":{"nodeType":"YulBlock","src":"8075:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8084:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8092:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8077:6:29"},"nodeType":"YulFunctionCall","src":"8077:22:29"},"nodeType":"YulExpressionStatement","src":"8077:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8050:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8059:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8046:3:29"},"nodeType":"YulFunctionCall","src":"8046:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8071:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8042:3:29"},"nodeType":"YulFunctionCall","src":"8042:32:29"},"nodeType":"YulIf","src":"8039:2:29"},{"nodeType":"YulVariableDeclaration","src":"8110:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8130:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8124:5:29"},"nodeType":"YulFunctionCall","src":"8124:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8114:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8183:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8192:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8200:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8185:6:29"},"nodeType":"YulFunctionCall","src":"8185:22:29"},"nodeType":"YulExpressionStatement","src":"8185:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8155:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8163:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8152:2:29"},"nodeType":"YulFunctionCall","src":"8152:30:29"},"nodeType":"YulIf","src":"8149:2:29"},{"nodeType":"YulVariableDeclaration","src":"8218:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8232:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8243:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8228:3:29"},"nodeType":"YulFunctionCall","src":"8228:22:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8222:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8298:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8307:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8315:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8300:6:29"},"nodeType":"YulFunctionCall","src":"8300:22:29"},"nodeType":"YulExpressionStatement","src":"8300:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8277:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"8281:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8273:3:29"},"nodeType":"YulFunctionCall","src":"8273:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8288:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8269:3:29"},"nodeType":"YulFunctionCall","src":"8269:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8262:6:29"},"nodeType":"YulFunctionCall","src":"8262:35:29"},"nodeType":"YulIf","src":"8259:2:29"},{"nodeType":"YulVariableDeclaration","src":"8333:19:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8349:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8343:5:29"},"nodeType":"YulFunctionCall","src":"8343:9:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8337:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8361:61:29","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8418:2:29"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"8390:27:29"},"nodeType":"YulFunctionCall","src":"8390:31:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8374:15:29"},"nodeType":"YulFunctionCall","src":"8374:48:29"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"8365:5:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8438:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"8445:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8431:6:29"},"nodeType":"YulFunctionCall","src":"8431:17:29"},"nodeType":"YulExpressionStatement","src":"8431:17:29"},{"body":{"nodeType":"YulBlock","src":"8494:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8503:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8511:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8496:6:29"},"nodeType":"YulFunctionCall","src":"8496:22:29"},"nodeType":"YulExpressionStatement","src":"8496:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8471:2:29"},{"name":"_2","nodeType":"YulIdentifier","src":"8475:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8467:3:29"},"nodeType":"YulFunctionCall","src":"8467:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"8480:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8463:3:29"},"nodeType":"YulFunctionCall","src":"8463:20:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8485:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8460:2:29"},"nodeType":"YulFunctionCall","src":"8460:33:29"},"nodeType":"YulIf","src":"8457:2:29"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8555:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"8559:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8551:3:29"},"nodeType":"YulFunctionCall","src":"8551:11:29"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8568:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"8575:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8564:3:29"},"nodeType":"YulFunctionCall","src":"8564:14:29"},{"name":"_2","nodeType":"YulIdentifier","src":"8580:2:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8529:21:29"},"nodeType":"YulFunctionCall","src":"8529:54:29"},"nodeType":"YulExpressionStatement","src":"8529:54:29"},{"nodeType":"YulAssignment","src":"8592:15:29","value":{"name":"array","nodeType":"YulIdentifier","src":"8602:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8592:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7995:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8006:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8018:6:29","type":""}],"src":"7938:675:29"},{"body":{"nodeType":"YulBlock","src":"8688:120:29","statements":[{"body":{"nodeType":"YulBlock","src":"8734:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8743:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8751:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8736:6:29"},"nodeType":"YulFunctionCall","src":"8736:22:29"},"nodeType":"YulExpressionStatement","src":"8736:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8709:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8718:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8705:3:29"},"nodeType":"YulFunctionCall","src":"8705:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8730:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8701:3:29"},"nodeType":"YulFunctionCall","src":"8701:32:29"},"nodeType":"YulIf","src":"8698:2:29"},{"nodeType":"YulAssignment","src":"8769:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8792:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8779:12:29"},"nodeType":"YulFunctionCall","src":"8779:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8769:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8654:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8665:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8677:6:29","type":""}],"src":"8618:190:29"},{"body":{"nodeType":"YulBlock","src":"8894:113:29","statements":[{"body":{"nodeType":"YulBlock","src":"8940:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8949:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8957:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8942:6:29"},"nodeType":"YulFunctionCall","src":"8942:22:29"},"nodeType":"YulExpressionStatement","src":"8942:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8915:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8924:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8911:3:29"},"nodeType":"YulFunctionCall","src":"8911:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8936:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8907:3:29"},"nodeType":"YulFunctionCall","src":"8907:32:29"},"nodeType":"YulIf","src":"8904:2:29"},{"nodeType":"YulAssignment","src":"8975:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8991:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8985:5:29"},"nodeType":"YulFunctionCall","src":"8985:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8975:6:29"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8860:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8871:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8883:6:29","type":""}],"src":"8813:194:29"},{"body":{"nodeType":"YulBlock","src":"9195:1371:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9205:33:29","value":{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9219:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9228:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9215:3:29"},"nodeType":"YulFunctionCall","src":"9215:23:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9209:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9263:26:29","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9272:6:29"},{"name":"value4","nodeType":"YulIdentifier","src":"9280:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9265:6:29"},"nodeType":"YulFunctionCall","src":"9265:22:29"},"nodeType":"YulExpressionStatement","src":"9265:22:29"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9254:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"9258:3:29","type":"","value":"416"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9250:3:29"},"nodeType":"YulFunctionCall","src":"9250:12:29"},"nodeType":"YulIf","src":"9247:2:29"},{"nodeType":"YulAssignment","src":"9298:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9321:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9308:12:29"},"nodeType":"YulFunctionCall","src":"9308:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9298:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"9340:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9370:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9381:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9366:3:29"},"nodeType":"YulFunctionCall","src":"9366:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9353:12:29"},"nodeType":"YulFunctionCall","src":"9353:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9344:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9419:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9394:24:29"},"nodeType":"YulFunctionCall","src":"9394:31:29"},"nodeType":"YulExpressionStatement","src":"9394:31:29"},{"nodeType":"YulAssignment","src":"9434:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"9444:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9434:6:29"}]},{"nodeType":"YulAssignment","src":"9458:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9496:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9481:3:29"},"nodeType":"YulFunctionCall","src":"9481:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9468:12:29"},"nodeType":"YulFunctionCall","src":"9468:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9458:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"9509:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9519:6:29","type":"","value":"0x0120"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9513:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9622:26:29","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9631:6:29"},{"name":"value4","nodeType":"YulIdentifier","src":"9639:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9624:6:29"},"nodeType":"YulFunctionCall","src":"9624:22:29"},"nodeType":"YulExpressionStatement","src":"9624:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9545:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"9549:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9541:3:29"},"nodeType":"YulFunctionCall","src":"9541:75:29"},{"name":"_2","nodeType":"YulIdentifier","src":"9618:2:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9537:3:29"},"nodeType":"YulFunctionCall","src":"9537:84:29"},"nodeType":"YulIf","src":"9534:2:29"},{"nodeType":"YulVariableDeclaration","src":"9657:37:29","value":{"arguments":[],"functionName":{"name":"allocate_memory_5031","nodeType":"YulIdentifier","src":"9672:20:29"},"nodeType":"YulFunctionCall","src":"9672:22:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9661:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9710:7:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9742:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9753:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9738:3:29"},"nodeType":"YulFunctionCall","src":"9738:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9719:18:29"},"nodeType":"YulFunctionCall","src":"9719:38:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9703:6:29"},"nodeType":"YulFunctionCall","src":"9703:55:29"},"nodeType":"YulExpressionStatement","src":"9703:55:29"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9778:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"9787:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9774:3:29"},"nodeType":"YulFunctionCall","src":"9774:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9815:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9826:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9811:3:29"},"nodeType":"YulFunctionCall","src":"9811:19:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9792:18:29"},"nodeType":"YulFunctionCall","src":"9792:39:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9767:6:29"},"nodeType":"YulFunctionCall","src":"9767:65:29"},"nodeType":"YulExpressionStatement","src":"9767:65:29"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9852:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"9861:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9848:3:29"},"nodeType":"YulFunctionCall","src":"9848:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9883:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9894:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9879:3:29"},"nodeType":"YulFunctionCall","src":"9879:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9866:12:29"},"nodeType":"YulFunctionCall","src":"9866:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9841:6:29"},"nodeType":"YulFunctionCall","src":"9841:59:29"},"nodeType":"YulExpressionStatement","src":"9841:59:29"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9920:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"9929:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9916:3:29"},"nodeType":"YulFunctionCall","src":"9916:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9951:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9962:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9947:3:29"},"nodeType":"YulFunctionCall","src":"9947:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9934:12:29"},"nodeType":"YulFunctionCall","src":"9934:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9909:6:29"},"nodeType":"YulFunctionCall","src":"9909:59:29"},"nodeType":"YulExpressionStatement","src":"9909:59:29"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9988:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"9997:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9984:3:29"},"nodeType":"YulFunctionCall","src":"9984:17:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10020:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10031:3:29","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10016:3:29"},"nodeType":"YulFunctionCall","src":"10016:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10003:12:29"},"nodeType":"YulFunctionCall","src":"10003:33:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9977:6:29"},"nodeType":"YulFunctionCall","src":"9977:60:29"},"nodeType":"YulExpressionStatement","src":"9977:60:29"},{"nodeType":"YulVariableDeclaration","src":"10046:13:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10056:3:29","type":"","value":"256"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"10050:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10079:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"10088:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10075:3:29"},"nodeType":"YulFunctionCall","src":"10075:17:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10111:9:29"},{"name":"_3","nodeType":"YulIdentifier","src":"10122:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10107:3:29"},"nodeType":"YulFunctionCall","src":"10107:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10094:12:29"},"nodeType":"YulFunctionCall","src":"10094:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10068:6:29"},"nodeType":"YulFunctionCall","src":"10068:59:29"},"nodeType":"YulExpressionStatement","src":"10068:59:29"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10147:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"10156:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10143:3:29"},"nodeType":"YulFunctionCall","src":"10143:17:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10182:9:29"},{"name":"_2","nodeType":"YulIdentifier","src":"10193:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10178:3:29"},"nodeType":"YulFunctionCall","src":"10178:18:29"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"10162:15:29"},"nodeType":"YulFunctionCall","src":"10162:35:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10136:6:29"},"nodeType":"YulFunctionCall","src":"10136:62:29"},"nodeType":"YulExpressionStatement","src":"10136:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10218:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"10227:3:29","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10214:3:29"},"nodeType":"YulFunctionCall","src":"10214:17:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10253:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10264:3:29","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10249:3:29"},"nodeType":"YulFunctionCall","src":"10249:19:29"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"10233:15:29"},"nodeType":"YulFunctionCall","src":"10233:36:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10207:6:29"},"nodeType":"YulFunctionCall","src":"10207:63:29"},"nodeType":"YulExpressionStatement","src":"10207:63:29"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10290:7:29"},{"name":"_3","nodeType":"YulIdentifier","src":"10299:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10286:3:29"},"nodeType":"YulFunctionCall","src":"10286:16:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10324:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10335:3:29","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10320:3:29"},"nodeType":"YulFunctionCall","src":"10320:19:29"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"10304:15:29"},"nodeType":"YulFunctionCall","src":"10304:36:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10279:6:29"},"nodeType":"YulFunctionCall","src":"10279:62:29"},"nodeType":"YulExpressionStatement","src":"10279:62:29"},{"nodeType":"YulAssignment","src":"10350:17:29","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10360:7:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10350:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"10376:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10407:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10418:3:29","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10403:3:29"},"nodeType":"YulFunctionCall","src":"10403:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10390:12:29"},"nodeType":"YulFunctionCall","src":"10390:33:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10380:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10466:26:29","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10475:6:29"},{"name":"value4","nodeType":"YulIdentifier","src":"10483:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10468:6:29"},"nodeType":"YulFunctionCall","src":"10468:22:29"},"nodeType":"YulExpressionStatement","src":"10468:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10438:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10446:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10435:2:29"},"nodeType":"YulFunctionCall","src":"10435:30:29"},"nodeType":"YulIf","src":"10432:2:29"},{"nodeType":"YulAssignment","src":"10501:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10532:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10543:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10528:3:29"},"nodeType":"YulFunctionCall","src":"10528:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10552:7:29"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"10511:16:29"},"nodeType":"YulFunctionCall","src":"10511:49:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10501:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_uint256t_struct$_FNFTConfig_$3776_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9129:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9140:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9152:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9160:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9168:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9176:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9184:6:29","type":""}],"src":"9012:1554:29"},{"body":{"nodeType":"YulBlock","src":"10700:414:29","statements":[{"body":{"nodeType":"YulBlock","src":"10747:26:29","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10756:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"10764:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10749:6:29"},"nodeType":"YulFunctionCall","src":"10749:22:29"},"nodeType":"YulExpressionStatement","src":"10749:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10721:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10730:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10717:3:29"},"nodeType":"YulFunctionCall","src":"10717:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10742:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10713:3:29"},"nodeType":"YulFunctionCall","src":"10713:33:29"},"nodeType":"YulIf","src":"10710:2:29"},{"nodeType":"YulAssignment","src":"10782:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10805:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10792:12:29"},"nodeType":"YulFunctionCall","src":"10792:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10782:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"10824:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10854:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10865:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10850:3:29"},"nodeType":"YulFunctionCall","src":"10850:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10837:12:29"},"nodeType":"YulFunctionCall","src":"10837:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10828:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10903:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10878:24:29"},"nodeType":"YulFunctionCall","src":"10878:31:29"},"nodeType":"YulExpressionStatement","src":"10878:31:29"},{"nodeType":"YulAssignment","src":"10918:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"10928:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10918:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"10942:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10974:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10985:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10970:3:29"},"nodeType":"YulFunctionCall","src":"10970:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10957:12:29"},"nodeType":"YulFunctionCall","src":"10957:32:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10946:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"11023:7:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10998:24:29"},"nodeType":"YulFunctionCall","src":"10998:33:29"},"nodeType":"YulExpressionStatement","src":"10998:33:29"},{"nodeType":"YulAssignment","src":"11040:17:29","value":{"name":"value_1","nodeType":"YulIdentifier","src":"11050:7:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11040:6:29"}]},{"nodeType":"YulAssignment","src":"11066:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11093:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11104:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11089:3:29"},"nodeType":"YulFunctionCall","src":"11089:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11076:12:29"},"nodeType":"YulFunctionCall","src":"11076:32:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11066:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10642:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10653:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10665:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10673:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10681:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10689:6:29","type":""}],"src":"10571:543:29"},{"body":{"nodeType":"YulBlock","src":"11262:564:29","statements":[{"body":{"nodeType":"YulBlock","src":"11309:26:29","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11318:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"11326:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11311:6:29"},"nodeType":"YulFunctionCall","src":"11311:22:29"},"nodeType":"YulExpressionStatement","src":"11311:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11283:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11292:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11279:3:29"},"nodeType":"YulFunctionCall","src":"11279:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11304:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11275:3:29"},"nodeType":"YulFunctionCall","src":"11275:33:29"},"nodeType":"YulIf","src":"11272:2:29"},{"nodeType":"YulAssignment","src":"11344:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11367:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11354:12:29"},"nodeType":"YulFunctionCall","src":"11354:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11344:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"11386:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:29"},"nodeType":"YulFunctionCall","src":"11413:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11400:12:29"},"nodeType":"YulFunctionCall","src":"11400:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11390:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11475:26:29","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11484:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"11492:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11477:6:29"},"nodeType":"YulFunctionCall","src":"11477:22:29"},"nodeType":"YulExpressionStatement","src":"11477:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11447:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11455:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11444:2:29"},"nodeType":"YulFunctionCall","src":"11444:30:29"},"nodeType":"YulIf","src":"11441:2:29"},{"nodeType":"YulAssignment","src":"11510:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11553:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11564:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11549:3:29"},"nodeType":"YulFunctionCall","src":"11549:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11573:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11520:28:29"},"nodeType":"YulFunctionCall","src":"11520:61:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11510:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"11590:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11620:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11631:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11616:3:29"},"nodeType":"YulFunctionCall","src":"11616:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11603:12:29"},"nodeType":"YulFunctionCall","src":"11603:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11594:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11669:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11644:24:29"},"nodeType":"YulFunctionCall","src":"11644:31:29"},"nodeType":"YulExpressionStatement","src":"11644:31:29"},{"nodeType":"YulAssignment","src":"11684:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"11694:5:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11684:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"11708:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11740:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11751:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11736:3:29"},"nodeType":"YulFunctionCall","src":"11736:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11723:12:29"},"nodeType":"YulFunctionCall","src":"11723:32:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"11712:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"11786:7:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"11764:21:29"},"nodeType":"YulFunctionCall","src":"11764:30:29"},"nodeType":"YulExpressionStatement","src":"11764:30:29"},{"nodeType":"YulAssignment","src":"11803:17:29","value":{"name":"value_1","nodeType":"YulIdentifier","src":"11813:7:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11803:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptrt_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11204:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11215:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11227:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11235:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11243:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11251:6:29","type":""}],"src":"11119:707:29"},{"body":{"nodeType":"YulBlock","src":"11977:494:29","statements":[{"body":{"nodeType":"YulBlock","src":"12024:26:29","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12033:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"12041:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12026:6:29"},"nodeType":"YulFunctionCall","src":"12026:22:29"},"nodeType":"YulExpressionStatement","src":"12026:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11998:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12007:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11994:3:29"},"nodeType":"YulFunctionCall","src":"11994:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12019:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11990:3:29"},"nodeType":"YulFunctionCall","src":"11990:33:29"},"nodeType":"YulIf","src":"11987:2:29"},{"nodeType":"YulAssignment","src":"12059:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12082:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12069:12:29"},"nodeType":"YulFunctionCall","src":"12069:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12059:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12101:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12132:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12143:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12128:3:29"},"nodeType":"YulFunctionCall","src":"12128:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12115:12:29"},"nodeType":"YulFunctionCall","src":"12115:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12105:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12190:26:29","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12199:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"12207:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12192:6:29"},"nodeType":"YulFunctionCall","src":"12192:22:29"},"nodeType":"YulExpressionStatement","src":"12192:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12162:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12170:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12159:2:29"},"nodeType":"YulFunctionCall","src":"12159:30:29"},"nodeType":"YulIf","src":"12156:2:29"},{"nodeType":"YulAssignment","src":"12225:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12268:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12279:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12264:3:29"},"nodeType":"YulFunctionCall","src":"12264:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12288:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"12235:28:29"},"nodeType":"YulFunctionCall","src":"12235:61:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12225:6:29"}]},{"nodeType":"YulAssignment","src":"12305:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12332:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12343:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12328:3:29"},"nodeType":"YulFunctionCall","src":"12328:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12315:12:29"},"nodeType":"YulFunctionCall","src":"12315:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12305:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12356:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12386:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12397:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12382:3:29"},"nodeType":"YulFunctionCall","src":"12382:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12369:12:29"},"nodeType":"YulFunctionCall","src":"12369:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12360:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12435:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12410:24:29"},"nodeType":"YulFunctionCall","src":"12410:31:29"},"nodeType":"YulExpressionStatement","src":"12410:31:29"},{"nodeType":"YulAssignment","src":"12450:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"12460:5:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12450:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptrt_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11919:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11930:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11942:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11950:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11958:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11966:6:29","type":""}],"src":"11831:640:29"},{"body":{"nodeType":"YulBlock","src":"12572:312:29","statements":[{"body":{"nodeType":"YulBlock","src":"12618:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12627:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"12635:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12620:6:29"},"nodeType":"YulFunctionCall","src":"12620:22:29"},"nodeType":"YulExpressionStatement","src":"12620:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12593:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12602:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12589:3:29"},"nodeType":"YulFunctionCall","src":"12589:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12614:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12585:3:29"},"nodeType":"YulFunctionCall","src":"12585:32:29"},"nodeType":"YulIf","src":"12582:2:29"},{"nodeType":"YulAssignment","src":"12653:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12676:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12663:12:29"},"nodeType":"YulFunctionCall","src":"12663:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12653:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12695:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12726:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12737:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12722:3:29"},"nodeType":"YulFunctionCall","src":"12722:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12709:12:29"},"nodeType":"YulFunctionCall","src":"12709:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12699:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12784:26:29","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12793:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"12801:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12786:6:29"},"nodeType":"YulFunctionCall","src":"12786:22:29"},"nodeType":"YulExpressionStatement","src":"12786:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12756:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12764:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12753:2:29"},"nodeType":"YulFunctionCall","src":"12753:30:29"},"nodeType":"YulIf","src":"12750:2:29"},{"nodeType":"YulAssignment","src":"12819:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12850:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12861:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12846:3:29"},"nodeType":"YulFunctionCall","src":"12846:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12870:7:29"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"12829:16:29"},"nodeType":"YulFunctionCall","src":"12829:49:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12819:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12530:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12541:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12553:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12561:6:29","type":""}],"src":"12476:408:29"},{"body":{"nodeType":"YulBlock","src":"12976:171:29","statements":[{"body":{"nodeType":"YulBlock","src":"13022:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13031:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"13039:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13024:6:29"},"nodeType":"YulFunctionCall","src":"13024:22:29"},"nodeType":"YulExpressionStatement","src":"13024:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12997:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13006:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12993:3:29"},"nodeType":"YulFunctionCall","src":"12993:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"13018:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12989:3:29"},"nodeType":"YulFunctionCall","src":"12989:32:29"},"nodeType":"YulIf","src":"12986:2:29"},{"nodeType":"YulAssignment","src":"13057:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13080:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13067:12:29"},"nodeType":"YulFunctionCall","src":"13067:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13057:6:29"}]},{"nodeType":"YulAssignment","src":"13099:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13126:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13137:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13122:3:29"},"nodeType":"YulFunctionCall","src":"13122:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13109:12:29"},"nodeType":"YulFunctionCall","src":"13109:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13099:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12934:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12945:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12957:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12965:6:29","type":""}],"src":"12889:258:29"},{"body":{"nodeType":"YulBlock","src":"13256:289:29","statements":[{"body":{"nodeType":"YulBlock","src":"13302:26:29","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13311:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"13319:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13304:6:29"},"nodeType":"YulFunctionCall","src":"13304:22:29"},"nodeType":"YulExpressionStatement","src":"13304:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13277:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13286:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13273:3:29"},"nodeType":"YulFunctionCall","src":"13273:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"13298:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13269:3:29"},"nodeType":"YulFunctionCall","src":"13269:32:29"},"nodeType":"YulIf","src":"13266:2:29"},{"nodeType":"YulAssignment","src":"13337:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13360:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13347:12:29"},"nodeType":"YulFunctionCall","src":"13347:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13337:6:29"}]},{"nodeType":"YulAssignment","src":"13379:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13406:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13417:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13402:3:29"},"nodeType":"YulFunctionCall","src":"13402:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13389:12:29"},"nodeType":"YulFunctionCall","src":"13389:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13379:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"13430:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13460:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13471:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13456:3:29"},"nodeType":"YulFunctionCall","src":"13456:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13443:12:29"},"nodeType":"YulFunctionCall","src":"13443:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13434:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13509:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13484:24:29"},"nodeType":"YulFunctionCall","src":"13484:31:29"},"nodeType":"YulExpressionStatement","src":"13484:31:29"},{"nodeType":"YulAssignment","src":"13524:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"13534:5:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13524:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13206:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13217:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13229:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13237:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13245:6:29","type":""}],"src":"13152:393:29"},{"body":{"nodeType":"YulBlock","src":"13671:341:29","statements":[{"body":{"nodeType":"YulBlock","src":"13718:26:29","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13727:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"13735:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13720:6:29"},"nodeType":"YulFunctionCall","src":"13720:22:29"},"nodeType":"YulExpressionStatement","src":"13720:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13692:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13701:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13688:3:29"},"nodeType":"YulFunctionCall","src":"13688:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"13713:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13684:3:29"},"nodeType":"YulFunctionCall","src":"13684:33:29"},"nodeType":"YulIf","src":"13681:2:29"},{"nodeType":"YulAssignment","src":"13753:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13776:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13763:12:29"},"nodeType":"YulFunctionCall","src":"13763:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13753:6:29"}]},{"nodeType":"YulAssignment","src":"13795:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13822:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13833:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13818:3:29"},"nodeType":"YulFunctionCall","src":"13818:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13805:12:29"},"nodeType":"YulFunctionCall","src":"13805:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13795:6:29"}]},{"nodeType":"YulAssignment","src":"13846:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13873:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13884:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13869:3:29"},"nodeType":"YulFunctionCall","src":"13869:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13856:12:29"},"nodeType":"YulFunctionCall","src":"13856:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13846:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"13897:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13927:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13938:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13923:3:29"},"nodeType":"YulFunctionCall","src":"13923:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13910:12:29"},"nodeType":"YulFunctionCall","src":"13910:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13901:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13976:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13951:24:29"},"nodeType":"YulFunctionCall","src":"13951:31:29"},"nodeType":"YulExpressionStatement","src":"13951:31:29"},{"nodeType":"YulAssignment","src":"13991:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"14001:5:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13991:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13613:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13624:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13636:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13644:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13652:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13660:6:29","type":""}],"src":"13550:462:29"},{"body":{"nodeType":"YulBlock","src":"14096:214:29","statements":[{"body":{"nodeType":"YulBlock","src":"14142:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14151:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"14159:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14144:6:29"},"nodeType":"YulFunctionCall","src":"14144:22:29"},"nodeType":"YulExpressionStatement","src":"14144:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14117:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14126:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14113:3:29"},"nodeType":"YulFunctionCall","src":"14113:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"14138:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14109:3:29"},"nodeType":"YulFunctionCall","src":"14109:32:29"},"nodeType":"YulIf","src":"14106:2:29"},{"nodeType":"YulVariableDeclaration","src":"14177:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14196:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14190:5:29"},"nodeType":"YulFunctionCall","src":"14190:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14181:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"14254:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14263:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"14271:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14256:6:29"},"nodeType":"YulFunctionCall","src":"14256:22:29"},"nodeType":"YulExpressionStatement","src":"14256:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14228:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14239:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"14246:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14235:3:29"},"nodeType":"YulFunctionCall","src":"14235:16:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14225:2:29"},"nodeType":"YulFunctionCall","src":"14225:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14218:6:29"},"nodeType":"YulFunctionCall","src":"14218:35:29"},"nodeType":"YulIf","src":"14215:2:29"},{"nodeType":"YulAssignment","src":"14289:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"14299:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14289:6:29"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14062:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14073:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14085:6:29","type":""}],"src":"14017:293:29"},{"body":{"nodeType":"YulBlock","src":"14359:83:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14376:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14385:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"14392:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14381:3:29"},"nodeType":"YulFunctionCall","src":"14381:54:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14369:6:29"},"nodeType":"YulFunctionCall","src":"14369:67:29"},"nodeType":"YulExpressionStatement","src":"14369:67:29"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14343:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14350:3:29","type":""}],"src":"14315:127:29"},{"body":{"nodeType":"YulBlock","src":"14488:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14505:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14524:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14517:6:29"},"nodeType":"YulFunctionCall","src":"14517:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14510:6:29"},"nodeType":"YulFunctionCall","src":"14510:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14498:6:29"},"nodeType":"YulFunctionCall","src":"14498:34:29"},"nodeType":"YulExpressionStatement","src":"14498:34:29"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14472:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14479:3:29","type":""}],"src":"14447:91:29"},{"body":{"nodeType":"YulBlock","src":"14592:267:29","statements":[{"nodeType":"YulVariableDeclaration","src":"14602:26:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14622:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14616:5:29"},"nodeType":"YulFunctionCall","src":"14616:12:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14606:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14644:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"14649:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14637:6:29"},"nodeType":"YulFunctionCall","src":"14637:19:29"},"nodeType":"YulExpressionStatement","src":"14637:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14691:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"14698:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14687:3:29"},"nodeType":"YulFunctionCall","src":"14687:16:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14709:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14714:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14705:3:29"},"nodeType":"YulFunctionCall","src":"14705:14:29"},{"name":"length","nodeType":"YulIdentifier","src":"14721:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"14665:21:29"},"nodeType":"YulFunctionCall","src":"14665:63:29"},"nodeType":"YulExpressionStatement","src":"14665:63:29"},{"nodeType":"YulAssignment","src":"14737:116:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14752:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14765:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14773:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14761:3:29"},"nodeType":"YulFunctionCall","src":"14761:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"14778:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14757:3:29"},"nodeType":"YulFunctionCall","src":"14757:88:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14748:3:29"},"nodeType":"YulFunctionCall","src":"14748:98:29"},{"kind":"number","nodeType":"YulLiteral","src":"14848:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14744:3:29"},"nodeType":"YulFunctionCall","src":"14744:109:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14737:3:29"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14569:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14576:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14584:3:29","type":""}],"src":"14543:316:29"},{"body":{"nodeType":"YulBlock","src":"14918:709:29","statements":[{"nodeType":"YulVariableDeclaration","src":"14928:52:29","value":{"kind":"number","nodeType":"YulLiteral","src":"14938:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14932:2:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14996:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15011:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15005:5:29"},"nodeType":"YulFunctionCall","src":"15005:12:29"},{"name":"_1","nodeType":"YulIdentifier","src":"15019:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15001:3:29"},"nodeType":"YulFunctionCall","src":"15001:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14989:6:29"},"nodeType":"YulFunctionCall","src":"14989:34:29"},"nodeType":"YulExpressionStatement","src":"14989:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15043:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15048:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15039:3:29"},"nodeType":"YulFunctionCall","src":"15039:14:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15069:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"15076:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15065:3:29"},"nodeType":"YulFunctionCall","src":"15065:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15059:5:29"},"nodeType":"YulFunctionCall","src":"15059:23:29"},{"name":"_1","nodeType":"YulIdentifier","src":"15084:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15055:3:29"},"nodeType":"YulFunctionCall","src":"15055:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15032:6:29"},"nodeType":"YulFunctionCall","src":"15032:56:29"},"nodeType":"YulExpressionStatement","src":"15032:56:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15108:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15113:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15104:3:29"},"nodeType":"YulFunctionCall","src":"15104:14:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15130:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"15137:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15126:3:29"},"nodeType":"YulFunctionCall","src":"15126:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15120:5:29"},"nodeType":"YulFunctionCall","src":"15120:23:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15097:6:29"},"nodeType":"YulFunctionCall","src":"15097:47:29"},"nodeType":"YulExpressionStatement","src":"15097:47:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15164:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15169:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15160:3:29"},"nodeType":"YulFunctionCall","src":"15160:14:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15186:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"15193:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15182:3:29"},"nodeType":"YulFunctionCall","src":"15182:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15176:5:29"},"nodeType":"YulFunctionCall","src":"15176:23:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15153:6:29"},"nodeType":"YulFunctionCall","src":"15153:47:29"},"nodeType":"YulExpressionStatement","src":"15153:47:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15220:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15225:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15216:3:29"},"nodeType":"YulFunctionCall","src":"15216:14:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15242:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"15249:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15238:3:29"},"nodeType":"YulFunctionCall","src":"15238:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15232:5:29"},"nodeType":"YulFunctionCall","src":"15232:23:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15209:6:29"},"nodeType":"YulFunctionCall","src":"15209:47:29"},"nodeType":"YulExpressionStatement","src":"15209:47:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15276:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15281:4:29","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15272:3:29"},"nodeType":"YulFunctionCall","src":"15272:14:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15298:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"15305:4:29","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15294:3:29"},"nodeType":"YulFunctionCall","src":"15294:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15288:5:29"},"nodeType":"YulFunctionCall","src":"15288:23:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15265:6:29"},"nodeType":"YulFunctionCall","src":"15265:47:29"},"nodeType":"YulExpressionStatement","src":"15265:47:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15332:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15337:4:29","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15328:3:29"},"nodeType":"YulFunctionCall","src":"15328:14:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15368:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"15375:4:29","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15364:3:29"},"nodeType":"YulFunctionCall","src":"15364:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15358:5:29"},"nodeType":"YulFunctionCall","src":"15358:23:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15351:6:29"},"nodeType":"YulFunctionCall","src":"15351:31:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15344:6:29"},"nodeType":"YulFunctionCall","src":"15344:39:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15321:6:29"},"nodeType":"YulFunctionCall","src":"15321:63:29"},"nodeType":"YulExpressionStatement","src":"15321:63:29"},{"nodeType":"YulVariableDeclaration","src":"15393:43:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15423:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"15430:4:29","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15419:3:29"},"nodeType":"YulFunctionCall","src":"15419:16:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15413:5:29"},"nodeType":"YulFunctionCall","src":"15413:23:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15397:12:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15461:12:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15479:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15484:4:29","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15475:3:29"},"nodeType":"YulFunctionCall","src":"15475:14:29"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"15445:15:29"},"nodeType":"YulFunctionCall","src":"15445:45:29"},"nodeType":"YulExpressionStatement","src":"15445:45:29"},{"nodeType":"YulVariableDeclaration","src":"15499:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"15509:6:29","type":"","value":"0x0100"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15503:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15524:43:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15556:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"15563:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15552:3:29"},"nodeType":"YulFunctionCall","src":"15552:14:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15546:5:29"},"nodeType":"YulFunctionCall","src":"15546:21:29"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"15528:14:29","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"15592:14:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15612:3:29"},{"name":"_2","nodeType":"YulIdentifier","src":"15617:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15608:3:29"},"nodeType":"YulFunctionCall","src":"15608:12:29"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"15576:15:29"},"nodeType":"YulFunctionCall","src":"15576:45:29"},"nodeType":"YulExpressionStatement","src":"15576:45:29"}]},"name":"abi_encode_struct_FNFTConfig","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14902:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14909:3:29","type":""}],"src":"14864:763:29"},{"body":{"nodeType":"YulBlock","src":"15769:137:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15779:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15799:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15793:5:29"},"nodeType":"YulFunctionCall","src":"15793:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15783:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15841:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15849:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15837:3:29"},"nodeType":"YulFunctionCall","src":"15837:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"15856:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"15861:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"15815:21:29"},"nodeType":"YulFunctionCall","src":"15815:53:29"},"nodeType":"YulExpressionStatement","src":"15815:53:29"},{"nodeType":"YulAssignment","src":"15877:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15888:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"15893:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15884:3:29"},"nodeType":"YulFunctionCall","src":"15884:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15877:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15745:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15750:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15761:3:29","type":""}],"src":"15632:274:29"},{"body":{"nodeType":"YulBlock","src":"16098:283:29","statements":[{"nodeType":"YulVariableDeclaration","src":"16108:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16128:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16122:5:29"},"nodeType":"YulFunctionCall","src":"16122:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16112:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16170:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16178:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16166:3:29"},"nodeType":"YulFunctionCall","src":"16166:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"16185:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16190:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16144:21:29"},"nodeType":"YulFunctionCall","src":"16144:53:29"},"nodeType":"YulExpressionStatement","src":"16144:53:29"},{"nodeType":"YulVariableDeclaration","src":"16206:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16223:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16228:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16219:3:29"},"nodeType":"YulFunctionCall","src":"16219:16:29"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"16210:5:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16244:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16266:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16260:5:29"},"nodeType":"YulFunctionCall","src":"16260:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"16248:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16308:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16316:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16304:3:29"},"nodeType":"YulFunctionCall","src":"16304:17:29"},{"name":"end_1","nodeType":"YulIdentifier","src":"16323:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"16330:8:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16282:21:29"},"nodeType":"YulFunctionCall","src":"16282:57:29"},"nodeType":"YulExpressionStatement","src":"16282:57:29"},{"nodeType":"YulAssignment","src":"16348:27:29","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"16359:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"16366:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16355:3:29"},"nodeType":"YulFunctionCall","src":"16355:20:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16348:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16066:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16071:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16079:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16090:3:29","type":""}],"src":"15911:470:29"},{"body":{"nodeType":"YulBlock","src":"16775:398:29","statements":[{"nodeType":"YulVariableDeclaration","src":"16785:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16805:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16799:5:29"},"nodeType":"YulFunctionCall","src":"16799:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16789:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16847:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16855:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16843:3:29"},"nodeType":"YulFunctionCall","src":"16843:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"16862:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16867:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16821:21:29"},"nodeType":"YulFunctionCall","src":"16821:53:29"},"nodeType":"YulExpressionStatement","src":"16821:53:29"},{"nodeType":"YulVariableDeclaration","src":"16883:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16900:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16905:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16896:3:29"},"nodeType":"YulFunctionCall","src":"16896:16:29"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"16887:5:29","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"16928:5:29"},{"kind":"string","nodeType":"YulLiteral","src":"16935:4:29","type":"","value":" ["}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16921:6:29"},"nodeType":"YulFunctionCall","src":"16921:19:29"},"nodeType":"YulExpressionStatement","src":"16921:19:29"},{"nodeType":"YulVariableDeclaration","src":"16949:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16971:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16965:5:29"},"nodeType":"YulFunctionCall","src":"16965:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"16953:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17013:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17021:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17009:3:29"},"nodeType":"YulFunctionCall","src":"17009:17:29"},{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"17032:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"17039:1:29","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17028:3:29"},"nodeType":"YulFunctionCall","src":"17028:13:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"17043:8:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16987:21:29"},"nodeType":"YulFunctionCall","src":"16987:65:29"},"nodeType":"YulExpressionStatement","src":"16987:65:29"},{"nodeType":"YulVariableDeclaration","src":"17061:30:29","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"17075:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"17082:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:29"},"nodeType":"YulFunctionCall","src":"17071:20:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17065:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17111:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"17115:1:29","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17107:3:29"},"nodeType":"YulFunctionCall","src":"17107:10:29"},{"kind":"string","nodeType":"YulLiteral","src":"17119:20:29","type":"","value":"] Tokens Available"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17100:6:29"},"nodeType":"YulFunctionCall","src":"17100:40:29"},"nodeType":"YulExpressionStatement","src":"17100:40:29"},{"nodeType":"YulAssignment","src":"17149:18:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17160:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"17164:2:29","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17156:3:29"},"nodeType":"YulFunctionCall","src":"17156:11:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17149:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_53a4b4e6ee1c8d4208b367bdf377e48fc9f3ac9d4f90fb6680d8a68397b09e8f_t_string_memory_ptr_t_stringliteral_28256d1d7a0833d10b530a5d7ac501d039b0fc93a3f3409ebdd4d510715037b6__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16743:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16748:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16756:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16767:3:29","type":""}],"src":"16386:787:29"},{"body":{"nodeType":"YulBlock","src":"17418:200:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17428:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17448:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17442:5:29"},"nodeType":"YulFunctionCall","src":"17442:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17432:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17490:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17498:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17486:3:29"},"nodeType":"YulFunctionCall","src":"17486:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"17505:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"17510:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"17464:21:29"},"nodeType":"YulFunctionCall","src":"17464:53:29"},"nodeType":"YulExpressionStatement","src":"17464:53:29"},{"nodeType":"YulVariableDeclaration","src":"17526:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17543:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"17548:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17539:3:29"},"nodeType":"YulFunctionCall","src":"17539:16:29"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"17530:5:29","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"17571:5:29"},{"kind":"string","nodeType":"YulLiteral","src":"17578:4:29","type":"","value":": "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17564:6:29"},"nodeType":"YulFunctionCall","src":"17564:19:29"},"nodeType":"YulExpressionStatement","src":"17564:19:29"},{"nodeType":"YulAssignment","src":"17592:20:29","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"17603:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"17610:1:29","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17599:3:29"},"nodeType":"YulFunctionCall","src":"17599:13:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17592:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_e64009107d042bdc478cc69a5433e4573ea2e8a23a46646c0ee241e30c888e73__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17394:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17399:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17410:3:29","type":""}],"src":"17178:440:29"},{"body":{"nodeType":"YulBlock","src":"17724:125:29","statements":[{"nodeType":"YulAssignment","src":"17734:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17746:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17757:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17742:3:29"},"nodeType":"YulFunctionCall","src":"17742:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17734:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17776:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17791:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17799:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17787:3:29"},"nodeType":"YulFunctionCall","src":"17787:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17769:6:29"},"nodeType":"YulFunctionCall","src":"17769:74:29"},"nodeType":"YulExpressionStatement","src":"17769:74:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17693:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17704:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17715:4:29","type":""}],"src":"17623:226:29"},{"body":{"nodeType":"YulBlock","src":"18011:241:29","statements":[{"nodeType":"YulAssignment","src":"18021:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18033:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18044:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18029:3:29"},"nodeType":"YulFunctionCall","src":"18029:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18021:4:29"}]},{"nodeType":"YulVariableDeclaration","src":"18056:52:29","value":{"kind":"number","nodeType":"YulLiteral","src":"18066:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18060:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18124:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18139:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"18147:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18135:3:29"},"nodeType":"YulFunctionCall","src":"18135:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18117:6:29"},"nodeType":"YulFunctionCall","src":"18117:34:29"},"nodeType":"YulExpressionStatement","src":"18117:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18171:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18182:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18167:3:29"},"nodeType":"YulFunctionCall","src":"18167:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18191:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"18199:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18187:3:29"},"nodeType":"YulFunctionCall","src":"18187:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18160:6:29"},"nodeType":"YulFunctionCall","src":"18160:43:29"},"nodeType":"YulExpressionStatement","src":"18160:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18223:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18234:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18219:3:29"},"nodeType":"YulFunctionCall","src":"18219:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"18239:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18212:6:29"},"nodeType":"YulFunctionCall","src":"18212:34:29"},"nodeType":"YulExpressionStatement","src":"18212:34:29"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17964:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17975:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17983:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17991:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18002:4:29","type":""}],"src":"17854:398:29"},{"body":{"nodeType":"YulBlock","src":"18534:940:29","statements":[{"nodeType":"YulVariableDeclaration","src":"18544:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18562:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18573:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18558:3:29"},"nodeType":"YulFunctionCall","src":"18558:19:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"18548:6:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18593:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18608:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18616:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18604:3:29"},"nodeType":"YulFunctionCall","src":"18604:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18586:6:29"},"nodeType":"YulFunctionCall","src":"18586:74:29"},"nodeType":"YulExpressionStatement","src":"18586:74:29"},{"nodeType":"YulVariableDeclaration","src":"18669:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"18679:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18673:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18701:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"18712:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18697:3:29"},"nodeType":"YulFunctionCall","src":"18697:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"18717:3:29","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18690:6:29"},"nodeType":"YulFunctionCall","src":"18690:31:29"},"nodeType":"YulExpressionStatement","src":"18690:31:29"},{"nodeType":"YulVariableDeclaration","src":"18730:17:29","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"18741:6:29"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"18734:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18756:27:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18776:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18770:5:29"},"nodeType":"YulFunctionCall","src":"18770:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18760:6:29","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"18799:6:29"},{"name":"length","nodeType":"YulIdentifier","src":"18807:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18792:6:29"},"nodeType":"YulFunctionCall","src":"18792:22:29"},"nodeType":"YulExpressionStatement","src":"18792:22:29"},{"nodeType":"YulAssignment","src":"18823:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18834:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18845:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18830:3:29"},"nodeType":"YulFunctionCall","src":"18830:19:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18823:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"18858:54:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18880:9:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18895:1:29","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"18898:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18891:3:29"},"nodeType":"YulFunctionCall","src":"18891:14:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18876:3:29"},"nodeType":"YulFunctionCall","src":"18876:30:29"},{"kind":"number","nodeType":"YulLiteral","src":"18908:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18872:3:29"},"nodeType":"YulFunctionCall","src":"18872:40:29"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"18862:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18921:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18939:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"18947:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18935:3:29"},"nodeType":"YulFunctionCall","src":"18935:15:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"18925:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18959:13:29","value":{"name":"tail","nodeType":"YulIdentifier","src":"18968:4:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18963:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"19030:264:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19051:3:29"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"19064:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"19072:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19060:3:29"},"nodeType":"YulFunctionCall","src":"19060:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"19084:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19056:3:29"},"nodeType":"YulFunctionCall","src":"19056:95:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19044:6:29"},"nodeType":"YulFunctionCall","src":"19044:108:29"},"nodeType":"YulExpressionStatement","src":"19044:108:29"},{"nodeType":"YulAssignment","src":"19165:49:29","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19198:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19192:5:29"},"nodeType":"YulFunctionCall","src":"19192:13:29"},{"name":"tail_2","nodeType":"YulIdentifier","src":"19207:6:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"19175:16:29"},"nodeType":"YulFunctionCall","src":"19175:39:29"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"19165:6:29"}]},{"nodeType":"YulAssignment","src":"19227:25:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19241:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"19249:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19237:3:29"},"nodeType":"YulFunctionCall","src":"19237:15:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19227:6:29"}]},{"nodeType":"YulAssignment","src":"19265:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19276:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"19281:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19272:3:29"},"nodeType":"YulFunctionCall","src":"19272:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19265:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18992:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"18995:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18989:2:29"},"nodeType":"YulFunctionCall","src":"18989:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19003:18:29","statements":[{"nodeType":"YulAssignment","src":"19005:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19014:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"19017:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19010:3:29"},"nodeType":"YulFunctionCall","src":"19010:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19005:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"18985:3:29","statements":[]},"src":"18981:313:29"},{"nodeType":"YulAssignment","src":"19303:14:29","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"19311:6:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19303:4:29"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19342:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19354:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19365:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19350:3:29"},"nodeType":"YulFunctionCall","src":"19350:18:29"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"19326:15:29"},"nodeType":"YulFunctionCall","src":"19326:43:29"},"nodeType":"YulExpressionStatement","src":"19326:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19389:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19400:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19385:3:29"},"nodeType":"YulFunctionCall","src":"19385:18:29"},{"name":"value3","nodeType":"YulIdentifier","src":"19405:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19378:6:29"},"nodeType":"YulFunctionCall","src":"19378:34:29"},"nodeType":"YulExpressionStatement","src":"19378:34:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19440:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19452:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19463:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19448:3:29"},"nodeType":"YulFunctionCall","src":"19448:19:29"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"19421:18:29"},"nodeType":"YulFunctionCall","src":"19421:47:29"},"nodeType":"YulExpressionStatement","src":"19421:47:29"}]},"name":"abi_encode_tuple_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_bool_t_uint256_t_address__to_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_bool_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18471:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18482:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18490:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18498:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18506:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18514:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18525:4:29","type":""}],"src":"18257:1217:29"},{"body":{"nodeType":"YulBlock","src":"19608:168:29","statements":[{"nodeType":"YulAssignment","src":"19618:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19630:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19641:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19626:3:29"},"nodeType":"YulFunctionCall","src":"19626:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19618:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19660:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19675:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19683:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19671:3:29"},"nodeType":"YulFunctionCall","src":"19671:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19653:6:29"},"nodeType":"YulFunctionCall","src":"19653:74:29"},"nodeType":"YulExpressionStatement","src":"19653:74:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19747:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19758:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19743:3:29"},"nodeType":"YulFunctionCall","src":"19743:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"19763:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19736:6:29"},"nodeType":"YulFunctionCall","src":"19736:34:29"},"nodeType":"YulExpressionStatement","src":"19736:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19569:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19580:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19588:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19599:4:29","type":""}],"src":"19479:297:29"},{"body":{"nodeType":"YulBlock","src":"19876:92:29","statements":[{"nodeType":"YulAssignment","src":"19886:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19898:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19909:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19894:3:29"},"nodeType":"YulFunctionCall","src":"19894:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19886:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19928:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19953:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19946:6:29"},"nodeType":"YulFunctionCall","src":"19946:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19939:6:29"},"nodeType":"YulFunctionCall","src":"19939:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19921:6:29"},"nodeType":"YulFunctionCall","src":"19921:41:29"},"nodeType":"YulExpressionStatement","src":"19921:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19845:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19856:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19867:4:29","type":""}],"src":"19781:187:29"},{"body":{"nodeType":"YulBlock","src":"20074:76:29","statements":[{"nodeType":"YulAssignment","src":"20084:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20096:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20107:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20092:3:29"},"nodeType":"YulFunctionCall","src":"20092:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20084:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20126:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"20137:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20119:6:29"},"nodeType":"YulFunctionCall","src":"20119:25:29"},"nodeType":"YulExpressionStatement","src":"20119:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20043:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20054:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20065:4:29","type":""}],"src":"19973:177:29"},{"body":{"nodeType":"YulBlock","src":"20292:168:29","statements":[{"nodeType":"YulAssignment","src":"20302:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20314:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20325:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20310:3:29"},"nodeType":"YulFunctionCall","src":"20310:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20302:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20344:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"20355:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20337:6:29"},"nodeType":"YulFunctionCall","src":"20337:25:29"},"nodeType":"YulExpressionStatement","src":"20337:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20382:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20393:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20378:3:29"},"nodeType":"YulFunctionCall","src":"20378:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20402:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20410:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20398:3:29"},"nodeType":"YulFunctionCall","src":"20398:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20371:6:29"},"nodeType":"YulFunctionCall","src":"20371:83:29"},"nodeType":"YulExpressionStatement","src":"20371:83:29"}]},"name":"abi_encode_tuple_t_bytes32_t_address_payable__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20253:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20264:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20272:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20283:4:29","type":""}],"src":"20155:305:29"},{"body":{"nodeType":"YulBlock","src":"20584:98:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20601:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20612:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20594:6:29"},"nodeType":"YulFunctionCall","src":"20594:21:29"},"nodeType":"YulExpressionStatement","src":"20594:21:29"},{"nodeType":"YulAssignment","src":"20624:52:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20649:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20661:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20672:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20657:3:29"},"nodeType":"YulFunctionCall","src":"20657:18:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"20632:16:29"},"nodeType":"YulFunctionCall","src":"20632:44:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20624:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20553:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20564:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20575:4:29","type":""}],"src":"20465:217:29"},{"body":{"nodeType":"YulBlock","src":"20808:98:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20825:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20836:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20818:6:29"},"nodeType":"YulFunctionCall","src":"20818:21:29"},"nodeType":"YulExpressionStatement","src":"20818:21:29"},{"nodeType":"YulAssignment","src":"20848:52:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20873:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20885:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20896:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20881:3:29"},"nodeType":"YulFunctionCall","src":"20881:18:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"20856:16:29"},"nodeType":"YulFunctionCall","src":"20856:44:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20848:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20777:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20788:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20799:4:29","type":""}],"src":"20687:219:29"},{"body":{"nodeType":"YulBlock","src":"21085:164:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21102:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21113:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21095:6:29"},"nodeType":"YulFunctionCall","src":"21095:21:29"},"nodeType":"YulExpressionStatement","src":"21095:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21136:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21147:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21132:3:29"},"nodeType":"YulFunctionCall","src":"21132:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"21152:2:29","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21125:6:29"},"nodeType":"YulFunctionCall","src":"21125:30:29"},"nodeType":"YulExpressionStatement","src":"21125:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21175:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21186:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21171:3:29"},"nodeType":"YulFunctionCall","src":"21171:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"21191:16:29","type":"","value":"Not applicable"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21164:6:29"},"nodeType":"YulFunctionCall","src":"21164:44:29"},"nodeType":"YulExpressionStatement","src":"21164:44:29"},{"nodeType":"YulAssignment","src":"21217:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21229:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21240:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21225:3:29"},"nodeType":"YulFunctionCall","src":"21225:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21217:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_002c3a0d8c9ff41ec8db058c98ae237ebd5201bae49e6ac9b3a3d5192c67a209__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21062:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21076:4:29","type":""}],"src":"20911:338:29"},{"body":{"nodeType":"YulBlock","src":"21428:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21445:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21456:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21438:6:29"},"nodeType":"YulFunctionCall","src":"21438:21:29"},"nodeType":"YulExpressionStatement","src":"21438:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21479:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21490:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21475:3:29"},"nodeType":"YulFunctionCall","src":"21475:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"21495:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21468:6:29"},"nodeType":"YulFunctionCall","src":"21468:30:29"},"nodeType":"YulExpressionStatement","src":"21468:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21518:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21529:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21514:3:29"},"nodeType":"YulFunctionCall","src":"21514:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"21534:34:29","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21507:6:29"},"nodeType":"YulFunctionCall","src":"21507:62:29"},"nodeType":"YulExpressionStatement","src":"21507:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21589:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21600:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21585:3:29"},"nodeType":"YulFunctionCall","src":"21585:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"21605:8:29","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21578:6:29"},"nodeType":"YulFunctionCall","src":"21578:36:29"},"nodeType":"YulExpressionStatement","src":"21578:36:29"},{"nodeType":"YulAssignment","src":"21623:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21635:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21646:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21631:3:29"},"nodeType":"YulFunctionCall","src":"21631:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21623:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21405:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21419:4:29","type":""}],"src":"21254:402:29"},{"body":{"nodeType":"YulBlock","src":"21835:173:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21852:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21863:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21845:6:29"},"nodeType":"YulFunctionCall","src":"21845:21:29"},"nodeType":"YulExpressionStatement","src":"21845:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21886:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21897:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21882:3:29"},"nodeType":"YulFunctionCall","src":"21882:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"21902:2:29","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21875:6:29"},"nodeType":"YulFunctionCall","src":"21875:30:29"},"nodeType":"YulExpressionStatement","src":"21875:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21925:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21936:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21921:3:29"},"nodeType":"YulFunctionCall","src":"21921:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"21941:25:29","type":"","value":"ERC1167: create2 failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21914:6:29"},"nodeType":"YulFunctionCall","src":"21914:53:29"},"nodeType":"YulExpressionStatement","src":"21914:53:29"},{"nodeType":"YulAssignment","src":"21976:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21988:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21999:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21984:3:29"},"nodeType":"YulFunctionCall","src":"21984:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21976:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21812:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21826:4:29","type":""}],"src":"21661:347:29"},{"body":{"nodeType":"YulBlock","src":"22187:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22204:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22215:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22197:6:29"},"nodeType":"YulFunctionCall","src":"22197:21:29"},"nodeType":"YulExpressionStatement","src":"22197:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22238:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22249:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22234:3:29"},"nodeType":"YulFunctionCall","src":"22234:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"22254:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22227:6:29"},"nodeType":"YulFunctionCall","src":"22227:30:29"},"nodeType":"YulExpressionStatement","src":"22227:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22277:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22288:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22273:3:29"},"nodeType":"YulFunctionCall","src":"22273:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"22293:34:29","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22266:6:29"},"nodeType":"YulFunctionCall","src":"22266:62:29"},"nodeType":"YulExpressionStatement","src":"22266:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22348:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22359:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22344:3:29"},"nodeType":"YulFunctionCall","src":"22344:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"22364:8:29","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22337:6:29"},"nodeType":"YulFunctionCall","src":"22337:36:29"},"nodeType":"YulExpressionStatement","src":"22337:36:29"},{"nodeType":"YulAssignment","src":"22382:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22394:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22405:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22390:3:29"},"nodeType":"YulFunctionCall","src":"22390:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22382:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22164:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22178:4:29","type":""}],"src":"22013:402:29"},{"body":{"nodeType":"YulBlock","src":"22594:170:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22611:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22622:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22604:6:29"},"nodeType":"YulFunctionCall","src":"22604:21:29"},"nodeType":"YulExpressionStatement","src":"22604:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22645:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22656:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22641:3:29"},"nodeType":"YulFunctionCall","src":"22641:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"22661:2:29","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22634:6:29"},"nodeType":"YulFunctionCall","src":"22634:30:29"},"nodeType":"YulExpressionStatement","src":"22634:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22684:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22695:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22680:3:29"},"nodeType":"YulFunctionCall","src":"22680:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"22700:22:29","type":"","value":"Unauthorized Access!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22673:6:29"},"nodeType":"YulFunctionCall","src":"22673:50:29"},"nodeType":"YulExpressionStatement","src":"22673:50:29"},{"nodeType":"YulAssignment","src":"22732:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22744:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22755:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22740:3:29"},"nodeType":"YulFunctionCall","src":"22740:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22732:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_760a1e64bec12b2abe45c38b6154155372bcdc8e8a725e7d20a01af9513a7e5a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22571:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22585:4:29","type":""}],"src":"22420:344:29"},{"body":{"nodeType":"YulBlock","src":"22943:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22960:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22971:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22953:6:29"},"nodeType":"YulFunctionCall","src":"22953:21:29"},"nodeType":"YulExpressionStatement","src":"22953:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22994:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23005:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22990:3:29"},"nodeType":"YulFunctionCall","src":"22990:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"23010:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22983:6:29"},"nodeType":"YulFunctionCall","src":"22983:30:29"},"nodeType":"YulExpressionStatement","src":"22983:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23033:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23044:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23029:3:29"},"nodeType":"YulFunctionCall","src":"23029:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"23049:34:29","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23022:6:29"},"nodeType":"YulFunctionCall","src":"23022:62:29"},"nodeType":"YulExpressionStatement","src":"23022:62:29"},{"nodeType":"YulAssignment","src":"23093:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23105:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23116:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23101:3:29"},"nodeType":"YulFunctionCall","src":"23101:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23093:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22920:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22934:4:29","type":""}],"src":"22769:356:29"},{"body":{"nodeType":"YulBlock","src":"23304:153:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23321:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23332:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23314:6:29"},"nodeType":"YulFunctionCall","src":"23314:21:29"},"nodeType":"YulExpressionStatement","src":"23314:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23355:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23366:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23351:3:29"},"nodeType":"YulFunctionCall","src":"23351:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"23371:1:29","type":"","value":"4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23344:6:29"},"nodeType":"YulFunctionCall","src":"23344:29:29"},"nodeType":"YulExpressionStatement","src":"23344:29:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23393:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23404:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23389:3:29"},"nodeType":"YulFunctionCall","src":"23389:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"23409:6:29","type":"","value":"E064"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23382:6:29"},"nodeType":"YulFunctionCall","src":"23382:34:29"},"nodeType":"YulExpressionStatement","src":"23382:34:29"},{"nodeType":"YulAssignment","src":"23425:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23437:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23448:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23433:3:29"},"nodeType":"YulFunctionCall","src":"23433:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23425:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab10996ac65df5c99a1fd43bc616cdf767a8e223f9df1cf8ebb449b799335032__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23281:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23295:4:29","type":""}],"src":"23130:327:29"},{"body":{"nodeType":"YulBlock","src":"23636:153:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23653:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23664:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23646:6:29"},"nodeType":"YulFunctionCall","src":"23646:21:29"},"nodeType":"YulExpressionStatement","src":"23646:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23687:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23698:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23683:3:29"},"nodeType":"YulFunctionCall","src":"23683:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"23703:1:29","type":"","value":"4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23676:6:29"},"nodeType":"YulFunctionCall","src":"23676:29:29"},"nodeType":"YulExpressionStatement","src":"23676:29:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23725:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23736:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23721:3:29"},"nodeType":"YulFunctionCall","src":"23721:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"23741:6:29","type":"","value":"E016"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23714:6:29"},"nodeType":"YulFunctionCall","src":"23714:34:29"},"nodeType":"YulExpressionStatement","src":"23714:34:29"},{"nodeType":"YulAssignment","src":"23757:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23769:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23780:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23765:3:29"},"nodeType":"YulFunctionCall","src":"23765:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23757:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c143d1811330319e6c2041c116672d668e927038b5ab21cc328926db9c9ddf0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23613:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23627:4:29","type":""}],"src":"23462:327:29"},{"body":{"nodeType":"YulBlock","src":"23968:179:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23985:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23996:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23978:6:29"},"nodeType":"YulFunctionCall","src":"23978:21:29"},"nodeType":"YulExpressionStatement","src":"23978:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24019:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24030:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24015:3:29"},"nodeType":"YulFunctionCall","src":"24015:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"24035:2:29","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24008:6:29"},"nodeType":"YulFunctionCall","src":"24008:30:29"},"nodeType":"YulExpressionStatement","src":"24008:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24058:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24069:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24054:3:29"},"nodeType":"YulFunctionCall","src":"24054:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"24074:31:29","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24047:6:29"},"nodeType":"YulFunctionCall","src":"24047:59:29"},"nodeType":"YulExpressionStatement","src":"24047:59:29"},{"nodeType":"YulAssignment","src":"24115:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24127:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24138:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24123:3:29"},"nodeType":"YulFunctionCall","src":"24123:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24115:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23945:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23959:4:29","type":""}],"src":"23794:353:29"},{"body":{"nodeType":"YulBlock","src":"24326:232:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24343:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24354:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24336:6:29"},"nodeType":"YulFunctionCall","src":"24336:21:29"},"nodeType":"YulExpressionStatement","src":"24336:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24377:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24388:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24373:3:29"},"nodeType":"YulFunctionCall","src":"24373:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"24393:2:29","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24366:6:29"},"nodeType":"YulFunctionCall","src":"24366:30:29"},"nodeType":"YulExpressionStatement","src":"24366:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24427:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24412:3:29"},"nodeType":"YulFunctionCall","src":"24412:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"24432:34:29","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24405:6:29"},"nodeType":"YulFunctionCall","src":"24405:62:29"},"nodeType":"YulExpressionStatement","src":"24405:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24487:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24498:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24483:3:29"},"nodeType":"YulFunctionCall","src":"24483:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"24503:12:29","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24476:6:29"},"nodeType":"YulFunctionCall","src":"24476:40:29"},"nodeType":"YulExpressionStatement","src":"24476:40:29"},{"nodeType":"YulAssignment","src":"24525:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24537:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24548:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24533:3:29"},"nodeType":"YulFunctionCall","src":"24533:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24525:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24303:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24317:4:29","type":""}],"src":"24152:406:29"},{"body":{"nodeType":"YulBlock","src":"24737:171:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24754:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24765:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24747:6:29"},"nodeType":"YulFunctionCall","src":"24747:21:29"},"nodeType":"YulExpressionStatement","src":"24747:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24788:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24799:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24784:3:29"},"nodeType":"YulFunctionCall","src":"24784:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"24804:2:29","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24777:6:29"},"nodeType":"YulFunctionCall","src":"24777:30:29"},"nodeType":"YulExpressionStatement","src":"24777:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24827:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24838:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24823:3:29"},"nodeType":"YulFunctionCall","src":"24823:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"24843:23:29","type":"","value":"Max lockup is 2 years"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24816:6:29"},"nodeType":"YulFunctionCall","src":"24816:51:29"},"nodeType":"YulExpressionStatement","src":"24816:51:29"},{"nodeType":"YulAssignment","src":"24876:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24888:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24899:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24884:3:29"},"nodeType":"YulFunctionCall","src":"24884:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24876:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed67044774f9d6b6cd164d216a6fee68661b2692aca050db9e926e6ea760f87a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24714:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24728:4:29","type":""}],"src":"24563:345:29"},{"body":{"nodeType":"YulBlock","src":"25014:76:29","statements":[{"nodeType":"YulAssignment","src":"25024:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25036:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25047:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25032:3:29"},"nodeType":"YulFunctionCall","src":"25032:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25024:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25066:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"25077:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25059:6:29"},"nodeType":"YulFunctionCall","src":"25059:25:29"},"nodeType":"YulExpressionStatement","src":"25059:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24983:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24994:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25005:4:29","type":""}],"src":"24913:177:29"},{"body":{"nodeType":"YulBlock","src":"25436:1107:29","statements":[{"nodeType":"YulVariableDeclaration","src":"25446:13:29","value":{"kind":"number","nodeType":"YulLiteral","src":"25456:3:29","type":"","value":"384"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"25450:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25468:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25486:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"25497:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25482:3:29"},"nodeType":"YulFunctionCall","src":"25482:18:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"25472:6:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25516:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"25527:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25509:6:29"},"nodeType":"YulFunctionCall","src":"25509:25:29"},"nodeType":"YulExpressionStatement","src":"25509:25:29"},{"nodeType":"YulVariableDeclaration","src":"25543:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"25553:2:29","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"25547:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25575:9:29"},{"name":"_2","nodeType":"YulIdentifier","src":"25586:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25571:3:29"},"nodeType":"YulFunctionCall","src":"25571:18:29"},{"name":"_1","nodeType":"YulIdentifier","src":"25591:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25564:6:29"},"nodeType":"YulFunctionCall","src":"25564:30:29"},"nodeType":"YulExpressionStatement","src":"25564:30:29"},{"nodeType":"YulVariableDeclaration","src":"25603:17:29","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"25614:6:29"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"25607:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25629:27:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25649:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25643:5:29"},"nodeType":"YulFunctionCall","src":"25643:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25633:6:29","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"25672:6:29"},{"name":"length","nodeType":"YulIdentifier","src":"25680:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25665:6:29"},"nodeType":"YulFunctionCall","src":"25665:22:29"},"nodeType":"YulExpressionStatement","src":"25665:22:29"},{"nodeType":"YulAssignment","src":"25696:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25707:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25718:3:29","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25703:3:29"},"nodeType":"YulFunctionCall","src":"25703:19:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25696:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"25731:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25749:6:29"},{"name":"_2","nodeType":"YulIdentifier","src":"25757:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25745:3:29"},"nodeType":"YulFunctionCall","src":"25745:15:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"25735:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25769:13:29","value":{"name":"tail","nodeType":"YulIdentifier","src":"25778:4:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25773:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"25840:169:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25861:3:29"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25876:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25870:5:29"},"nodeType":"YulFunctionCall","src":"25870:13:29"},{"kind":"number","nodeType":"YulLiteral","src":"25885:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25866:3:29"},"nodeType":"YulFunctionCall","src":"25866:62:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25854:6:29"},"nodeType":"YulFunctionCall","src":"25854:75:29"},"nodeType":"YulExpressionStatement","src":"25854:75:29"},{"nodeType":"YulAssignment","src":"25942:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25953:3:29"},{"name":"_2","nodeType":"YulIdentifier","src":"25958:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25949:3:29"},"nodeType":"YulFunctionCall","src":"25949:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25942:3:29"}]},{"nodeType":"YulAssignment","src":"25974:25:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25988:6:29"},{"name":"_2","nodeType":"YulIdentifier","src":"25996:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25984:3:29"},"nodeType":"YulFunctionCall","src":"25984:15:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25974:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25802:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"25805:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25799:2:29"},"nodeType":"YulFunctionCall","src":"25799:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25813:18:29","statements":[{"nodeType":"YulAssignment","src":"25815:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25824:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"25827:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25820:3:29"},"nodeType":"YulFunctionCall","src":"25820:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25815:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"25795:3:29","statements":[]},"src":"25791:218:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26029:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26040:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26025:3:29"},"nodeType":"YulFunctionCall","src":"26025:18:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26049:3:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"26054:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26045:3:29"},"nodeType":"YulFunctionCall","src":"26045:19:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26018:6:29"},"nodeType":"YulFunctionCall","src":"26018:47:29"},"nodeType":"YulExpressionStatement","src":"26018:47:29"},{"nodeType":"YulVariableDeclaration","src":"26074:16:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"26087:3:29"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"26078:5:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"26099:29:29","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26121:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26115:5:29"},"nodeType":"YulFunctionCall","src":"26115:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"26103:8:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26144:3:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"26149:8:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26137:6:29"},"nodeType":"YulFunctionCall","src":"26137:21:29"},"nodeType":"YulExpressionStatement","src":"26137:21:29"},{"nodeType":"YulAssignment","src":"26167:21:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26180:3:29"},{"name":"_2","nodeType":"YulIdentifier","src":"26185:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26176:3:29"},"nodeType":"YulFunctionCall","src":"26176:12:29"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"26167:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"26197:31:29","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26217:6:29"},{"name":"_2","nodeType":"YulIdentifier","src":"26225:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26213:3:29"},"nodeType":"YulFunctionCall","src":"26213:15:29"},"variables":[{"name":"srcPtr_1","nodeType":"YulTypedName","src":"26201:8:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"26237:15:29","value":{"name":"tail","nodeType":"YulIdentifier","src":"26248:4:29"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"26241:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"26318:132:29","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"26339:5:29"},{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"26352:8:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26346:5:29"},"nodeType":"YulFunctionCall","src":"26346:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26332:6:29"},"nodeType":"YulFunctionCall","src":"26332:30:29"},"nodeType":"YulExpressionStatement","src":"26332:30:29"},{"nodeType":"YulAssignment","src":"26375:23:29","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"26388:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"26395:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26384:3:29"},"nodeType":"YulFunctionCall","src":"26384:14:29"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"26375:5:29"}]},{"nodeType":"YulAssignment","src":"26411:29:29","value":{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"26427:8:29"},{"name":"_2","nodeType":"YulIdentifier","src":"26437:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26423:3:29"},"nodeType":"YulFunctionCall","src":"26423:17:29"},"variableNames":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"26411:8:29"}]}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"26272:3:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"26277:8:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26269:2:29"},"nodeType":"YulFunctionCall","src":"26269:17:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"26287:22:29","statements":[{"nodeType":"YulAssignment","src":"26289:18:29","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"26300:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"26305:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26296:3:29"},"nodeType":"YulFunctionCall","src":"26296:11:29"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"26289:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"26265:3:29","statements":[]},"src":"26261:189:29"},{"nodeType":"YulAssignment","src":"26459:13:29","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"26467:5:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26459:4:29"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26510:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26522:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26533:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26518:3:29"},"nodeType":"YulFunctionCall","src":"26518:18:29"}],"functionName":{"name":"abi_encode_struct_FNFTConfig","nodeType":"YulIdentifier","src":"26481:28:29"},"nodeType":"YulFunctionCall","src":"26481:56:29"},"nodeType":"YulExpressionStatement","src":"26481:56:29"}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_struct$_FNFTConfig_$3776_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_struct$_FNFTConfig_$3776_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25381:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25392:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25400:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25408:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25416:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25427:4:29","type":""}],"src":"25095:1448:29"},{"body":{"nodeType":"YulBlock","src":"26705:211:29","statements":[{"nodeType":"YulAssignment","src":"26715:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26727:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26738:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26723:3:29"},"nodeType":"YulFunctionCall","src":"26723:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26715:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26757:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"26768:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26750:6:29"},"nodeType":"YulFunctionCall","src":"26750:25:29"},"nodeType":"YulExpressionStatement","src":"26750:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26795:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26806:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26791:3:29"},"nodeType":"YulFunctionCall","src":"26791:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"26811:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26784:6:29"},"nodeType":"YulFunctionCall","src":"26784:34:29"},"nodeType":"YulExpressionStatement","src":"26784:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26838:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26849:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26834:3:29"},"nodeType":"YulFunctionCall","src":"26834:18:29"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26858:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"26866:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26854:3:29"},"nodeType":"YulFunctionCall","src":"26854:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26827:6:29"},"nodeType":"YulFunctionCall","src":"26827:83:29"},"nodeType":"YulExpressionStatement","src":"26827:83:29"}]},"name":"abi_encode_tuple_t_uint256_t_bytes32_t_address__to_t_uint256_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26658:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26669:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26677:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26685:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26696:4:29","type":""}],"src":"26548:368:29"},{"body":{"nodeType":"YulBlock","src":"27068:141:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27085:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"27096:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27078:6:29"},"nodeType":"YulFunctionCall","src":"27078:25:29"},"nodeType":"YulExpressionStatement","src":"27078:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27123:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27134:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27119:3:29"},"nodeType":"YulFunctionCall","src":"27119:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"27139:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27112:6:29"},"nodeType":"YulFunctionCall","src":"27112:30:29"},"nodeType":"YulExpressionStatement","src":"27112:30:29"},{"nodeType":"YulAssignment","src":"27151:52:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27176:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27188:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27199:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27184:3:29"},"nodeType":"YulFunctionCall","src":"27184:18:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"27159:16:29"},"nodeType":"YulFunctionCall","src":"27159:44:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27151:4:29"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27029:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27040:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27048:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27059:4:29","type":""}],"src":"26921:288:29"},{"body":{"nodeType":"YulBlock","src":"27371:211:29","statements":[{"nodeType":"YulAssignment","src":"27381:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27393:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27404:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27389:3:29"},"nodeType":"YulFunctionCall","src":"27389:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27381:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27423:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"27434:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27416:6:29"},"nodeType":"YulFunctionCall","src":"27416:25:29"},"nodeType":"YulExpressionStatement","src":"27416:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27461:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27472:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27457:3:29"},"nodeType":"YulFunctionCall","src":"27457:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"27477:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27450:6:29"},"nodeType":"YulFunctionCall","src":"27450:34:29"},"nodeType":"YulExpressionStatement","src":"27450:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27504:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27515:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27500:3:29"},"nodeType":"YulFunctionCall","src":"27500:18:29"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27524:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"27532:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27520:3:29"},"nodeType":"YulFunctionCall","src":"27520:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27493:6:29"},"nodeType":"YulFunctionCall","src":"27493:83:29"},"nodeType":"YulExpressionStatement","src":"27493:83:29"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27324:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27335:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27343:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27351:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27362:4:29","type":""}],"src":"27214:368:29"},{"body":{"nodeType":"YulBlock","src":"27633:209:29","statements":[{"nodeType":"YulAssignment","src":"27643:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27659:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27653:5:29"},"nodeType":"YulFunctionCall","src":"27653:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27643:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"27671:37:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27693:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"27701:6:29","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27689:3:29"},"nodeType":"YulFunctionCall","src":"27689:19:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"27675:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"27783:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"27785:16:29"},"nodeType":"YulFunctionCall","src":"27785:18:29"},"nodeType":"YulExpressionStatement","src":"27785:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"27726:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"27738:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27723:2:29"},"nodeType":"YulFunctionCall","src":"27723:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"27762:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"27774:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27759:2:29"},"nodeType":"YulFunctionCall","src":"27759:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27720:2:29"},"nodeType":"YulFunctionCall","src":"27720:62:29"},"nodeType":"YulIf","src":"27717:2:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27821:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"27825:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27814:6:29"},"nodeType":"YulFunctionCall","src":"27814:22:29"},"nodeType":"YulExpressionStatement","src":"27814:22:29"}]},"name":"allocate_memory_5031","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"27622:6:29","type":""}],"src":"27587:255:29"},{"body":{"nodeType":"YulBlock","src":"27892:289:29","statements":[{"nodeType":"YulAssignment","src":"27902:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27918:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27912:5:29"},"nodeType":"YulFunctionCall","src":"27912:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27902:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"27930:117:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27952:6:29"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"27968:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"27974:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27964:3:29"},"nodeType":"YulFunctionCall","src":"27964:13:29"},{"kind":"number","nodeType":"YulLiteral","src":"27979:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27960:3:29"},"nodeType":"YulFunctionCall","src":"27960:86:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27948:3:29"},"nodeType":"YulFunctionCall","src":"27948:99:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"27934:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"28122:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28124:16:29"},"nodeType":"YulFunctionCall","src":"28124:18:29"},"nodeType":"YulExpressionStatement","src":"28124:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"28065:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"28077:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28062:2:29"},"nodeType":"YulFunctionCall","src":"28062:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"28101:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"28113:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28098:2:29"},"nodeType":"YulFunctionCall","src":"28098:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28059:2:29"},"nodeType":"YulFunctionCall","src":"28059:62:29"},"nodeType":"YulIf","src":"28056:2:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28160:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"28164:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28153:6:29"},"nodeType":"YulFunctionCall","src":"28153:22:29"},"nodeType":"YulExpressionStatement","src":"28153:22:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"27872:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"27881:6:29","type":""}],"src":"27847:334:29"},{"body":{"nodeType":"YulBlock","src":"28255:114:29","statements":[{"body":{"nodeType":"YulBlock","src":"28299:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28301:16:29"},"nodeType":"YulFunctionCall","src":"28301:18:29"},"nodeType":"YulExpressionStatement","src":"28301:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28271:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28279:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28268:2:29"},"nodeType":"YulFunctionCall","src":"28268:30:29"},"nodeType":"YulIf","src":"28265:2:29"},{"nodeType":"YulAssignment","src":"28330:33:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28346:1:29","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"28349:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28342:3:29"},"nodeType":"YulFunctionCall","src":"28342:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"28358:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28338:3:29"},"nodeType":"YulFunctionCall","src":"28338:25:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"28330:4:29"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"28235:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"28246:4:29","type":""}],"src":"28186:183:29"},{"body":{"nodeType":"YulBlock","src":"28431:188:29","statements":[{"body":{"nodeType":"YulBlock","src":"28475:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28477:16:29"},"nodeType":"YulFunctionCall","src":"28477:18:29"},"nodeType":"YulExpressionStatement","src":"28477:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28447:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28455:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28444:2:29"},"nodeType":"YulFunctionCall","src":"28444:30:29"},"nodeType":"YulIf","src":"28441:2:29"},{"nodeType":"YulAssignment","src":"28506:107:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28526:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28534:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28522:3:29"},"nodeType":"YulFunctionCall","src":"28522:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"28539:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28518:3:29"},"nodeType":"YulFunctionCall","src":"28518:88:29"},{"kind":"number","nodeType":"YulLiteral","src":"28608:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28514:3:29"},"nodeType":"YulFunctionCall","src":"28514:99:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"28506:4:29"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"28411:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"28422:4:29","type":""}],"src":"28374:245:29"},{"body":{"nodeType":"YulBlock","src":"28672:80:29","statements":[{"body":{"nodeType":"YulBlock","src":"28699:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28701:16:29"},"nodeType":"YulFunctionCall","src":"28701:18:29"},"nodeType":"YulExpressionStatement","src":"28701:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28688:1:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28695:1:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28691:3:29"},"nodeType":"YulFunctionCall","src":"28691:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28685:2:29"},"nodeType":"YulFunctionCall","src":"28685:13:29"},"nodeType":"YulIf","src":"28682:2:29"},{"nodeType":"YulAssignment","src":"28730:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28741:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"28744:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28737:3:29"},"nodeType":"YulFunctionCall","src":"28737:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"28730:3:29"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28655:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"28658:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28664:3:29","type":""}],"src":"28624:128:29"},{"body":{"nodeType":"YulBlock","src":"28803:158:29","statements":[{"nodeType":"YulVariableDeclaration","src":"28813:23:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28828:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"28831:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28824:3:29"},"nodeType":"YulFunctionCall","src":"28824:12:29"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"28817:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28845:23:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28860:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"28863:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28856:3:29"},"nodeType":"YulFunctionCall","src":"28856:12:29"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"28849:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"28904:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28906:16:29"},"nodeType":"YulFunctionCall","src":"28906:18:29"},"nodeType":"YulExpressionStatement","src":"28906:18:29"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"28883:3:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28892:4:29","type":"","value":"0xff"},{"name":"y_1","nodeType":"YulIdentifier","src":"28898:3:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28888:3:29"},"nodeType":"YulFunctionCall","src":"28888:14:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28880:2:29"},"nodeType":"YulFunctionCall","src":"28880:23:29"},"nodeType":"YulIf","src":"28877:2:29"},{"nodeType":"YulAssignment","src":"28935:20:29","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"28946:3:29"},{"name":"y_1","nodeType":"YulIdentifier","src":"28951:3:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28942:3:29"},"nodeType":"YulFunctionCall","src":"28942:13:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"28935:3:29"}]}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28786:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"28789:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28795:3:29","type":""}],"src":"28757:204:29"},{"body":{"nodeType":"YulBlock","src":"29012:74:29","statements":[{"body":{"nodeType":"YulBlock","src":"29035:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"29037:16:29"},"nodeType":"YulFunctionCall","src":"29037:18:29"},"nodeType":"YulExpressionStatement","src":"29037:18:29"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29032:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29025:6:29"},"nodeType":"YulFunctionCall","src":"29025:9:29"},"nodeType":"YulIf","src":"29022:2:29"},{"nodeType":"YulAssignment","src":"29066:14:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29075:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"29078:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29071:3:29"},"nodeType":"YulFunctionCall","src":"29071:9:29"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"29066:1:29"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28997:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"29000:1:29","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"29006:1:29","type":""}],"src":"28966:120:29"},{"body":{"nodeType":"YulBlock","src":"29155:418:29","statements":[{"nodeType":"YulVariableDeclaration","src":"29165:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"29180:1:29","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"29169:7:29","type":""}]},{"nodeType":"YulAssignment","src":"29190:16:29","value":{"name":"power_1","nodeType":"YulIdentifier","src":"29199:7:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"29190:5:29"}]},{"nodeType":"YulAssignment","src":"29215:13:29","value":{"name":"_base","nodeType":"YulIdentifier","src":"29223:5:29"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"29215:4:29"}]},{"body":{"nodeType":"YulBlock","src":"29279:288:29","statements":[{"body":{"nodeType":"YulBlock","src":"29384:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29386:16:29"},"nodeType":"YulFunctionCall","src":"29386:18:29"},"nodeType":"YulExpressionStatement","src":"29386:18:29"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"29299:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29309:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base","nodeType":"YulIdentifier","src":"29377:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29305:3:29"},"nodeType":"YulFunctionCall","src":"29305:77:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29296:2:29"},"nodeType":"YulFunctionCall","src":"29296:87:29"},"nodeType":"YulIf","src":"29293:2:29"},{"body":{"nodeType":"YulBlock","src":"29445:29:29","statements":[{"nodeType":"YulAssignment","src":"29447:25:29","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"29460:5:29"},{"name":"base","nodeType":"YulIdentifier","src":"29467:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29456:3:29"},"nodeType":"YulFunctionCall","src":"29456:16:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"29447:5:29"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"29426:8:29"},{"name":"power_1","nodeType":"YulIdentifier","src":"29436:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29422:3:29"},"nodeType":"YulFunctionCall","src":"29422:22:29"},"nodeType":"YulIf","src":"29419:2:29"},{"nodeType":"YulAssignment","src":"29487:23:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"29499:4:29"},{"name":"base","nodeType":"YulIdentifier","src":"29505:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29495:3:29"},"nodeType":"YulFunctionCall","src":"29495:15:29"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"29487:4:29"}]},{"nodeType":"YulAssignment","src":"29523:34:29","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"29539:7:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"29548:8:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"29535:3:29"},"nodeType":"YulFunctionCall","src":"29535:22:29"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"29523:8:29"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"29248:8:29"},{"name":"power_1","nodeType":"YulIdentifier","src":"29258:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29245:2:29"},"nodeType":"YulFunctionCall","src":"29245:21:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29267:3:29","statements":[]},"pre":{"nodeType":"YulBlock","src":"29241:3:29","statements":[]},"src":"29237:330:29"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"29119:5:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"29126:8:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"29139:5:29","type":""},{"name":"base","nodeType":"YulTypedName","src":"29146:4:29","type":""}],"src":"29091:482:29"},{"body":{"nodeType":"YulBlock","src":"29646:72:29","statements":[{"nodeType":"YulAssignment","src":"29656:56:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"29686:4:29"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"29696:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"29706:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29692:3:29"},"nodeType":"YulFunctionCall","src":"29692:19:29"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"29665:20:29"},"nodeType":"YulFunctionCall","src":"29665:47:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"29656:5:29"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"29617:4:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"29623:8:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"29636:5:29","type":""}],"src":"29578:140:29"},{"body":{"nodeType":"YulBlock","src":"29782:807:29","statements":[{"body":{"nodeType":"YulBlock","src":"29820:52:29","statements":[{"nodeType":"YulAssignment","src":"29834:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"29843:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"29834:5:29"}]},{"nodeType":"YulLeave","src":"29857:5:29"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"29802:8:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29795:6:29"},"nodeType":"YulFunctionCall","src":"29795:16:29"},"nodeType":"YulIf","src":"29792:2:29"},{"body":{"nodeType":"YulBlock","src":"29905:52:29","statements":[{"nodeType":"YulAssignment","src":"29919:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"29928:1:29","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"29919:5:29"}]},{"nodeType":"YulLeave","src":"29942:5:29"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"29891:4:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29884:6:29"},"nodeType":"YulFunctionCall","src":"29884:12:29"},"nodeType":"YulIf","src":"29881:2:29"},{"cases":[{"body":{"nodeType":"YulBlock","src":"29993:52:29","statements":[{"nodeType":"YulAssignment","src":"30007:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"30016:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"30007:5:29"}]},{"nodeType":"YulLeave","src":"30030:5:29"}]},"nodeType":"YulCase","src":"29986:59:29","value":{"kind":"number","nodeType":"YulLiteral","src":"29991:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"30061:123:29","statements":[{"body":{"nodeType":"YulBlock","src":"30096:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30098:16:29"},"nodeType":"YulFunctionCall","src":"30098:18:29"},"nodeType":"YulExpressionStatement","src":"30098:18:29"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"30081:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"30091:3:29","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30078:2:29"},"nodeType":"YulFunctionCall","src":"30078:17:29"},"nodeType":"YulIf","src":"30075:2:29"},{"nodeType":"YulAssignment","src":"30131:25:29","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"30144:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"30154:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30140:3:29"},"nodeType":"YulFunctionCall","src":"30140:16:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"30131:5:29"}]},{"nodeType":"YulLeave","src":"30169:5:29"}]},"nodeType":"YulCase","src":"30054:130:29","value":{"kind":"number","nodeType":"YulLiteral","src":"30059:1:29","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"29973:4:29"},"nodeType":"YulSwitch","src":"29966:218:29"},{"body":{"nodeType":"YulBlock","src":"30282:70:29","statements":[{"nodeType":"YulAssignment","src":"30296:28:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"30309:4:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"30315:8:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"30305:3:29"},"nodeType":"YulFunctionCall","src":"30305:19:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"30296:5:29"}]},{"nodeType":"YulLeave","src":"30337:5:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"30206:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"30212:2:29","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30203:2:29"},"nodeType":"YulFunctionCall","src":"30203:12:29"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"30220:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"30230:2:29","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30217:2:29"},"nodeType":"YulFunctionCall","src":"30217:16:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30199:3:29"},"nodeType":"YulFunctionCall","src":"30199:35:29"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"30243:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"30249:3:29","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30240:2:29"},"nodeType":"YulFunctionCall","src":"30240:13:29"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"30258:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"30268:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30255:2:29"},"nodeType":"YulFunctionCall","src":"30255:16:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30236:3:29"},"nodeType":"YulFunctionCall","src":"30236:36:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30196:2:29"},"nodeType":"YulFunctionCall","src":"30196:77:29"},"nodeType":"YulIf","src":"30193:2:29"},{"nodeType":"YulVariableDeclaration","src":"30361:57:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"30403:4:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"30409:8:29"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"30384:18:29"},"nodeType":"YulFunctionCall","src":"30384:34:29"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"30365:7:29","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"30374:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"30523:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30525:16:29"},"nodeType":"YulFunctionCall","src":"30525:18:29"},"nodeType":"YulExpressionStatement","src":"30525:18:29"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"30433:7:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30446:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base_1","nodeType":"YulIdentifier","src":"30514:6:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"30442:3:29"},"nodeType":"YulFunctionCall","src":"30442:79:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30430:2:29"},"nodeType":"YulFunctionCall","src":"30430:92:29"},"nodeType":"YulIf","src":"30427:2:29"},{"nodeType":"YulAssignment","src":"30554:29:29","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"30567:7:29"},{"name":"base_1","nodeType":"YulIdentifier","src":"30576:6:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30563:3:29"},"nodeType":"YulFunctionCall","src":"30563:20:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"30554:5:29"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"29753:4:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"29759:8:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"29772:5:29","type":""}],"src":"29723:866:29"},{"body":{"nodeType":"YulBlock","src":"30646:176:29","statements":[{"body":{"nodeType":"YulBlock","src":"30765:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30767:16:29"},"nodeType":"YulFunctionCall","src":"30767:18:29"},"nodeType":"YulExpressionStatement","src":"30767:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30677:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30670:6:29"},"nodeType":"YulFunctionCall","src":"30670:9:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30663:6:29"},"nodeType":"YulFunctionCall","src":"30663:17:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30685:1:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30692:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"30760:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"30688:3:29"},"nodeType":"YulFunctionCall","src":"30688:74:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30682:2:29"},"nodeType":"YulFunctionCall","src":"30682:81:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30659:3:29"},"nodeType":"YulFunctionCall","src":"30659:105:29"},"nodeType":"YulIf","src":"30656:2:29"},{"nodeType":"YulAssignment","src":"30796:20:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30811:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"30814:1:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30807:3:29"},"nodeType":"YulFunctionCall","src":"30807:9:29"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"30796:7:29"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30625:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"30628:1:29","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"30634:7:29","type":""}],"src":"30594:228:29"},{"body":{"nodeType":"YulBlock","src":"30876:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"30898:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30900:16:29"},"nodeType":"YulFunctionCall","src":"30900:18:29"},"nodeType":"YulExpressionStatement","src":"30900:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30892:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"30895:1:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30889:2:29"},"nodeType":"YulFunctionCall","src":"30889:8:29"},"nodeType":"YulIf","src":"30886:2:29"},{"nodeType":"YulAssignment","src":"30929:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30941:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"30944:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30937:3:29"},"nodeType":"YulFunctionCall","src":"30937:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"30929:4:29"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30858:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"30861:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"30867:4:29","type":""}],"src":"30827:125:29"},{"body":{"nodeType":"YulBlock","src":"31004:148:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31014:23:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31029:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"31032:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31025:3:29"},"nodeType":"YulFunctionCall","src":"31025:12:29"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"31018:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31046:23:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"31061:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"31064:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31057:3:29"},"nodeType":"YulFunctionCall","src":"31057:12:29"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"31050:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"31094:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31096:16:29"},"nodeType":"YulFunctionCall","src":"31096:18:29"},"nodeType":"YulExpressionStatement","src":"31096:18:29"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"31084:3:29"},{"name":"y_1","nodeType":"YulIdentifier","src":"31089:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31081:2:29"},"nodeType":"YulFunctionCall","src":"31081:12:29"},"nodeType":"YulIf","src":"31078:2:29"},{"nodeType":"YulAssignment","src":"31125:21:29","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"31137:3:29"},{"name":"y_1","nodeType":"YulIdentifier","src":"31142:3:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31133:3:29"},"nodeType":"YulFunctionCall","src":"31133:13:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"31125:4:29"}]}]},"name":"checked_sub_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30986:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"30989:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"30995:4:29","type":""}],"src":"30957:195:29"},{"body":{"nodeType":"YulBlock","src":"31210:205:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31220:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31229:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31224:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"31289:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"31314:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"31319:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31310:3:29"},"nodeType":"YulFunctionCall","src":"31310:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31333:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"31338:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31329:3:29"},"nodeType":"YulFunctionCall","src":"31329:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31323:5:29"},"nodeType":"YulFunctionCall","src":"31323:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31303:6:29"},"nodeType":"YulFunctionCall","src":"31303:39:29"},"nodeType":"YulExpressionStatement","src":"31303:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31250:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"31253:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31247:2:29"},"nodeType":"YulFunctionCall","src":"31247:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31261:19:29","statements":[{"nodeType":"YulAssignment","src":"31263:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31272:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"31275:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31268:3:29"},"nodeType":"YulFunctionCall","src":"31268:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31263:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"31243:3:29","statements":[]},"src":"31239:113:29"},{"body":{"nodeType":"YulBlock","src":"31378:31:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"31391:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"31396:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31387:3:29"},"nodeType":"YulFunctionCall","src":"31387:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"31405:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31380:6:29"},"nodeType":"YulFunctionCall","src":"31380:27:29"},"nodeType":"YulExpressionStatement","src":"31380:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31367:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"31370:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31364:2:29"},"nodeType":"YulFunctionCall","src":"31364:13:29"},"nodeType":"YulIf","src":"31361:2:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"31188:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"31193:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"31198:6:29","type":""}],"src":"31157:258:29"},{"body":{"nodeType":"YulBlock","src":"31465:193:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31475:31:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31494:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"31501:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31490:3:29"},"nodeType":"YulFunctionCall","src":"31490:16:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"31479:7:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"31534:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31536:16:29"},"nodeType":"YulFunctionCall","src":"31536:18:29"},"nodeType":"YulExpressionStatement","src":"31536:18:29"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"31525:7:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31518:6:29"},"nodeType":"YulFunctionCall","src":"31518:15:29"},"nodeType":"YulIf","src":"31515:2:29"},{"nodeType":"YulAssignment","src":"31565:87:29","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"31576:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"31585:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31572:3:29"},"nodeType":"YulFunctionCall","src":"31572:80:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31565:3:29"}]}]},"name":"decrement_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31447:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31457:3:29","type":""}],"src":"31420:238:29"},{"body":{"nodeType":"YulBlock","src":"31718:382:29","statements":[{"nodeType":"YulAssignment","src":"31728:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31742:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"31745:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"31738:3:29"},"nodeType":"YulFunctionCall","src":"31738:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31728:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"31759:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31789:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"31795:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31785:3:29"},"nodeType":"YulFunctionCall","src":"31785:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"31763:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"31836:31:29","statements":[{"nodeType":"YulAssignment","src":"31838:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31852:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"31860:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31848:3:29"},"nodeType":"YulFunctionCall","src":"31848:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31838:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"31816:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31809:6:29"},"nodeType":"YulFunctionCall","src":"31809:26:29"},"nodeType":"YulIf","src":"31806:2:29"},{"body":{"nodeType":"YulBlock","src":"31926:168:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31947:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31950:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31940:6:29"},"nodeType":"YulFunctionCall","src":"31940:88:29"},"nodeType":"YulExpressionStatement","src":"31940:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32048:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32051:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32041:6:29"},"nodeType":"YulFunctionCall","src":"32041:15:29"},"nodeType":"YulExpressionStatement","src":"32041:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32076:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32079:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32069:6:29"},"nodeType":"YulFunctionCall","src":"32069:15:29"},"nodeType":"YulExpressionStatement","src":"32069:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"31882:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31905:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"31913:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31902:2:29"},"nodeType":"YulFunctionCall","src":"31902:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31879:2:29"},"nodeType":"YulFunctionCall","src":"31879:38:29"},"nodeType":"YulIf","src":"31876:2:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"31698:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"31707:6:29","type":""}],"src":"31663:437:29"},{"body":{"nodeType":"YulBlock","src":"32152:148:29","statements":[{"body":{"nodeType":"YulBlock","src":"32243:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32245:16:29"},"nodeType":"YulFunctionCall","src":"32245:18:29"},"nodeType":"YulExpressionStatement","src":"32245:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32168:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"32175:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32165:2:29"},"nodeType":"YulFunctionCall","src":"32165:77:29"},"nodeType":"YulIf","src":"32162:2:29"},{"nodeType":"YulAssignment","src":"32274:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32285:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"32292:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32281:3:29"},"nodeType":"YulFunctionCall","src":"32281:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32274:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32134:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32144:3:29","type":""}],"src":"32105:195:29"},{"body":{"nodeType":"YulBlock","src":"32350:130:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32360:31:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32379:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"32386:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32375:3:29"},"nodeType":"YulFunctionCall","src":"32375:16:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"32364:7:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32421:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32423:16:29"},"nodeType":"YulFunctionCall","src":"32423:18:29"},"nodeType":"YulExpressionStatement","src":"32423:18:29"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"32406:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"32415:4:29","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32403:2:29"},"nodeType":"YulFunctionCall","src":"32403:17:29"},"nodeType":"YulIf","src":"32400:2:29"},{"nodeType":"YulAssignment","src":"32452:22:29","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"32463:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"32472:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32459:3:29"},"nodeType":"YulFunctionCall","src":"32459:15:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32452:3:29"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32332:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32342:3:29","type":""}],"src":"32305:175:29"},{"body":{"nodeType":"YulBlock","src":"32523:74:29","statements":[{"body":{"nodeType":"YulBlock","src":"32546:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"32548:16:29"},"nodeType":"YulFunctionCall","src":"32548:18:29"},"nodeType":"YulExpressionStatement","src":"32548:18:29"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32543:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32536:6:29"},"nodeType":"YulFunctionCall","src":"32536:9:29"},"nodeType":"YulIf","src":"32533:2:29"},{"nodeType":"YulAssignment","src":"32577:14:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32586:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"32589:1:29"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"32582:3:29"},"nodeType":"YulFunctionCall","src":"32582:9:29"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"32577:1:29"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32508:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"32511:1:29","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"32517:1:29","type":""}],"src":"32485:112:29"},{"body":{"nodeType":"YulBlock","src":"32634:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32651:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32654:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32644:6:29"},"nodeType":"YulFunctionCall","src":"32644:88:29"},"nodeType":"YulExpressionStatement","src":"32644:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32748:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32751:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32741:6:29"},"nodeType":"YulFunctionCall","src":"32741:15:29"},"nodeType":"YulExpressionStatement","src":"32741:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32772:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32775:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32765:6:29"},"nodeType":"YulFunctionCall","src":"32765:15:29"},"nodeType":"YulExpressionStatement","src":"32765:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"32602:184:29"},{"body":{"nodeType":"YulBlock","src":"32823:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32840:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32843:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32833:6:29"},"nodeType":"YulFunctionCall","src":"32833:88:29"},"nodeType":"YulExpressionStatement","src":"32833:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32937:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32940:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32930:6:29"},"nodeType":"YulFunctionCall","src":"32930:15:29"},"nodeType":"YulExpressionStatement","src":"32930:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32961:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32964:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32954:6:29"},"nodeType":"YulFunctionCall","src":"32954:15:29"},"nodeType":"YulExpressionStatement","src":"32954:15:29"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"32791:184:29"},{"body":{"nodeType":"YulBlock","src":"33012:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33029:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33032:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33022:6:29"},"nodeType":"YulFunctionCall","src":"33022:88:29"},"nodeType":"YulExpressionStatement","src":"33022:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33126:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33129:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33119:6:29"},"nodeType":"YulFunctionCall","src":"33119:15:29"},"nodeType":"YulExpressionStatement","src":"33119:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33150:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33153:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33143:6:29"},"nodeType":"YulFunctionCall","src":"33143:15:29"},"nodeType":"YulExpressionStatement","src":"33143:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"32980:184:29"},{"body":{"nodeType":"YulBlock","src":"33214:109:29","statements":[{"body":{"nodeType":"YulBlock","src":"33301:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33310:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33313:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33303:6:29"},"nodeType":"YulFunctionCall","src":"33303:12:29"},"nodeType":"YulExpressionStatement","src":"33303:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33237:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33248:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"33255:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33244:3:29"},"nodeType":"YulFunctionCall","src":"33244:54:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33234:2:29"},"nodeType":"YulFunctionCall","src":"33234:65:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33227:6:29"},"nodeType":"YulFunctionCall","src":"33227:73:29"},"nodeType":"YulIf","src":"33224:2:29"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33203:5:29","type":""}],"src":"33169:154:29"},{"body":{"nodeType":"YulBlock","src":"33370:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"33424:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33433:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33436:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33426:6:29"},"nodeType":"YulFunctionCall","src":"33426:12:29"},"nodeType":"YulExpressionStatement","src":"33426:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33393:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33414:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33407:6:29"},"nodeType":"YulFunctionCall","src":"33407:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33400:6:29"},"nodeType":"YulFunctionCall","src":"33400:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33390:2:29"},"nodeType":"YulFunctionCall","src":"33390:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33383:6:29"},"nodeType":"YulFunctionCall","src":"33383:40:29"},"nodeType":"YulIf","src":"33380:2:29"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33359:5:29","type":""}],"src":"33328:118:29"}]},"contents":"{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        array := allocate_memory(array_allocation_size_bytes(length))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_struct_EarnedData_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(value, value) }\n        let memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n        value := memPtr\n        let value_1 := mload(headStart)\n        validator_revert_address(value_1)\n        mstore(memPtr, value_1)\n        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(5, _3)), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_EarnedData_$2827_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(6, _3)), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_struct_EarnedData_fromMemory(src, dataEnd))\n            dst := add(dst, _1)\n            src := add(src, 0x40)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_EarnedData_$3954_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(6, _3)), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_struct_EarnedData_fromMemory(src, dataEnd))\n            dst := add(dst, _1)\n            src := add(src, 0x40)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(5, _3)), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value0, value0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _2 := mload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256t_struct$_FNFTConfig_$3776_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 416) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        let _2 := 0x0120\n        if slt(add(_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0), _2) { revert(value4, value4) }\n        let value_1 := allocate_memory_5031()\n        mstore(value_1, abi_decode_address(add(headStart, 96)))\n        mstore(add(value_1, 32), abi_decode_address(add(headStart, 128)))\n        mstore(add(value_1, 64), calldataload(add(headStart, 160)))\n        mstore(add(value_1, 96), calldataload(add(headStart, 192)))\n        mstore(add(value_1, 128), calldataload(add(headStart, 224)))\n        let _3 := 256\n        mstore(add(value_1, 160), calldataload(add(headStart, _3)))\n        mstore(add(value_1, 192), abi_decode_bool(add(headStart, _2)))\n        mstore(add(value_1, 224), abi_decode_bool(add(headStart, 320)))\n        mstore(add(value_1, _3), abi_decode_bool(add(headStart, 352)))\n        value3 := value_1\n        let offset := calldataload(add(headStart, 384))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_address_payablet_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptrt_addresst_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_bool(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptrt_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_struct_FNFTConfig(value, pos)\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        mstore(add(pos, 0xc0), iszero(iszero(mload(add(value, 0xc0)))))\n        let memberValue0 := mload(add(value, 0xe0))\n        abi_encode_bool(memberValue0, add(pos, 0xe0))\n        let _2 := 0x0100\n        let memberValue0_1 := mload(add(value, _2))\n        abi_encode_bool(memberValue0_1, add(pos, _2))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_53a4b4e6ee1c8d4208b367bdf377e48fc9f3ac9d4f90fb6680d8a68397b09e8f_t_string_memory_ptr_t_stringliteral_28256d1d7a0833d10b530a5d7ac501d039b0fc93a3f3409ebdd4d510715037b6__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \" [\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(end_1, 2), length_1)\n        let _1 := add(end_1, length_1)\n        mstore(add(_1, 2), \"] Tokens Available\")\n        end := add(_1, 20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_e64009107d042bdc478cc69a5433e4573ea2e8a23a46646c0ee241e30c888e73__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \": \")\n        end := add(end_1, 2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_bool_t_uint256_t_address__to_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_bool_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        let _1 := 32\n        mstore(add(headStart, _1), 160)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let tail_2 := add(add(headStart, shl(5, length)), 192)\n        let srcPtr := add(value1, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff40))\n            tail_2 := abi_encode_bytes(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n        abi_encode_bool(value2, add(headStart, 64))\n        mstore(add(headStart, 96), value3)\n        abi_encode_address(value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_payable__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_002c3a0d8c9ff41ec8db058c98ae237ebd5201bae49e6ac9b3a3d5192c67a209__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not applicable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"ERC1167: create2 failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_760a1e64bec12b2abe45c38b6154155372bcdc8e8a725e7d20a01af9513a7e5a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Unauthorized Access!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ab10996ac65df5c99a1fd43bc616cdf767a8e223f9df1cf8ebb449b799335032__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"E064\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c143d1811330319e6c2041c116672d668e927038b5ab21cc328926db9c9ddf0d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"E016\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed67044774f9d6b6cd164d216a6fee68661b2692aca050db9e926e6ea760f87a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Max lockup is 2 years\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_struct$_FNFTConfig_$3776_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_struct$_FNFTConfig_$3776_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 384\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, value0)\n        let _2 := 32\n        mstore(add(headStart, _2), _1)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 416)\n        let srcPtr := add(value1, _2)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value2)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _2)\n        let srcPtr_1 := add(value2, _2)\n        let i_1 := tail\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            pos_1 := add(pos_1, _2)\n            srcPtr_1 := add(srcPtr_1, _2)\n        }\n        tail := pos_1\n        abi_encode_struct_FNFTConfig(value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256_t_bytes32_t_address__to_t_uint256_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function allocate_memory_5031() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0120)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if iszero(value_1) { panic_error_0x11() }\n        ret := add(value_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"929":[{"length":32,"start":1084},{"length":32,"start":2107},{"length":32,"start":2681},{"length":32,"start":3326},{"length":32,"start":4615},{"length":32,"start":6035},{"length":32,"start":6510},{"length":32,"start":7240}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BFD9174 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xC0034E0C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xF3AD65F4 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xF443FAEB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xF48FE050 EQ PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0034E0C EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xCCEC3716 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xD2551412 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xEAC8F5B8 EQ PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8ECACB1B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8ECACB1B EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xA49A1E7D EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xACA1C665 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xBA156BCB EQ PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8BFD9174 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x8C20570B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x8D9D6705 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27C7812C GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x76DA63F3 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x82BFEFC8 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x89158D8E EQ PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27C7812C EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x38C3DF07 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x4C238851 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x644BF7D8 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x109BBF05 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x109BBF05 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x1355F7AB EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x16F49E8A EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x1D145721 EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x479D644 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x63C27F8 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xFF4C916 EQ PUSH2 0x274 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x35A1 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x764 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3940 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x3C34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x3978 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F2 JUMP JUMPDEST PUSH2 0xDE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x381A JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0xF4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3884 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP2 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x391F JUMP JUMPDEST PUSH2 0xFB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x245 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x245 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x35E1 JUMP JUMPDEST PUSH2 0x1603 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x37D3 JUMP JUMPDEST PUSH2 0x1674 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x1941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F2 JUMP JUMPDEST PUSH2 0x1996 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x5A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38DA JUMP JUMPDEST PUSH2 0x1A99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x369A JUMP JUMPDEST POP PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F2 JUMP JUMPDEST PUSH2 0x1CBA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x245 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x62C CALLDATASIZE PUSH1 0x4 PUSH2 0x36B2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD1A3AF5A00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x6C6 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4291039A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x712 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x789BC37900000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x75E JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x4B0EE02A SWAP1 PUSH2 0x87A SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1D99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF97E7D74 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642041636365737321000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH4 0x3C26700 PUSH2 0x9FE TIMESTAMP DUP5 PUSH2 0x3F53 JUMP JUMPDEST GT ISZERO PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178206C6F636B757020697320322079656172730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xAB8 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0x3C0672BB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 DUP3 AND SWAP1 PUSH4 0x3C0672BB SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xB66 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB92 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBDF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBB4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBDF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF97E7D74 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642041636365737321000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xD26 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD PUSH2 0xA9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD49 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP5 DUP4 DUP9 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0x5AFF427D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x5AFF427D SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xE86 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEB2 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xED4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEFF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206170706C696361626C65000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH2 0xFB3 PUSH1 0x0 PUSH2 0x1F84 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xE0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x20 DUP5 ADD MSTORE DUP4 MLOAD DUP2 DUP2 MSTORE DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE SWAP1 SWAP3 DUP4 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP CALLER DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1041 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF97E7D74 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1111 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5A7C08F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x5A7C08F0 SWAP1 PUSH2 0x1183 SWAP1 DUP11 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3C47 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x119D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D5 SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP6 POP PUSH1 0x0 SWAP5 POP PUSH2 0x1232 SWAP4 POP PUSH32 0x0 SWAP3 POP PUSH1 0x60 ADD SWAP1 POP PUSH2 0xA9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1255 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A CALLER DUP4 DUP8 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3C4F8DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3C4F8DD8 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F5 SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FF5B85F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x135B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP7 SWAP4 POP PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP3 POP CALLER SWAP2 PUSH32 0x5BED1F834B92CC21CEC09497AFA47D36952B8A037E988ECA6E9ECFFEB497B227 SWAP2 DUP10 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x13CC SWAP3 SWAP2 PUSH2 0x3CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x13EA DUP5 PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x144B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1436 JUMPI SWAP1 POP JUMPDEST POP DUP3 MLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1580 JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1487 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x149C DUP3 PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x3B3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x14F0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x14E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x285B JUMP JUMPDEST PUSH2 0x14F9 DUP5 PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x150A SWAP3 SWAP2 SWAP1 PUSH2 0x3ABB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x152E SWAP3 SWAP2 SWAP1 PUSH2 0x3A8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x155D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x1576 SWAP1 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x145C JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x158B DUP8 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x3C26700 PUSH2 0x15A1 PUSH3 0x15180 TIMESTAMP PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x15AE SWAP1 PUSH3 0x15180 PUSH2 0x3F16 JUMP JUMPDEST PUSH2 0x15B8 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST SWAP1 POP DUP2 DUP5 DUP5 DUP4 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15E7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1670 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x3122 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x54F2F7AF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x54F2F7AF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH32 0x4530313600000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x17BB SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0x1B258D5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP DUP4 SWAP3 DUP4 AND SWAP1 PUSH4 0x1B258D50 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1847 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186B SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FF5B85F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 SWAP5 POP PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP4 POP DUP11 AND SWAP2 PUSH32 0xF2B6E7F64080F438239B56473F2CD92B33165C88688FD898E1D99082BD0EB954 SWAP2 DUP7 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x192F SWAP3 SWAP2 PUSH2 0x3CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x75E SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD PUSH2 0x85F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A83 SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST SWAP1 POP PUSH2 0x1670 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xD59E296E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x0 SWAP2 DUP4 SWAP2 PUSH4 0xD59E296E SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B33 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B04E84000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x2B04E840 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BCC SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST GT PUSH2 0x1C1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH32 0x4530363400000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1C70 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x60 ADD PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xEF5CFB8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xEF5CFB8C SWAP1 PUSH1 0x24 ADD PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1D90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x7EF DUP2 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E15 DUP4 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 DUP5 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF3FF00000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE SWAP3 SHL PUSH1 0x38 DUP4 ADD MSTORE PUSH1 0x4C DUP3 ADD MSTORE PUSH1 0x37 DUP1 DUP3 KECCAK256 PUSH1 0x6C DUP4 ADD MSTORE PUSH1 0x55 SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x3E9 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1FFA DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x12EDB24C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x204B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2087 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x332A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH31 0x8CC26200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH3 0x8CC262 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x210B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2133 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x34E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB277E8F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0xB277E8F0 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x21E1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x33C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x857CB94A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2246 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x226A SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST SWAP1 POP DUP2 MLOAD DUP2 DUP6 MLOAD PUSH2 0x227B SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x2285 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP7 POP DUP2 MLOAD DUP2 DUP6 MLOAD PUSH2 0x22E6 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x22F0 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x233F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24E3 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x236E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2396 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x23D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x243C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2474 SWAP2 SWAP1 PUSH2 0x3589 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2494 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24A6 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x24DB DUP2 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2345 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xDC01F60D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0xDC01F60D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2567 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x258F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x268A JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x25BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP10 DUP8 MLOAD DUP4 PUSH2 0x25D7 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x25F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2635 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP8 MLOAD DUP4 PUSH2 0x264F SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x266D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2682 DUP2 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2594 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x279A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x26B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP10 DUP5 DUP9 MLOAD DUP5 PUSH2 0x26D2 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x26DC SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x26FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x273A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP5 DUP9 MLOAD DUP5 PUSH2 0x2755 SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x275F SWAP2 SWAP1 PUSH2 0x3D9B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x277D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2792 DUP2 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x268E JUMP JUMPDEST POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2816 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2813 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2853 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH32 0x556E6B6E6F776E20546F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x28C8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x28C5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x28D4 JUMPI POP PUSH1 0x12 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x28E1 DUP5 DUP3 PUSH2 0x2AC9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2959 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2956 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2853 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x3F3F3F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x29DF SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0x1F20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A39 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C7E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x29DF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2A57 SWAP2 SWAP1 PUSH2 0x356D JUMP JUMPDEST PUSH2 0x29DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2AD8 DUP4 PUSH1 0xA PUSH2 0x3E4D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 DUP1 JUMPDEST DUP3 ISZERO PUSH2 0x2B3E JUMPI PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x2B00 JUMPI DUP1 PUSH2 0x2AF8 DUP2 PUSH2 0x4068 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B1E JUMP JUMPDEST PUSH2 0x2B0B PUSH1 0xA DUP5 PUSH2 0x4088 JUMP JUMPDEST ISZERO PUSH2 0x2B1E JUMPI DUP1 PUSH2 0x2B1A DUP2 PUSH2 0x4068 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP2 PUSH2 0x2B28 DUP2 PUSH2 0x4068 JUMP JUMPDEST SWAP3 POP PUSH2 0x2B37 SWAP1 POP PUSH1 0xA DUP5 PUSH2 0x3DD8 JUMP JUMPDEST SWAP3 POP PUSH2 0x2ADF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF DUP8 AND PUSH2 0x2B85 DUP4 DUP6 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0xFF AND LT PUSH2 0x2BB7 JUMPI PUSH2 0x2B97 DUP6 DUP10 PUSH2 0x3DD8 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2BA3 DUP8 DUP5 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2C5C JUMP JUMPDEST PUSH2 0x2BC1 DUP3 DUP5 PUSH2 0x3F6A JUMP JUMPDEST PUSH2 0x2BCC SWAP1 PUSH1 0xA PUSH2 0x3E4D JUMP JUMPDEST PUSH2 0x2BD6 SWAP1 DUP10 PUSH2 0x3DD8 JUMP JUMPDEST DUP2 MSTORE DUP8 DUP6 GT ISZERO PUSH2 0x2C2B JUMPI PUSH1 0x2 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x2BF1 DUP4 DUP9 PUSH2 0x3F6A JUMP JUMPDEST PUSH2 0x2BFC SWAP1 PUSH1 0x2 PUSH2 0x3DB3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2C10 SWAP1 DUP4 PUSH2 0x3DB3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x2C5C JUMP JUMPDEST PUSH2 0x2C36 DUP3 PUSH1 0x1 PUSH2 0x3DB3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x2C48 DUP8 DUP5 PUSH2 0x3F6A JUMP JUMPDEST PUSH2 0x2C53 SWAP1 PUSH1 0x1 PUSH2 0x3DB3 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2C72 DUP2 PUSH2 0x2C8D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28E1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2FAA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CBF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CE9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 PUSH1 0xC0 ADD MLOAD ISZERO PUSH2 0x2DD9 JUMPI PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D38 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DA9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xFF AND JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x2E57 JUMPI PUSH1 0x30 PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E16 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 PUSH2 0x2E4F DUP2 PUSH2 0x402F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2DE2 JUMP JUMPDEST POP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2853 JUMPI PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x2E84 JUMPI POP DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x2F0F JUMPI PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP5 PUSH1 0x40 ADD DUP1 MLOAD PUSH2 0x2EBA SWAP1 PUSH2 0x3FB9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 DUP2 SWAP1 MSTORE DUP2 MLOAD DUP2 LT PUSH2 0x2EDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST DUP3 MLOAD PUSH2 0x2F1D SWAP1 PUSH1 0xA SWAP1 PUSH2 0x4088 JUMP JUMPDEST PUSH2 0x2F28 SWAP1 PUSH1 0x30 PUSH2 0x3D9B JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP5 PUSH1 0x40 ADD DUP1 MLOAD PUSH2 0x2F3B SWAP1 PUSH2 0x3FB9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 DUP2 SWAP1 MSTORE DUP2 MLOAD DUP2 LT PUSH2 0x2F60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP4 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x2FA2 SWAP2 SWAP1 PUSH2 0x3DD8 JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x3070 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x308C SWAP2 SWAP1 PUSH2 0x3A70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x30C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x30DE DUP3 DUP3 DUP7 PUSH2 0x30E9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x30F8 JUMPI POP DUP2 PUSH2 0x1E15 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3108 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x3C34 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x312E SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3150 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3196 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3169 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3196 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3196 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3196 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x317B JUMP JUMPDEST POP PUSH2 0x31A2 SWAP3 SWAP2 POP PUSH2 0x31A6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x31A2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x31A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31CE PUSH2 0x31C9 DUP5 PUSH2 0x3D73 JUMP JUMPDEST PUSH2 0x3D1E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x31E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2856 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3214 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3224 PUSH2 0x31C9 DUP4 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3243 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3261 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3245 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2856 DUP2 PUSH2 0x40F3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3289 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E15 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x31BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x32CC JUMPI PUSH2 0x32CC PUSH2 0x40C8 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 MLOAD PUSH2 0x32DF DUP2 PUSH2 0x40DE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3303 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E15 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x331F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E15 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x333C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3352 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x3362 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x3370 PUSH2 0x31C9 DUP3 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x338F JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x33BA JUMPI DUP1 MLOAD PUSH2 0x33A6 DUP2 PUSH2 0x40DE JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x3393 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33D8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33EE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x33FE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x340C PUSH2 0x31C9 DUP3 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x6 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x342B JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x33BA JUMPI PUSH2 0x3441 DUP10 DUP3 PUSH2 0x3298 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x342F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3468 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x347E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x348E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x349C PUSH2 0x31C9 DUP3 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x6 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x34BB JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x33BA JUMPI PUSH2 0x34D1 DUP10 DUP3 PUSH2 0x3298 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x34BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34F8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x350E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x351E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x352C PUSH2 0x31C9 DUP3 PUSH2 0x3D4F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x354B JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x33BA JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x354F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x357E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E15 DUP2 PUSH2 0x40F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359A JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35B2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1E15 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35F2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3608 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x3618 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x28E1 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x31BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3638 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x364E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x365E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x366C PUSH2 0x31C9 DUP3 PUSH2 0x3D73 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x3680 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x3691 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3F8D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36AB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH2 0x1A0 DUP2 SLT ISZERO PUSH2 0x36CB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x36DD DUP2 PUSH2 0x40DE JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP3 ADD DUP2 SGT ISZERO PUSH2 0x3717 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x371F PUSH2 0x3CF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x372D PUSH1 0x60 DUP10 ADD PUSH2 0x31F9 JUMP JUMPDEST DUP3 MSTORE PUSH2 0x373B PUSH1 0x80 DUP10 ADD PUSH2 0x31F9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xE0 DUP9 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP10 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x3775 DUP3 DUP11 ADD PUSH2 0x326E JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x3787 PUSH2 0x140 DUP11 ADD PUSH2 0x326E JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x3799 PUSH2 0x160 DUP11 ADD PUSH2 0x326E JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE POP SWAP2 POP PUSH2 0x180 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37BA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x37C6 DUP9 DUP3 DUP10 ADD PUSH2 0x3279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37E8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x37FA DUP2 PUSH2 0x40DE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x380A DUP2 PUSH2 0x40DE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x382F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x384C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3858 DUP8 DUP3 DUP9 ADD PUSH2 0x3204 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x3869 DUP2 PUSH2 0x40DE JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3879 DUP2 PUSH2 0x40F3 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3899 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38B6 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x38C2 DUP8 DUP3 DUP9 ADD PUSH2 0x3204 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3879 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38EC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3909 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3915 DUP6 DUP3 DUP7 ADD PUSH2 0x3279 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3931 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3954 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x396D DUP2 PUSH2 0x40DE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x398D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3879 DUP2 PUSH2 0x40DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39BE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1E15 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x39E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3F8D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x3A5C PUSH1 0xE0 DUP5 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP2 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP5 DUP4 ADD MSTORE PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3A82 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F8D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3A9E DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x3F8D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x3AB2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x3F8D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3ACD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x3F8D JUMP JUMPDEST PUSH32 0x205B000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x3B07 DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3F8D JUMP JUMPDEST PUSH32 0x5D20546F6B656E7320417661696C61626C650000000000000000000000000000 PUSH1 0x2 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x14 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3B4F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F8D JUMP JUMPDEST PUSH32 0x3A20000000000000000000000000000000000000000000000000000000000000 SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE PUSH1 0x20 PUSH1 0xA0 DUP2 DUP6 ADD MSTORE DUP2 DUP9 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0xC0 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP11 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C00 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF40 DUP9 DUP8 SUB ADD DUP5 MSTORE PUSH2 0x3BEE DUP7 DUP4 MLOAD PUSH2 0x39CE JUMP JUMPDEST SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3BB4 JUMP JUMPDEST POP POP POP POP DUP7 ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE POP SWAP1 POP DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C2A PUSH1 0x80 DUP4 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E15 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39CE JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH2 0x180 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP6 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH2 0x1A0 DUP5 ADD SWAP2 DUP8 DUP2 ADD SWAP2 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C91 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x3C6C JUMP JUMPDEST POP POP DUP5 DUP4 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP5 MSTORE DUP2 DUP9 ADD SWAP4 DUP3 ADD SWAP3 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CC6 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x3CAA JUMP JUMPDEST POP POP POP DUP1 SWAP3 POP POP POP PUSH2 0x3691 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x39FA JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x28E1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3D18 JUMPI PUSH2 0x3D18 PUSH2 0x40C8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3D47 JUMPI PUSH2 0x3D47 PUSH2 0x40C8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3D69 JUMPI PUSH2 0x3D69 PUSH2 0x40C8 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3D8D JUMPI PUSH2 0x3D8D PUSH2 0x40C8 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3DAE JUMPI PUSH2 0x3DAE PUSH2 0x409C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3DD0 JUMPI PUSH2 0x3DD0 PUSH2 0x409C JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3DE7 JUMPI PUSH2 0x3DE7 PUSH2 0x40B2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3E45 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3E2B JUMPI PUSH2 0x3E2B PUSH2 0x409C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3E38 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x3DF1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E15 PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x3E66 JUMPI POP PUSH1 0x1 PUSH2 0x75E JUMP JUMPDEST DUP2 PUSH2 0x3E73 JUMPI POP PUSH1 0x0 PUSH2 0x75E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3E89 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3E93 JUMPI PUSH2 0x3EAF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x75E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3EA4 JUMPI PUSH2 0x3EA4 PUSH2 0x409C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x75E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3ED2 JUMPI POP DUP2 DUP2 EXP PUSH2 0x75E JUMP JUMPDEST PUSH2 0x3EDC DUP4 DUP4 PUSH2 0x3DEC JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3F0E JUMPI PUSH2 0x3F0E PUSH2 0x409C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3F4E JUMPI PUSH2 0x3F4E PUSH2 0x409C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3F65 JUMPI PUSH2 0x3F65 PUSH2 0x409C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 DUP3 LT ISZERO PUSH2 0x3F84 JUMPI PUSH2 0x3F84 PUSH2 0x409C JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FA8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3F90 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3E9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x3FCC JUMPI PUSH2 0x3FCC PUSH2 0x409C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4008 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4029 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4061 JUMPI PUSH2 0x4061 PUSH2 0x409C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x407F JUMPI PUSH2 0x407F PUSH2 0x409C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4097 JUMPI PUSH2 0x4097 PUSH2 0x40B2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xB1 LOG2 0xFC 0x1F TIMESTAMP NOT 0xC8 0x28 0xAB PUSH3 0xCE21BA 0x4A CALLDATASIZE SGT 0x5E 0x26 TIMESTAMP 0x2B 0xC9 0xD8 DUP13 PUSH1 0xD6 CHAINID 0xCB 0xB4 PUSH7 0xB84C64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ","sourceMap":"1258:12276:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3318:356;;;;;;;;;;-1:-1:-1;3318:356:9;;;;;:::i;:::-;;:::i;:::-;;;19946:14:29;;19939:22;19921:41;;19909:2;19894:18;3318:356:9;;;;;;;;1452:82;;;;;;;;;;;;1492:42;1452:82;;;;;-1:-1:-1;;;;;17787:55:29;;;17769:74;;17757:2;17742:18;1452:82:9;17724:125:29;9007:116:9;;;;;;;;;;;;;:::i;:::-;;9713:221;;;;;;;;;;-1:-1:-1;9713:221:9;;;;;:::i;:::-;;:::i;:::-;;;20119:25:29;;;20107:2;20092:18;9713:221:9;20074:76:29;1651:89:9;;;;;;;;;;;;1698:42;1651:89;;7038:469;;;;;;;;;;-1:-1:-1;7038:469:9;;;;;:::i;:::-;;:::i;9559:112::-;;;;;;;;;;-1:-1:-1;9559:112:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7599:473::-;;;;;;;;;;-1:-1:-1;7599:473:9;;;;;:::i;:::-;;:::i;8667:133::-;;;;;;;;;;-1:-1:-1;8667:133:9;;;;;:::i;:::-;;:::i;2244:108::-;;;;;;;;;;;;;:::i;2538:39::-;;;;;;;;;;-1:-1:-1;2538:39:9;;;;;:::i;:::-;;;;;;;;;;;;;;6387:134;;;;;;;;;;-1:-1:-1;6387:134:9;;;;;:::i;:::-;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;8100:121:9:-;;;;;;;;;;-1:-1:-1;8100:121:9;;;;;:::i;:::-;6387:134;;;;;2004:74;;;;;;;;;;;;2036:42;2004:74;;3680:1884;;;;;;:::i;:::-;;:::i;2124:33::-;;;;;;;;;;;;;;;1560:84;;;;;;;;;;;;1602:42;1560:84;;11186:110;;;;;;;;;;-1:-1:-1;11274:15:9;;-1:-1:-1;;;;;11274:15:9;11186:110;;973:85:0;;;;;;;;;;-1:-1:-1;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;10081:1099:9;;;;;;;;;;-1:-1:-1;10081:1099:9;;;;;:::i;:::-;;:::i;8806:94::-;;;;;;;;;;-1:-1:-1;8806:94:9;;;;;:::i;:::-;;:::i;5571:762::-;;;;;;;;;;-1:-1:-1;5571:762:9;;;;;:::i;:::-;;:::i;11439:197::-;;;;;;;;;;-1:-1:-1;11439:197:9;;;;;:::i;:::-;;:::i;1747:76::-;;;;;;;;;;;;1781:42;1747:76;;9349:180;;;;;;;;;;-1:-1:-1;9349:180:9;;;;;:::i;:::-;;:::i;8266:362::-;;;;;;;;;;-1:-1:-1;8266:362:9;;;;;:::i;:::-;;:::i;9978:97::-;;;;;;;;;;-1:-1:-1;9978:97:9;;;;;:::i;:::-;-1:-1:-1;1403:42:9;;9978:97;1846:189:0;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;1931:30:9:-;;;;;;;;;;-1:-1:-1;1931:30:9;;;;-1:-1:-1;;;;;1931:30:9;;;6769:212;;;;;;:::i;:::-;;;;;;;3318:356;3412:4;3435:48;;;3450:33;3435:48;;:114;;-1:-1:-1;3499:50:9;;;3514:35;3499:50;3435:114;:180;;;-1:-1:-1;3565:50:9;;;3580:35;3565:50;3435:180;:232;;;-1:-1:-1;886:25:7;871:40;;;;3631:36:9;3428:239;3318:356;-1:-1:-1;;3318:356:9:o;9007:116::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;22971:2:29;1177:68:0;;;22953:21:29;;;22990:18;;;22983:30;23049:34;23029:18;;;23022:62;23101:18;;1177:68:0;;;;;;;;;9065:51:9::1;::::0;9073:10:::1;::::0;9094:21:::1;9065:51:::0;::::1;;;::::0;::::1;::::0;;;9094:21;9073:10;9065:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;9007:116::o:0;9713:221::-;9899:25;;;2036:42;9899:25;;;19653:74:29;19743:18;;;19736:34;;;9774:4:9;;1492:42;;9797:46;;9844:82;;9879:8;;19626:18:29;;9899:25:9;;;;;;;;;;;;;9889:36;;;;;;9844:34;:82::i;:::-;9797:130;;;;;;;;;;-1:-1:-1;;;;;17787:55:29;;;9797:130:9;;;17769:74:29;17742:18;;9797:130:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7038:469::-;2909:15;;;;;;;;;-1:-1:-1;;;;;2909:15:9;-1:-1:-1;;;;;2892:43:9;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2878:59:9;:10;-1:-1:-1;;;;;2878:59:9;;2870:92;;;;-1:-1:-1;;;2870:92:9;;22622:2:29;2870:92:9;;;22604:21:29;22661:2;22641:18;;;22634:30;22700:22;22680:18;;;22673:50;22740:18;;2870:92:9;22594:170:29;2870:92:9;2519:12:::1;7175:28;7188:15;7175:10:::0;:28:::1;:::i;:::-;:42;;7167:76;;;::::0;-1:-1:-1;;;7167:76:9;;24765:2:29;7167:76:9::1;::::0;::::1;24747:21:29::0;24804:2;24784:18;;;24777:30;24843:23;24823:18;;;24816:51;24884:18;;7167:76:9::1;24737:171:29::0;7167:76:9::1;7322:25;::::0;;2036:42:::1;7322:25;::::0;::::1;19653:74:29::0;19743:18;;;19736:34;;;7253:20:9::1;::::0;7276:73:::1;::::0;7302:8:::1;::::0;19626:18:29;;7322:25:9::1;;;;;;;;;;;;;7312:36;;;;;;7276:25;:73::i;:::-;7359:30;7477:14:::0;;;:6:::1;:14;::::0;;;;;;;7439:61;;;;;::::1;::::0;::::1;26750:25:29::0;;;26791:18;;;26784:34;;;;-1:-1:-1;;;;;26854:55:29;;;26834:18;;;26827:83;7253:96:9;;-1:-1:-1;7253:96:9;;7439:25;::::1;::::0;::::1;::::0;26723:18:29;;7439:61:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2972:1;;7038:469:::0;;;:::o;9559:112::-;9624:13;9656:8;9649:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9559:112;;;:::o;7599:473::-;2909:15;;;;;;;;;-1:-1:-1;;;;;2909:15:9;-1:-1:-1;;;;;2892:43:9;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2878:59:9;:10;-1:-1:-1;;;;;2878:59:9;;2870:92;;;;-1:-1:-1;;;2870:92:9;;22622:2:29;2870:92:9;;;22604:21:29;22661:2;22641:18;;;22634:30;22700:22;22680:18;;;22673:50;22740:18;;2870:92:9;22594:170:29;2870:92:9;7807:25:::1;::::0;;2036:42:::1;7807:25;::::0;::::1;19653:74:29::0;19743:18;;;19736:34;;;7738:20:9::1;::::0;7761:73:::1;::::0;7787:8:::1;::::0;19626:18:29;;7807:25:9::1;19608:168:29::0;7761:73:9::1;7738:96:::0;-1:-1:-1;7738:96:9;7924:69:::1;2036:42;7955:6:::0;7738:96;7977:15;7924:30:::1;:69::i;:::-;8042:14;::::0;;;:6:::1;:14;::::0;;;;;;;8003:62;;;;;::::1;::::0;::::1;26750:25:29::0;;;26791:18;;;26784:34;;;;-1:-1:-1;;;;;26854:55:29;;;26834:18;;;26827:83;8003:21:9;::::1;::::0;::::1;::::0;26723:18:29;;8003:62:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2972:1;;7599:473:::0;;;;:::o;8667:133::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;22971:2:29;1177:68:0;;;22953:21:29;;;22990:18;;;22983:30;23049:34;23029:18;;;23022:62;23101:18;;1177:68:0;22943:182:29;1177:68:0;8759:15:9::1;:34:::0;;;::::1;-1:-1:-1::0;;;;;8759:34:9;;;::::1;::::0;;;::::1;::::0;;8667:133::o;2244:108::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6387:134::-;6482:32;;-1:-1:-1;;;6482:32:9;;21113:2:29;6482:32:9;;;21095:21:29;21152:2;21132:18;;;21125:30;21191:16;21171:18;;;21164:44;21225:18;;6482:32:9;21085:164:29;1605:92:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;22971:2:29;1177:68:0;;;22953:21:29;;;22990:18;;;22983:30;23049:34;23029:18;;;23022:62;23101:18;;1177:68:0;22943:182:29;1177:68:0;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3680:1884:9:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4040:4:9;-1:-1:-1;;;4019:25:9;;;-1:-1:-1;;;4059:35:9;;;4278:4;-1:-1:-1;;;4242:41:9;4489:16;;;;;;;;;;;-1:-1:-1;;;;4489:16:9;;;;;;;;;;;;-1:-1:-1;;4459:46:9;-1:-1:-1;665:10:6;4519::9;4530:1;4519:13;;;;;;-1:-1:-1;;;4519:13:9;;;;;;;;;-1:-1:-1;;;;;4519:28:9;;;;:13;;;;;;;;;;;:28;4589:13;;;4600:1;4589:13;;;;;;;;;4562:24;;4589:13;;;;;;;;;;;;-1:-1:-1;4589:13:9;4562:40;;4632:1;4616:10;4627:1;4616:13;;;;;;-1:-1:-1;;;4616:13:9;;;;;;;;;;;;;;:17;;;;;4648:14;4682:15;;;;;;;;;-1:-1:-1;;;;;4682:15:9;-1:-1:-1;;;;;4665:43:9;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4747:73;;;;;4648:62;;-1:-1:-1;;;;;;4747:28:9;;;;;:73;;4776:7;;4785:10;;4797;;4809;;4747:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4988:25;;;2036:42;4988:25;;;19653:74:29;19743:18;;;19736:34;;;4738:82:9;;-1:-1:-1;4841:20:9;;-1:-1:-1;4942:73:9;;-1:-1:-1;4968:8:9;;-1:-1:-1;19626:18:29;;;-1:-1:-1;4988:25:9;19608:168:29;4942:73:9;4927:88;-1:-1:-1;4927:88:9;5178:73;1403:42;5212:10;4927:88;5238:12;5178:33;:73::i;:::-;5349:52;;;;;;;;26750:25:29;;;26791:18;;;26784:34;;;5390:10:9;26834:18:29;;;26827:83;-1:-1:-1;;;;;5349:17:9;;;;;26723:18:29;;5349:52:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5332:6;:14;5339:6;5332:14;;;;;;;;;;;:69;;;;5415:6;-1:-1:-1;;;;;5415:18:9;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5522:24:9;;;-1:-1:-1;;;;;17787:55:29;;5522:24:9;;;17769:74:29;5514:6:9;;-1:-1:-1;2036:42:9;;-1:-1:-1;5481:10:9;;5454:93;;5500:12;;17742:18:29;5522:24:9;;;-1:-1:-1;;5522:24:9;;;;;;;;;;5454:93;;;;:::i;:::-;;;;;;;;3680:1884;;;;;;:::o;10081:1099::-;10158:24;10195:23;10220:30;10254:14;10261:6;10254;:14::i;:::-;10194:74;;;;10278:27;10321:13;:20;10308:34;;;;;;-1:-1:-1;;;10308:34:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10370:20:9;;10278:64;;-1:-1:-1;10370:24:9;;;;10404:482;;10437:6;10433:443;10453:6;:13;10449:1;:17;10433:443;;;10491:13;10507:6;10514:1;10507:9;;;;;;-1:-1:-1;;;10507:9:9;;;;;;;;;;;;;;;10491:25;;10534:18;10579:27;10600:5;10579:20;:27::i;:::-;10562:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;10534:79;;10631:18;10676:53;10705:13;10719:1;10705:16;;;;;;-1:-1:-1;;;10705:16:9;;;;;;;;;;;;;;;10723:5;10676:28;:53::i;:::-;10737:29;10760:5;10737:22;:29::i;:::-;10659:130;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10631:159;;10849:4;10855;10832:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10808:11;10820:1;10808:14;;;;;;-1:-1:-1;;;10808:14:9;;;;;;;;;;;;;;:53;;;;10433:443;;;10468:3;;;;;:::i;:::-;;;;10433:443;;;;10404:482;10895:19;10917:25;10935:6;10917:17;:25::i;:::-;10895:47;-1:-1:-1;10952:17:9;2519:12;10972:26;10991:6;10972:15;:26;:::i;:::-;:37;;11002:6;10972:37;:::i;:::-;:50;;;;:::i;:::-;10952:70;;11115:11;11128;11141:10;11153:12;2036:42;11104:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11090:83;;10081:1099;;;;;;;;;:::o;8806:94::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;22971:2:29;1177:68:0;;;22953:21:29;;;22990:18;;;22983:30;23049:34;23029:18;;;23022:62;23101:18;;1177:68:0;22943:182:29;1177:68:0;8877:16:9;;::::1;::::0;:8:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;;8806:94:::0;:::o;5571:762::-;5864:15;;5847:49;;;;;;;;5831:13;;-1:-1:-1;;;;;5864:15:9;;5847:47;;:49;;;;;;;;;;;;;;5864:15;5847:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5831:65;-1:-1:-1;665:10:6;-1:-1:-1;;;;;5914:21:9;;;5906:38;;;;-1:-1:-1;;;5906:38:9;;;;;;23664:2:29;23646:21;;;23703:1;23683:18;;;23676:29;23741:6;23736:2;23721:18;;23714:34;23780:2;23765:18;;23636:153;5906:38:9;6024:25;;;2036:42;6024:25;;;19653:74:29;19743:18;;;19736:34;;;5955:20:9;;5978:73;;6004:8;;19626:18:29;;6024:25:9;19608:168:29;5978:73:9;6061:30;6173:14;;;:6;:14;;;;;;;6157:39;;;;;;;;20337:25:29;;;;-1:-1:-1;;;;;20398:55:29;;;20378:18;;;20371:83;5955:96:9;;-1:-1:-1;5955:96:9;;6157:15;;;;;20310:18:29;;6157:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6142:54;;6206:6;-1:-1:-1;;;;;6206:18:9;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6301:24:9;;;-1:-1:-1;;;;;17787:55:29;;;6301:24:9;;;17769:74:29;6293:6:9;;-1:-1:-1;2036:42:9;;-1:-1:-1;6241:85:9;;;;;6284:7;;17742:18:29;6301:24:9;;;-1:-1:-1;;6301:24:9;;;;;;;;;;6241:85;;;;:::i;:::-;;;;;;;;5571:762;;;;;;;;:::o;11439:197::-;11602:25;;;2036:42;11602:25;;;19653:74:29;19743:18;;;19736:34;;;11500:20:9;;11547:82;;11582:8;;19626:18:29;;11602:25:9;19608:168:29;9349:180:9;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;22971:2:29;1177:68:0;;;22953:21:29;;;22990:18;;;22983:30;23049:34;23029:18;;;23022:62;23101:18;;1177:68:0;22943:182:29;1177:68:0;9428:38:9::1;::::0;;;;9460:4:::1;9428:38;::::0;::::1;17769:74:29::0;9414:11:9::1;::::0;-1:-1:-1;;;;;9428:23:9;::::1;::::0;::::1;::::0;17742:18:29;;9428:38:9::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9414:52:::0;-1:-1:-1;9476:46:9::1;-1:-1:-1::0;;;;;9476:26:9;::::1;9503:10;9414:52:::0;9476:26:::1;:46::i;8266:362::-:0;3074:15;;3121:19;;;;;;;;8386:6;;-1:-1:-1;;;;;3074:15:9;;3034:20;;3074:15;;3121:17;;:19;;;;;;;;;;;;;;3074:15;3121:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3108:64;;;;;3153:10;3108:64;;;19653:74:29;19743:18;;;19736:34;;;-1:-1:-1;;;;;3108:44:9;;;;;;;19626:18:29;;3108:64:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;3100:85;;;;-1:-1:-1;;;3100:85:9;;;;;;23332:2:29;23314:21;;;23371:1;23351:18;;;23344:29;23409:6;23404:2;23389:18;;23382:34;23448:2;23433:18;;23304:153;3100:85:9;8473:25:::1;::::0;;2036:42:::1;8473:25;::::0;::::1;19653:74:29::0;19743:18;;;19736:34;;;8404:20:9::1;::::0;8427:73:::1;::::0;8453:8:::1;::::0;19626:18:29;;8473:25:9::1;19608:168:29::0;8427:73:9::1;8590:31;::::0;;;;8610:10:::1;8590:31;::::0;::::1;17769:74:29::0;8404:96:9;;-1:-1:-1;8404:96:9;;-1:-1:-1;;;;;8590:19:9;::::1;::::0;::::1;::::0;17742:18:29;;8590:31:9::1;17724:125:29::0;1846:189:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;22971:2:29;1177:68:0;;;22953:21:29;;;22990:18;;;22983:30;23049:34;23029:18;;;23022:62;23101:18;;1177:68:0;22943:182:29;1177:68:0;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;21456:2:29;1926:73:0::1;::::0;::::1;21438:21:29::0;21495:2;21475:18;;;21468:30;21534:34;21514:18;;;21507:62;21605:8;21585:18;;;21578:36;21631:19;;1926:73:0::1;21428:228:29::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;3270:233:1:-:0;3392:17;3432:64;3460:14;3476:4;3490;2671;2665:11;2701:66;2689:79;;2808:4;2804:25;;;2797:4;2788:14;;2781:49;2866:66;2859:4;2850:14;;2843:90;2969:19;;2962:4;2953:14;;2946:43;3018:4;3009:14;;3002:28;3081:4;3066:20;;;3059:4;3050:14;;3043:44;3139:4;3123:14;;3113:31;;2640:514;3432:64;3425:71;3270:233;-1:-1:-1;;;3270:233:1:o;1796:550::-;1880:16;1948:4;1942:11;1978:66;1973:3;1966:79;2091:14;2085:4;2081:25;2074:4;2069:3;2065:14;2058:49;2143:66;2136:4;2131:3;2127:14;2120:90;2257:4;2251;2246:3;2243:1;2235:27;2223:39;-1:-1:-1;;;;;;;2289:22:1;;2281:58;;;;-1:-1:-1;;;2281:58:1;;21863:2:29;2281:58:1;;;21845:21:29;21902:2;21882:18;;;21875:30;21941:25;21921:18;;;21914:53;21984:18;;2281:58:1;21835:173:29;845:241:4;1010:68;;-1:-1:-1;;;;;18135:15:29;;;1010:68:4;;;18117:34:29;18187:15;;18167:18;;;18160:43;18219:18;;;18212:34;;;983:96:4;;1003:5;;1033:27;;18029:18:29;;1010:68:4;;;;-1:-1:-1;;1010:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;983:19;:96::i;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;;;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;11752:1775:9:-;11804:32;11838:29;11915:20;11938:25;11956:6;11938:17;:25::i;:::-;11915:48;;11974:29;1602:42;-1:-1:-1;;;;;12006:50:9;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12006:52:9;;;;;;;;;;;;:::i;:::-;12100;;;;;-1:-1:-1;;;;;17787:55:29;;12100:52:9;;;17769:74:29;11974:84:9;;-1:-1:-1;12068:29:9;;1602:42;;12100:38;;17742:18:29;;12100:52:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12100:52:9;;;;;;;;;;;;:::i;:::-;12215:56;;;;;-1:-1:-1;;;;;17787:55:29;;12215:56:9;;;17769:74:29;12068:84:9;;-1:-1:-1;12162:50:9;;1492:42;;12215;;17742:18:29;;12215:56:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12215:56:9;;;;;;;;;;;;:::i;:::-;12162:109;;12282:26;1781:42;-1:-1:-1;;;;;12311:35:9;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12282:66;;12433:13;:20;12412:18;12390:12;:19;:40;;;;:::i;:::-;:63;;;;:::i;:::-;12376:78;;;;;;-1:-1:-1;;;12376:78:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12376:78:9;;12358:96;;12536:13;:20;12515:18;12493:12;:19;:40;;;;:::i;:::-;:63;;;;:::i;:::-;12479:78;;;;;;-1:-1:-1;;;12479:78:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12479:78:9;;12464:93;;12698:9;12694:206;12717:12;:19;12713:1;:23;12694:206;;;12777:12;12790:1;12777:15;;;;;;-1:-1:-1;;;12777:15:9;;;;;;;;;;;;;;;12756;12772:1;12756:18;;;;;;-1:-1:-1;;;12756:18:9;;;;;;;;;;;;;;:36;-1:-1:-1;;;;;12756:36:9;;;-1:-1:-1;;;;;12756:36:9;;;;;12849:12;12862:1;12849:15;;;;;;-1:-1:-1;;;12849:15:9;;;;;;;;;;;;;;;;;;;12842:47;;;;;-1:-1:-1;;;;;17787:55:29;;;12842:47:9;;;17769:74:29;12842:33:9;;;;;;17742:18:29;;12842:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12824:12;12837:1;12824:15;;;;;;-1:-1:-1;;;12824:15:9;;;;;;;;;;;;;;;:65;;;;:::i;:::-;12806:12;12819:1;12806:15;;;;;;-1:-1:-1;;;12806:15:9;;;;;;;;;;;;;;;;;;:83;12738:3;;;;:::i;:::-;;;;12694:206;;;-1:-1:-1;12954:48:9;;;;;-1:-1:-1;;;;;17787:55:29;;12954:48:9;;;17769:74:29;12910:41:9;;1781:42;;12954:34;;17742:18:29;;12954:48:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12954:48:9;;;;;;;;;;;;:::i;:::-;12910:92;;13016:9;13012:209;13035:12;:19;13031:1;:23;13012:209;;;13115:12;13128:1;13115:15;;;;;;-1:-1:-1;;;13115:15:9;;;;;;;;;;;;;;;:21;;;13074:15;13092:12;:19;13090:1;:21;;;;:::i;:::-;13074:38;;;;;;-1:-1:-1;;;13074:38:9;;;;;;;;;;;;;;:62;-1:-1:-1;;;;;13074:62:9;;;-1:-1:-1;;;;;13074:62:9;;;;;13188:12;13201:1;13188:15;;;;;;-1:-1:-1;;;13188:15:9;;;;;;;;;;;;;;;:22;;;13150:12;13165;:19;13163:1;:21;;;;:::i;:::-;13150:35;;;;;;-1:-1:-1;;;13150:35:9;;;;;;;;;;;;;;;;;;:60;13056:3;;;;:::i;:::-;;;;13012:209;;;;13275:9;13271:250;13294:13;:20;13290:1;:24;13271:250;;;13394:13;13408:1;13394:16;;;;;;-1:-1:-1;;;13394:16:9;;;;;;;;;;;;;;;:22;;;13334:15;13372:18;13352:12;:19;13350:1;:21;;;;:::i;:::-;:40;;;;:::i;:::-;13334:57;;;;;;-1:-1:-1;;;13334:57:9;;;;;;;;;;;;;;:82;-1:-1:-1;;;;;13334:82:9;;;-1:-1:-1;;;;;13334:82:9;;;;;13487:13;13501:1;13487:16;;;;;;-1:-1:-1;;;13487:16:9;;;;;;;;;;;;;;;:23;;;13430:12;13465:18;13445:12;:19;13443:1;:21;;;;:::i;:::-;:40;;;;:::i;:::-;13430:54;;;;;;-1:-1:-1;;;13430:54:9;;;;;;;;;;;;;;;;;;:80;13316:3;;;;:::i;:::-;;;;13271:250;;;;11752:1775;;;;;;;;;:::o;1060:249:28:-;1115:20;1166:5;-1:-1:-1;;;;;1151:26:28;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:28:28;;;;;;;;;;;;:::i;:::-;;;1147:156;;-1:-1:-1;;1268:24:28;;;;;;;;;;;;;;;;;;1060:249::o;1147:156::-;1232:4;-1:-1:-1;1147:156:28;1060:249;;;:::o;1315:323::-;1388:20;1420:14;1463:5;-1:-1:-1;;;;;1448:30:28;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1448:32:28;;;;;;;;-1:-1:-1;;1448:32:28;;;;;;;;;;;;:::i;:::-;;;1444:141;;-1:-1:-1;1572:2:28;1444:141;;;1526:3;-1:-1:-1;1444:141:28;1603:28;1617:3;1622:8;1603:13;:28::i;:::-;1594:37;1315:323;-1:-1:-1;;;;1315:323:28:o;811:243::-;868:20;919:5;-1:-1:-1;;;;;904:28:28;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;904:30:28;;;;;;;;;;;;:::i;:::-;;;900:148;;-1:-1:-1;;1023:14:28;;;;;;;;;;;;;;;;;;1060:249::o;634:205:4:-;773:58;;-1:-1:-1;;;;;19671:55:29;;773:58:4;;;19653:74:29;19743:18;;;19736:34;;;746:86:4;;766:5;;796:23;;19626:18:29;;773:58:4;19608:168:29;746:86:4;634:205;;;:::o;3140:706::-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:4;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:4;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:4;;24354:2:29;3744:85:4;;;24336:21:29;24393:2;24373:18;;;24366:30;24432:34;24412:18;;;24405:62;24503:12;24483:18;;;24476:40;24533:19;;3744:85:4;24326:232:29;2203:1926:28;2280:13;2304:22;2329:14;2335:8;2329:2;:14;:::i;:::-;2304:39;-1:-1:-1;2369:6:28;2354:12;;2433:295;2440:9;;2433:295;;2469:14;;;;2465:207;;2574:12;;;;:::i;:::-;;;;2465:207;;;2611:9;2618:2;2611:4;:9;:::i;:::-;:14;2607:65;;2645:12;;;;:::i;:::-;;;;2607:65;2685:8;;;;:::i;:::-;;-1:-1:-1;2707:10:28;;-1:-1:-1;2715:2:28;2707:10;;:::i;:::-;;;2433:295;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:33:28;;;2785:19;2794:10;2785:6;:19;:::i;:::-;2784:33;;;2781:1246;;2916:23;2925:14;2916:6;:23;:::i;:::-;2899:40;;2974:17;2983:8;2974:6;:17;:::i;:::-;2953:38;;:18;;;:38;;;3005:19;;;:40;2781:1246;;;3175:19;3184:10;3175:6;:19;:::i;:::-;3168:27;;:2;:27;:::i;:::-;3158:38;;:6;:38;:::i;:::-;3141:55;;3213:23;;;3210:807;;;3525:1;3500:22;;;:26;3567:17;3578:6;3567:8;:17;:::i;:::-;:21;;3587:1;3567:21;:::i;:::-;3544:44;;:20;;;:44;;;3627:33;;:10;:33;:::i;:::-;3606:54;;:18;;;:54;;;3678:19;;;:40;3759:4;3736:20;;;:27;3210:807;;;3927:14;:10;3940:1;3927:14;:::i;:::-;3906:35;;:18;;;:35;3981:17;3990:8;3981:6;:17;:::i;:::-;:21;;4001:1;3981:21;:::i;:::-;3959:43;;:19;;;:43;3210:807;4058:18;;;;4036:40;;:19;;;:40;4093:29;4058:6;4093:21;:29::i;:::-;4086:36;2203:1926;-1:-1:-1;;;;;;;;2203:1926:28:o;3461:223:5:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;4962:872:28:-;5050:13;5075:19;5107:6;:19;;;5097:30;;;;;;;;-1:-1:-1;;;5097:30:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5097:30:28;;5075:52;;5141:6;:20;;;5137:95;;;5177:15;:6;5184:1;5177:9;;;;;;-1:-1:-1;;;5177:9:28;;;;;;;;;;;;:15;;;;;;;;;;;5206;:6;5213:1;5206:9;;;;;;-1:-1:-1;;;5206:9:28;;;;;;;;;;;;:15;;;;;;;;;;;5137:95;5305:22;;;;5283:44;;5278:166;5343:6;:20;;;5329:34;;:11;:34;5278:166;;;5429:2;5416:17;;5394:6;5401:11;5394:19;;;;;;-1:-1:-1;;;5394:19:28;;;;;;;;;;;;:39;;;;;;;;;;-1:-1:-1;5365:13:28;;;;:::i;:::-;;;;5278:166;;;;5476:321;5483:14;;:18;5476:321;;5543:1;5521:6;:19;;;:23;;;:68;;;;;5570:6;:19;;;5548:41;;:6;:18;;;:41;;;5521:68;5517:141;;;5609:34;:6;5618;:18;;5616:20;;;;;:::i;:::-;;;;;;;5609:28;;;;;;-1:-1:-1;;;5609:28:28;;;;;;;;;;;;:34;;;;;;;;;;;5517:141;5730:14;;:19;;5747:2;;5730:19;:::i;:::-;5715:35;;5723:2;5715:35;:::i;:::-;5702:50;;5671:6;5680;:18;;5678:20;;;;;:::i;:::-;;;;;;;5671:28;;;;;;-1:-1:-1;;;5671:28:28;;;;;;;;;;;;:81;;;;;;;;;;;5784:2;5766:6;:14;;:20;;;;;;;:::i;:::-;;;-1:-1:-1;5476:321:28;;4548:500:5;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:5;;22215:2:29;4737:81:5;;;22197:21:29;22254:2;22234:18;;;22227:30;22293:34;22273:18;;;22266:62;22364:8;22344:18;;;22337:36;22390:19;;4737:81:5;22187:228:29;4737:81:5;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:5;;23996:2:29;4828:60:5;;;23978:21:29;24035:2;24015:18;;;24008:30;24074:31;24054:18;;;24047:59;24123:18;;4828:60:5;23968:179:29;4828:60:5;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:5;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:5:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:5;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7408:145;7598:12;7591:20;;-1:-1:-1;;;7591:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:336:29;78:5;107:52;123:35;151:6;123:35;:::i;:::-;107:52;:::i;:::-;98:61;;182:6;175:5;168:21;222:3;213:6;208:3;204:16;201:25;198:2;;;239:1;236;229:12;198:2;288:6;283:3;276:4;269:5;265:16;252:43;342:1;335:4;326:6;319:5;315:18;311:29;304:40;88:262;;;;;:::o;355:134::-;423:20;;452:31;423:20;452:31;:::i;494:693::-;548:5;601:3;594:4;586:6;582:17;578:27;568:2;;623:5;616;609:20;568:2;663:6;650:20;689:4;713:60;729:43;769:2;729:43;:::i;713:60::-;795:3;819:2;814:3;807:15;847:2;842:3;838:12;831:19;;882:2;874:6;870:15;934:3;929:2;923;920:1;916:10;908:6;904:23;900:32;897:41;894:2;;;955:5;948;941:20;894:2;981:5;995:163;1009:2;1006:1;1003:9;995:163;;;1066:17;;1054:30;;1104:12;;;;1136;;;;1027:1;1020:9;995:163;;;-1:-1:-1;1176:5:29;;558:629;-1:-1:-1;;;;;;;558:629:29:o;1192:128::-;1257:20;;1286:28;1257:20;1286:28;:::i;1325:228::-;1367:5;1420:3;1413:4;1405:6;1401:17;1397:27;1387:2;;1442:5;1435;1428:20;1387:2;1468:79;1543:3;1534:6;1521:20;1514:4;1506:6;1502:17;1468:79;:::i;1558:557::-;1626:5;1674:4;1662:9;1657:3;1653:19;1649:30;1646:2;;;1696:5;1689;1682:20;1646:2;1733:4;1727:11;1777:4;1769:6;1765:17;1848:6;1836:10;1833:22;1812:18;1800:10;1797:34;1794:62;1791:2;;;1859:18;;:::i;:::-;1901:10;1895:4;1888:24;;1930:6;1921:15;;1966:9;1960:16;1985:33;2010:7;1985:33;:::i;:::-;2027:23;;2104:2;2089:18;;;2083:25;2066:15;;2059:50;;;;1636:479;;-1:-1:-1;1636:479:29:o;2120:257::-;2179:6;2232:2;2220:9;2211:7;2207:23;2203:32;2200:2;;;2253:6;2245;2238:22;2200:2;2297:9;2284:23;2316:31;2341:5;2316:31;:::i;2382:261::-;2452:6;2505:2;2493:9;2484:7;2480:23;2476:32;2473:2;;;2526:6;2518;2511:22;2473:2;2563:9;2557:16;2582:31;2607:5;2582:31;:::i;2648:1012::-;2743:6;2774:2;2817;2805:9;2796:7;2792:23;2788:32;2785:2;;;2838:6;2830;2823:22;2785:2;2876:9;2870:16;2909:18;2901:6;2898:30;2895:2;;;2946:6;2938;2931:22;2895:2;2974:22;;3027:4;3019:13;;3015:27;-1:-1:-1;3005:2:29;;3061:6;3053;3046:22;3005:2;3095;3089:9;3118:60;3134:43;3174:2;3134:43;:::i;3118:60::-;3200:3;3224:2;3219:3;3212:15;3252:2;3247:3;3243:12;3236:19;;3283:2;3279;3275:11;3331:7;3326:2;3320;3317:1;3313:10;3309:2;3305:19;3301:28;3298:41;3295:2;;;3357:6;3349;3342:22;3295:2;3384:6;3375:15;;3399:231;3413:2;3410:1;3407:9;3399:231;;;3477:3;3471:10;3494:31;3519:5;3494:31;:::i;:::-;3538:18;;3431:1;3424:9;;;;;3576:12;;;;3608;;3399:231;;;-1:-1:-1;3649:5:29;2754:906;-1:-1:-1;;;;;;;2754:906:29:o;3665:1010::-;3788:6;3819:2;3862;3850:9;3841:7;3837:23;3833:32;3830:2;;;3883:6;3875;3868:22;3830:2;3921:9;3915:16;3954:18;3946:6;3943:30;3940:2;;;3991:6;3983;3976:22;3940:2;4019:22;;4072:4;4064:13;;4060:27;-1:-1:-1;4050:2:29;;4106:6;4098;4091:22;4050:2;4140;4134:9;4163:60;4179:43;4219:2;4179:43;:::i;4163:60::-;4245:3;4269:2;4264:3;4257:15;4297:2;4292:3;4288:12;4281:19;;4328:2;4324;4320:11;4376:7;4371:2;4365;4362:1;4358:10;4354:2;4350:19;4346:28;4343:41;4340:2;;;4402:6;4394;4387:22;4340:2;4429:6;4420:15;;4444:201;4458:2;4455:1;4452:9;4444:201;;;4515:53;4560:7;4555:3;4515:53;:::i;:::-;4503:66;;4476:1;4469:9;;;;;4589:12;;;;4630:4;4621:14;4444:201;;4680:1010;4803:6;4834:2;4877;4865:9;4856:7;4852:23;4848:32;4845:2;;;4898:6;4890;4883:22;4845:2;4936:9;4930:16;4969:18;4961:6;4958:30;4955:2;;;5006:6;4998;4991:22;4955:2;5034:22;;5087:4;5079:13;;5075:27;-1:-1:-1;5065:2:29;;5121:6;5113;5106:22;5065:2;5155;5149:9;5178:60;5194:43;5234:2;5194:43;:::i;5178:60::-;5260:3;5284:2;5279:3;5272:15;5312:2;5307:3;5303:12;5296:19;;5343:2;5339;5335:11;5391:7;5386:2;5380;5377:1;5373:10;5369:2;5365:19;5361:28;5358:41;5355:2;;;5417:6;5409;5402:22;5355:2;5444:6;5435:15;;5459:201;5473:2;5470:1;5467:9;5459:201;;;5530:53;5575:7;5570:3;5530:53;:::i;:::-;5518:66;;5491:1;5484:9;;;;;5604:12;;;;5645:4;5636:14;5459:201;;5695:937;5790:6;5821:2;5864;5852:9;5843:7;5839:23;5835:32;5832:2;;;5885:6;5877;5870:22;5832:2;5923:9;5917:16;5956:18;5948:6;5945:30;5942:2;;;5993:6;5985;5978:22;5942:2;6021:22;;6074:4;6066:13;;6062:27;-1:-1:-1;6052:2:29;;6108:6;6100;6093:22;6052:2;6142;6136:9;6165:60;6181:43;6221:2;6181:43;:::i;6165:60::-;6247:3;6271:2;6266:3;6259:15;6299:2;6294:3;6290:12;6283:19;;6330:2;6326;6322:11;6378:7;6373:2;6367;6364:1;6360:10;6356:2;6352:19;6348:28;6345:41;6342:2;;;6404:6;6396;6389:22;6342:2;6431:6;6422:15;;6446:156;6460:2;6457:1;6454:9;6446:156;;;6517:10;;6505:23;;6478:1;6471:9;;;;;6548:12;;;;6580;;6446:156;;6637:255;6704:6;6757:2;6745:9;6736:7;6732:23;6728:32;6725:2;;;6778:6;6770;6763:22;6725:2;6815:9;6809:16;6834:28;6856:5;6834:28;:::i;6897:194::-;6967:6;7020:2;7008:9;6999:7;6995:23;6991:32;6988:2;;;7041:6;7033;7026:22;6988:2;-1:-1:-1;7069:16:29;;6978:113;-1:-1:-1;6978:113:29:o;7096:352::-;7154:6;7207:2;7195:9;7186:7;7182:23;7178:32;7175:2;;;7228:6;7220;7213:22;7175:2;7272:9;7259:23;7322:66;7315:5;7311:78;7304:5;7301:89;7291:2;;7409:6;7401;7394:22;7453:480;7522:6;7575:2;7563:9;7554:7;7550:23;7546:32;7543:2;;;7596:6;7588;7581:22;7543:2;7641:9;7628:23;7674:18;7666:6;7663:30;7660:2;;;7711:6;7703;7696:22;7660:2;7739:22;;7792:4;7784:13;;7780:27;-1:-1:-1;7770:2:29;;7826:6;7818;7811:22;7770:2;7854:73;7919:7;7914:2;7901:16;7896:2;7892;7888:11;7854:73;:::i;7938:675::-;8018:6;8071:2;8059:9;8050:7;8046:23;8042:32;8039:2;;;8092:6;8084;8077:22;8039:2;8130:9;8124:16;8163:18;8155:6;8152:30;8149:2;;;8200:6;8192;8185:22;8149:2;8228:22;;8281:4;8273:13;;8269:27;-1:-1:-1;8259:2:29;;8315:6;8307;8300:22;8259:2;8349;8343:9;8374:48;8390:31;8418:2;8390:31;:::i;8374:48::-;8445:2;8438:5;8431:17;8485:7;8480:2;8475;8471;8467:11;8463:20;8460:33;8457:2;;;8511:6;8503;8496:22;8457:2;8529:54;8580:2;8575;8568:5;8564:14;8559:2;8555;8551:11;8529:54;:::i;:::-;8602:5;8029:584;-1:-1:-1;;;;;8029:584:29:o;8618:190::-;8677:6;8730:2;8718:9;8709:7;8705:23;8701:32;8698:2;;;8751:6;8743;8736:22;8698:2;-1:-1:-1;8779:23:29;;8688:120;-1:-1:-1;8688:120:29:o;9012:1554::-;9152:6;9160;9168;9176;9184;9228:9;9219:7;9215:23;9258:3;9254:2;9250:12;9247:2;;;9280:6;9272;9265:22;9247:2;9321:9;9308:23;9298:33;;9381:2;9370:9;9366:18;9353:32;9394:31;9419:5;9394:31;:::i;:::-;9444:5;-1:-1:-1;9496:2:29;9481:18;;9468:32;;-1:-1:-1;9519:6:29;9549:66;9541:75;;9537:84;-1:-1:-1;9534:2:29;;;9639:6;9631;9624:22;9534:2;9672:22;;:::i;:::-;9657:37;;9719:38;9753:2;9742:9;9738:18;9719:38;:::i;:::-;9710:7;9703:55;9792:39;9826:3;9815:9;9811:19;9792:39;:::i;:::-;9787:2;9778:7;9774:16;9767:65;9894:3;9883:9;9879:19;9866:33;9861:2;9852:7;9848:16;9841:59;9962:3;9951:9;9947:19;9934:33;9929:2;9920:7;9916:16;9909:59;10031:3;10020:9;10016:19;10003:33;9997:3;9988:7;9984:17;9977:60;10056:3;10122:2;10111:9;10107:18;10094:32;10088:3;10079:7;10075:17;10068:59;10162:35;10193:2;10182:9;10178:18;10162:35;:::i;:::-;10156:3;10147:7;10143:17;10136:62;10233:36;10264:3;10253:9;10249:19;10233:36;:::i;:::-;10227:3;10218:7;10214:17;10207:63;10304:36;10335:3;10324:9;10320:19;10304:36;:::i;:::-;10286:16;;;10279:62;-1:-1:-1;10290:7:29;-1:-1:-1;10418:3:29;10403:19;;10390:33;10446:18;10435:30;;10432:2;;;10483:6;10475;10468:22;10432:2;10511:49;10552:7;10543:6;10532:9;10528:22;10511:49;:::i;:::-;10501:59;;;9195:1371;;;;;;;;:::o;10571:543::-;10665:6;10673;10681;10689;10742:3;10730:9;10721:7;10717:23;10713:33;10710:2;;;10764:6;10756;10749:22;10710:2;10805:9;10792:23;10782:33;;10865:2;10854:9;10850:18;10837:32;10878:31;10903:5;10878:31;:::i;:::-;10928:5;-1:-1:-1;10985:2:29;10970:18;;10957:32;10998:33;10957:32;10998:33;:::i;:::-;10700:414;;;;-1:-1:-1;11050:7:29;;11104:2;11089:18;11076:32;;-1:-1:-1;;10700:414:29:o;11119:707::-;11227:6;11235;11243;11251;11304:3;11292:9;11283:7;11279:23;11275:33;11272:2;;;11326:6;11318;11311:22;11272:2;11367:9;11354:23;11344:33;;11428:2;11417:9;11413:18;11400:32;11455:18;11447:6;11444:30;11441:2;;;11492:6;11484;11477:22;11441:2;11520:61;11573:7;11564:6;11553:9;11549:22;11520:61;:::i;:::-;11510:71;;;11631:2;11620:9;11616:18;11603:32;11644:31;11669:5;11644:31;:::i;:::-;11694:5;-1:-1:-1;11751:2:29;11736:18;;11723:32;11764:30;11723:32;11764:30;:::i;:::-;11262:564;;;;-1:-1:-1;11262:564:29;;-1:-1:-1;;11262:564:29:o;11831:640::-;11942:6;11950;11958;11966;12019:3;12007:9;11998:7;11994:23;11990:33;11987:2;;;12041:6;12033;12026:22;11987:2;12082:9;12069:23;12059:33;;12143:2;12132:9;12128:18;12115:32;12170:18;12162:6;12159:30;12156:2;;;12207:6;12199;12192:22;12156:2;12235:61;12288:7;12279:6;12268:9;12264:22;12235:61;:::i;:::-;12225:71;;;12343:2;12332:9;12328:18;12315:32;12305:42;;12397:2;12386:9;12382:18;12369:32;12410:31;12435:5;12410:31;:::i;12476:408::-;12553:6;12561;12614:2;12602:9;12593:7;12589:23;12585:32;12582:2;;;12635:6;12627;12620:22;12582:2;12676:9;12663:23;12653:33;;12737:2;12726:9;12722:18;12709:32;12764:18;12756:6;12753:30;12750:2;;;12801:6;12793;12786:22;12750:2;12829:49;12870:7;12861:6;12850:9;12846:22;12829:49;:::i;:::-;12819:59;;;12572:312;;;;;:::o;12889:258::-;12957:6;12965;13018:2;13006:9;12997:7;12993:23;12989:32;12986:2;;;13039:6;13031;13024:22;12986:2;-1:-1:-1;;13067:23:29;;;13137:2;13122:18;;;13109:32;;-1:-1:-1;12976:171:29:o;13152:393::-;13229:6;13237;13245;13298:2;13286:9;13277:7;13273:23;13269:32;13266:2;;;13319:6;13311;13304:22;13266:2;13360:9;13347:23;13337:33;;13417:2;13406:9;13402:18;13389:32;13379:42;;13471:2;13460:9;13456:18;13443:32;13484:31;13509:5;13484:31;:::i;:::-;13534:5;13524:15;;;13256:289;;;;;:::o;13550:462::-;13636:6;13644;13652;13660;13713:3;13701:9;13692:7;13688:23;13684:33;13681:2;;;13735:6;13727;13720:22;13681:2;13776:9;13763:23;13753:33;;13833:2;13822:9;13818:18;13805:32;13795:42;;13884:2;13873:9;13869:18;13856:32;13846:42;;13938:2;13927:9;13923:18;13910:32;13951:31;13976:5;13951:31;:::i;14017:293::-;14085:6;14138:2;14126:9;14117:7;14113:23;14109:32;14106:2;;;14159:6;14151;14144:22;14106:2;14196:9;14190:16;14246:4;14239:5;14235:16;14228:5;14225:27;14215:2;;14271:6;14263;14256:22;14543:316;14584:3;14622:5;14616:12;14649:6;14644:3;14637:19;14665:63;14721:6;14714:4;14709:3;14705:14;14698:4;14691:5;14687:16;14665:63;:::i;:::-;14773:2;14761:15;-1:-1:-1;;14757:88:29;14748:98;;;;14848:4;14744:109;;14592:267;-1:-1:-1;;14592:267:29:o;14864:763::-;-1:-1:-1;;;;;15019:2:29;15011:5;15005:12;15001:21;14996:3;14989:34;15084:2;15076:4;15069:5;15065:16;15059:23;15055:32;15048:4;15043:3;15039:14;15032:56;;15137:4;15130:5;15126:16;15120:23;15113:4;15108:3;15104:14;15097:47;15193:4;15186:5;15182:16;15176:23;15169:4;15164:3;15160:14;15153:47;15249:4;15242:5;15238:16;15232:23;15225:4;15220:3;15216:14;15209:47;15305:4;15298:5;15294:16;15288:23;15281:4;15276:3;15272:14;15265:47;15375:4;15368:5;15364:16;15358:23;15351:31;15344:39;15337:4;15332:3;15328:14;15321:63;15430:4;15423:5;15419:16;15413:23;15445:45;15484:4;15479:3;15475:14;15461:12;14517:13;14510:21;14498:34;;14488:50;15445:45;-1:-1:-1;15509:6:29;15552:14;;;15546:21;14517:13;;14510:21;15608:12;;;14498:34;15576:45;14488:50;15632:274;15761:3;15799:6;15793:13;15815:53;15861:6;15856:3;15849:4;15841:6;15837:17;15815:53;:::i;:::-;15884:16;;;;;15769:137;-1:-1:-1;;15769:137:29:o;15911:470::-;16090:3;16128:6;16122:13;16144:53;16190:6;16185:3;16178:4;16170:6;16166:17;16144:53;:::i;:::-;16260:13;;16219:16;;;;16282:57;16260:13;16219:16;16316:4;16304:17;;16282:57;:::i;:::-;16355:20;;16098:283;-1:-1:-1;;;;16098:283:29:o;16386:787::-;16767:3;16805:6;16799:13;16821:53;16867:6;16862:3;16855:4;16847:6;16843:17;16821:53;:::i;:::-;16935:4;16896:16;;;16921:19;;;16965:13;;16987:65;16965:13;17039:1;17028:13;;17021:4;17009:17;;16987:65;:::i;:::-;17119:20;17115:1;17071:20;;;;17107:10;;;17100:40;17164:2;17156:11;;16775:398;-1:-1:-1;;;;16775:398:29:o;17178:440::-;17410:3;17448:6;17442:13;17464:53;17510:6;17505:3;17498:4;17490:6;17486:17;17464:53;:::i;:::-;17578:4;17539:16;;17564:19;;;-1:-1:-1;17610:1:29;17599:13;;17418:200;-1:-1:-1;17418:200:29:o;18257:1217::-;18525:4;18573:3;18562:9;18558:19;-1:-1:-1;;;;;18608:6:29;18604:55;18593:9;18586:74;18679:2;18717:3;18712:2;18701:9;18697:18;18690:31;18741:6;18776;18770:13;18807:6;18799;18792:22;18845:3;18834:9;18830:19;18823:26;;18908:3;18898:6;18895:1;18891:14;18880:9;18876:30;18872:40;18858:54;;18947:2;18939:6;18935:15;18968:4;18981:313;18995:6;18992:1;18989:13;18981:313;;;19084:66;19072:9;19064:6;19060:22;19056:95;19051:3;19044:108;19175:39;19207:6;19198;19192:13;19175:39;:::i;:::-;19165:49;-1:-1:-1;19272:12:29;;;;19237:15;;;;19017:1;19010:9;18981:313;;;-1:-1:-1;;;;14517:13:29;;14510:21;19365:2;19350:18;;14498:34;-1:-1:-1;19311:6:29;-1:-1:-1;19405:6:29;19400:2;19389:9;19385:18;19378:34;19421:47;19463:3;19452:9;19448:19;19440:6;-1:-1:-1;;;;;14381:54:29;14369:67;;14359:83;19421:47;18534:940;;;;;;;;:::o;20465:217::-;20612:2;20601:9;20594:21;20575:4;20632:44;20672:2;20661:9;20657:18;20649:6;20632:44;:::i;25095:1448::-;25509:25;;;25456:3;25553:2;25571:18;;;25564:30;;;25643:13;;25482:18;;;25665:22;;;25427:4;;25718:3;25703:19;;;25745:15;;;;25427:4;25791:218;25805:6;25802:1;25799:13;25791:218;;;25870:13;;-1:-1:-1;;;;;25866:62:29;25854:75;;25949:12;;;;25984:15;;;;25827:1;25820:9;25791:218;;;-1:-1:-1;;26045:19:29;;;26040:2;26025:18;;26018:47;26115:13;;26137:21;;;26213:15;;;;26176:12;;;-1:-1:-1;26248:4:29;26261:189;26277:8;26272:3;26269:17;26261:189;;;26346:15;;26332:30;;26423:17;;;;26384:14;;;;26305:1;26296:11;26261:189;;;26265:3;;;26467:5;26459:13;;;;26481:56;26533:2;26522:9;26518:18;26510:6;26481:56;:::i;26921:288::-;27096:6;27085:9;27078:25;27139:2;27134;27123:9;27119:18;27112:30;27059:4;27159:44;27199:2;27188:9;27184:18;27176:6;27159:44;:::i;27587:255::-;27659:2;27653:9;27701:6;27689:19;;27738:18;27723:34;;27759:22;;;27720:62;27717:2;;;27785:18;;:::i;:::-;27821:2;27814:22;27633:209;:::o;27847:334::-;27918:2;27912:9;27974:2;27964:13;;-1:-1:-1;;27960:86:29;27948:99;;28077:18;28062:34;;28098:22;;;28059:62;28056:2;;;28124:18;;:::i;:::-;28160:2;28153:22;27892:289;;-1:-1:-1;27892:289:29:o;28186:183::-;28246:4;28279:18;28271:6;28268:30;28265:2;;;28301:18;;:::i;:::-;-1:-1:-1;28346:1:29;28342:14;28358:4;28338:25;;28255:114::o;28374:245::-;28422:4;28455:18;28447:6;28444:30;28441:2;;;28477:18;;:::i;:::-;-1:-1:-1;28534:2:29;28522:15;-1:-1:-1;;28518:88:29;28608:4;28514:99;;28431:188::o;28624:128::-;28664:3;28695:1;28691:6;28688:1;28685:13;28682:2;;;28701:18;;:::i;:::-;-1:-1:-1;28737:9:29;;28672:80::o;28757:204::-;28795:3;28831:4;28828:1;28824:12;28863:4;28860:1;28856:12;28898:3;28892:4;28888:14;28883:3;28880:23;28877:2;;;28906:18;;:::i;:::-;28942:13;;28803:158;-1:-1:-1;;;28803:158:29:o;28966:120::-;29006:1;29032;29022:2;;29037:18;;:::i;:::-;-1:-1:-1;29071:9:29;;29012:74::o;29091:482::-;29180:1;29223:5;29180:1;29237:330;29258:7;29248:8;29245:21;29237:330;;;29377:4;29309:66;29305:77;29299:4;29296:87;29293:2;;;29386:18;;:::i;:::-;29436:7;29426:8;29422:22;29419:2;;;29456:16;;;;29419:2;29535:22;;;;29495:15;;;;29237:330;;;29241:3;29155:418;;;;;:::o;29578:140::-;29636:5;29665:47;29706:4;29696:8;29692:19;29686:4;29772:5;29802:8;29792:2;;-1:-1:-1;29843:1:29;29857:5;;29792:2;29891:4;29881:2;;-1:-1:-1;29928:1:29;29942:5;;29881:2;29973:4;29991:1;29986:59;;;;30059:1;30054:130;;;;29966:218;;29986:59;30016:1;30007:10;;30030:5;;;30054:130;30091:3;30081:8;30078:17;30075:2;;;30098:18;;:::i;:::-;-1:-1:-1;;30154:1:29;30140:16;;30169:5;;29966:218;;30268:2;30258:8;30255:16;30249:3;30243:4;30240:13;30236:36;30230:2;30220:8;30217:16;30212:2;30206:4;30203:12;30199:35;30196:77;30193:2;;;-1:-1:-1;30305:19:29;;;30337:5;;30193:2;30384:34;30409:8;30403:4;30384:34;:::i;:::-;30514:6;30446:66;30442:79;30433:7;30430:92;30427:2;;;30525:18;;:::i;:::-;30563:20;;29782:807;-1:-1:-1;;;29782:807:29:o;30594:228::-;30634:7;30760:1;30692:66;30688:74;30685:1;30682:81;30677:1;30670:9;30663:17;30659:105;30656:2;;;30767:18;;:::i;:::-;-1:-1:-1;30807:9:29;;30646:176::o;30827:125::-;30867:4;30895:1;30892;30889:8;30886:2;;;30900:18;;:::i;:::-;-1:-1:-1;30937:9:29;;30876:76::o;30957:195::-;30995:4;31032;31029:1;31025:12;31064:4;31061:1;31057:12;31089:3;31084;31081:12;31078:2;;;31096:18;;:::i;:::-;31133:13;;;31004:148;-1:-1:-1;;;31004:148:29:o;31157:258::-;31229:1;31239:113;31253:6;31250:1;31247:13;31239:113;;;31329:11;;;31323:18;31310:11;;;31303:39;31275:2;31268:10;31239:113;;;31370:6;31367:1;31364:13;31361:2;;;-1:-1:-1;;31405:1:29;31387:16;;31380:27;31210:205::o;31420:238::-;31457:3;31501:4;31494:5;31490:16;31525:7;31515:2;;31536:18;;:::i;:::-;31585:66;31572:80;;31465:193;-1:-1:-1;;31465:193:29:o;31663:437::-;31742:1;31738:12;;;;31785;;;31806:2;;31860:4;31852:6;31848:17;31838:27;;31806:2;31913;31905:6;31902:14;31882:18;31879:38;31876:2;;;-1:-1:-1;;;31947:1:29;31940:88;32051:4;32048:1;32041:15;32079:4;32076:1;32069:15;31876:2;;31718:382;;;:::o;32105:195::-;32144:3;32175:66;32168:5;32165:77;32162:2;;;32245:18;;:::i;:::-;-1:-1:-1;32292:1:29;32281:13;;32152:148::o;32305:175::-;32342:3;32386:4;32379:5;32375:16;32415:4;32406:7;32403:17;32400:2;;;32423:18;;:::i;:::-;32472:1;32459:15;;32350:130;-1:-1:-1;;32350:130:29:o;32485:112::-;32517:1;32543;32533:2;;32548:18;;:::i;:::-;-1:-1:-1;32582:9:29;;32523:74::o;32602:184::-;-1:-1:-1;;;32651:1:29;32644:88;32751:4;32748:1;32741:15;32775:4;32772:1;32765:15;32791:184;-1:-1:-1;;;32840:1:29;32833:88;32940:4;32937:1;32930:15;32964:4;32961:1;32954:15;32980:184;-1:-1:-1;;;33029:1:29;33022:88;33129:4;33126:1;33119:15;33153:4;33150:1;33143:15;33169:154;-1:-1:-1;;;;;33248:5:29;33244:54;33237:5;33234:65;33224:2;;33313:1;33310;33303:12;33328:118;33414:5;33407:13;33400:21;33393:5;33390:32;33380:2;;33436:1;33433;33426:12"},"gasEstimates":{"creation":{"codeDepositCost":"3339000","executionCost":"infinite","totalCost":"infinite"},"external":{"CONVEX_DEPOSIT_TOKEN()":"262","CURVE_LP()":"304","METADATA()":"infinite","REWARDS()":"261","STAKING_ADDRESS()":"284","STAKING_TOKEN()":"285","TEMPLATE()":"infinite","TOKEN()":"305","addressRegistry()":"1103","getAddressForFNFT(uint256)":"infinite","getAddressRegistry()":"1121","getAsset(uint256)":"406","getCustomMetadata(uint256)":"infinite","getOutputDisplayValues(uint256)":"infinite","getValue(uint256)":"infinite","handleAdditionalDeposit(uint256,uint256,uint256,address)":"infinite","handleFNFTRemaps(uint256,uint256[],address,bool)":"infinite","handleSplitOperation(uint256,uint256[],uint256,address)":"infinite","handleTimelockExtensions(uint256,uint256,address)":"infinite","kekIds(uint256)":"1228","lockTokens(uint256,uint256)":"infinite","owner()":"1143","receiveRevestOutput(uint256,address,address,uint256)":"infinite","receiveSecondaryCallback(uint256,address,uint256,(address,address,uint256,uint256,uint256,uint256,bool,bool,bool),bytes)":"infinite","renounceOwnership()":"23444","rescueERC20(address)":"infinite","rescueNativeFunds()":"infinite","setAddressRegistry(address)":"22036","setMetadata(string)":"infinite","supportsInterface(bytes4)":"484","transferOwnership(address)":"infinite","triggerOutputReceiverUpdate(uint256,bytes)":"infinite"},"internal":{"earned(uint256)":"infinite","getRevest()":"infinite"}},"methodIdentifiers":{"CONVEX_DEPOSIT_TOKEN()":"109bbf05","CURVE_LP()":"f443faeb","METADATA()":"38c3df07","REWARDS()":"c0034e0c","STAKING_ADDRESS()":"8c20570b","STAKING_TOKEN()":"0479d644","TEMPLATE()":"8bfd9174","TOKEN()":"82bfefc8","addressRegistry()":"f3ad65f4","getAddressForFNFT(uint256)":"ba156bcb","getAddressRegistry()":"8d9d6705","getAsset(uint256)":"eac8f5b8","getCustomMetadata(uint256)":"16f49e8a","getOutputDisplayValues(uint256)":"8ecacb1b","getValue(uint256)":"0ff4c916","handleAdditionalDeposit(uint256,uint256,uint256,address)":"1d145721","handleFNFTRemaps(uint256,uint256[],address,bool)":"644bf7d8","handleSplitOperation(uint256,uint256[],uint256,address)":"76da63f3","handleTimelockExtensions(uint256,uint256,address)":"1355f7ab","kekIds(uint256)":"4c238851","lockTokens(uint256,uint256)":"89158d8e","owner()":"8da5cb5b","receiveRevestOutput(uint256,address,address,uint256)":"aca1c665","receiveSecondaryCallback(uint256,address,uint256,(address,address,uint256,uint256,uint256,uint256,bool,bool,bool),bytes)":"f48fe050","renounceOwnership()":"715018a6","rescueERC20(address)":"ccec3716","rescueNativeFunds()":"063c27f8","setAddressRegistry(address)":"27c7812c","setMetadata(string)":"a49a1e7d","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","triggerOutputReceiverUpdate(uint256,bytes)":"d2551412"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"DepositERC1155OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"DepositERC20OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"DepositERC721OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"WithdrawERC1155OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"WithdrawERC20OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"WithdrawERC721OutputReceiver\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONVEX_DEPOSIT_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURVE_LP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATA\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARDS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEMPLATE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getAddressForFNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"smartWallAdd\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getCustomMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getOutputDisplayValues\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"displayData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"handleAdditionalDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"handleFNFTRemaps\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"proportions\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"handleSplitOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"handleTimelockExtensions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"kekIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToLock\",\"type\":\"uint256\"}],\"name\":\"lockTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"receiveRevestOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"receiveSecondaryCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescueNativeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressRegistry_\",\"type\":\"address\"}],\"name\":\"setAddressRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_meta\",\"type\":\"string\"}],\"name\":\"setMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"triggerOutputReceiverUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"RobAnon\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"LiquidDriver <> Revest integration for tokenizing xLQDR positions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCustomMetadata(uint256)\":{\"notice\":\"View Functions\"},\"handleAdditionalDeposit(uint256,uint256,uint256,address)\":{\"notice\":\"Prerequisite: User has approved this contract to spend tokens on their behalf\"},\"rescueERC20(address)\":{\"notice\":\"Under no circumstances should this contract ever contain ERC-20 tokens at the end of a transaction If it does, someone has mistakenly sent funds to the contract, and this function can rescue their tokens\"},\"rescueNativeFunds()\":{\"notice\":\"If funds are mistakenly sent to smart wallets, this will allow the owner to assist in rescue\"},\"setAddressRegistry(address)\":{\"notice\":\"Admin Functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RevestConvexFrax.sol\":\"RevestLiquidDriver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/RevestConvexFrax.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IAddressRegistry.sol\\\";\\nimport \\\"./interfaces/IOutputReceiverV3.sol\\\";\\nimport \\\"./interfaces/ITokenVault.sol\\\";\\nimport \\\"./interfaces/IRevest.sol\\\";\\nimport \\\"./interfaces/IFNFTHandler.sol\\\";\\nimport \\\"./interfaces/ILockManager.sol\\\";\\n\\nimport \\\"./interfaces/IFraxFarmERC20.sol\\\";\\nimport \\\"./interfaces/IFraxFarmBase.sol\\\";\\nimport \\\"./interfaces/IConvexWrapperV2.sol\\\";\\nimport \\\"./interfaces/IRewards.sol\\\";\\n\\nimport \\\"./VestedEscrowSmartWallet.sol\\\";\\n\\n// OZ imports\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\n\\n// Libraries\\nimport \\\"./lib/RevestHelper.sol\\\";\\n\\ninterface ITokenVaultTracker {\\n    function tokenTrackers(address token) external view returns (IRevest.TokenTracker memory);\\n}\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n}\\n\\n/**\\n * @title LiquidDriver <> Revest integration for tokenizing xLQDR positions\\n * @author RobAnon\\n * @dev \\n */\\ncontract RevestLiquidDriver is IOutputReceiverV3, Ownable, ERC165 {\\n    \\n    using SafeERC20 for IERC20;\\n\\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n\\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\\n\\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\\n\\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\\n\\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\\n\\n\\n    // Where to find the Revest address registry that contains info about what contracts live where\\n    address public addressRegistry;\\n\\n    // Token used for voting escrow\\n    address public constant TOKEN = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n\\n    // Template address for VE wallets\\n    address public immutable TEMPLATE;\\n\\n    // The file which tells our frontend how to visually represent such an FNFT\\n    string public METADATA = \\\"https://revest.mypinata.cloud/ipfs/QmRLesf7CzwLapJS3aWWM9wS9HqgvX8Z36zQhWSd1uMFmp\\\";\\n\\n    // Constant used for approval\\n    uint private constant MAX_INT = 2 ** 256 - 1;\\n\\n    uint private constant DAY = 86400;\\n\\n    uint private constant MAX_LOCKUP = 2 * 365 days;\\n\\n    mapping (uint => bytes32) public kekIds;\\n\\n\\n    // Initialize the contract with the needed valeus\\n    constructor(address _provider) {\\n        addressRegistry = _provider;\\n        VestedEscrowSmartWallet wallet = new VestedEscrowSmartWallet();\\n        TEMPLATE = address(wallet);\\n    }\\n\\n    modifier onlyRevestController() {\\n        require(msg.sender == IAddressRegistry(addressRegistry).getRevest(), 'Unauthorized Access!');\\n        _;\\n    }\\n\\n    modifier onlyTokenHolder(uint fnftId) {\\n        IAddressRegistry reg = IAddressRegistry(addressRegistry);\\n        require(IFNFTHandler(reg.getRevestFNFT()).getBalance(msg.sender, fnftId) > 0, 'E064');\\n        _;\\n    }\\n\\n    // Allows core Revest contracts to make sure this contract can do what is needed\\n    // Mandatory method\\n    function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IOutputReceiver).interfaceId\\n            || interfaceId == type(IOutputReceiverV2).interfaceId\\n            || interfaceId == type(IOutputReceiverV3).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    function lockTokens(\\n        uint endTime,\\n        uint amountToLock\\n    ) external payable returns (uint fnftId) {    \\n\\n        /// Mint FNFT\\n        {\\n            // Initialize the Revest config object\\n            IRevest.FNFTConfig memory fnftConfig;\\n\\n            // Want FNFT to be extendable and support multiple deposits\\n            fnftConfig.isMulti = true;\\n\\n            fnftConfig.maturityExtension = true;\\n\\n            // Will result in the asset being sent back to this contract upon withdrawal\\n            // Results solely in a callback\\n            fnftConfig.pipeToContract = address(this);  \\n\\n            // Set these two arrays according to Revest specifications to say\\n            // Who gets these FNFTs and how many copies of them we should create\\n            address[] memory recipients = new address[](1);\\n            recipients[0] = _msgSender();\\n\\n            uint[] memory quantities = new uint[](1);\\n            quantities[0] = 1;\\n\\n            address revest = IAddressRegistry(addressRegistry).getRevest();\\n\\n            \\n            fnftId = IRevest(revest).mintTimeLock(endTime, recipients, quantities, fnftConfig);\\n        }\\n\\n        address smartWallAdd;\\n        {\\n            // We deploy the smart wallet\\n            smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n            VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n\\n            // Transfer the tokens from the user to this wallet\\n            IERC20(CURVE_LP).safeTransferFrom(msg.sender, smartWallAdd, amountToLock);\\n\\n            // We deposit our funds into the wallet, store kek_id\\n            kekIds[fnftId] = wallet.createLock(amountToLock, endTime, msg.sender);\\n            wallet.cleanMemory();\\n            emit DepositERC20OutputReceiver(msg.sender, TOKEN, amountToLock, fnftId, abi.encode(smartWallAdd));\\n        }\\n    }\\n\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address,\\n        address payable caller,\\n        uint\\n    ) external override  {\\n        \\n        // Security check to make sure the Revest vault is the only contract that can call this method\\n        address vault = IAddressRegistry(addressRegistry).getTokenVault();\\n        require(_msgSender() == vault, 'E016');\\n\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n\\n        uint balance = wallet.withdraw(kekIds[fnftId], caller);\\n        wallet.cleanMemory();\\n        emit WithdrawERC20OutputReceiver(caller, TOKEN, balance, fnftId, abi.encode(smartWallAdd));\\n    }\\n\\n    // Not applicable, as these cannot be split\\n    function handleFNFTRemaps(uint, uint[] memory, address, bool) external pure override {\\n        require(false, 'Not applicable');\\n    }\\n    \\n    // Allows custom parameters to be passed during withdrawals\\n    // This and the proceeding method are both parts of the V2 output receiver interface\\n    // and not typically necessary. For the sake of demonstration, they are included\\n    function receiveSecondaryCallback(\\n        uint fnftId,\\n        address payable owner,\\n        uint quantity,\\n        IRevest.FNFTConfig memory config,\\n        bytes memory args\\n    ) external payable override {}\\n\\n    // Callback from Revest.sol to extend maturity\\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external override onlyRevestController {\\n        require(expiration - block.timestamp <= MAX_LOCKUP, 'Max lockup is 2 years');\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        wallet.increaseUnlockTime(expiration, kekIds[fnftId], caller);\\n    }\\n\\n    /// Prerequisite: User has approved this contract to spend tokens on their behalf\\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint, address caller) external override onlyRevestController {\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        IERC20(TOKEN).safeTransferFrom(caller, smartWallAdd, amountToDeposit);\\n        wallet.increaseAmount(amountToDeposit, kekIds[fnftId], caller);\\n    }\\n\\n    // Not applicable\\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external override {}\\n\\n    // Claims REWARDS on user's behalf\\n    function triggerOutputReceiverUpdate(\\n        uint fnftId,\\n        bytes memory\\n    ) external override onlyTokenHolder(fnftId) {\\n        address smartWallAdd = Clones.cloneDeterministic(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n        VestedEscrowSmartWallet wallet = VestedEscrowSmartWallet(smartWallAdd);\\n        wallet.claimRewards(msg.sender);\\n    }       \\n\\n\\n    /// Admin Functions\\n\\n    function setAddressRegistry(address addressRegistry_) external override onlyOwner {\\n        addressRegistry = addressRegistry_;\\n    }\\n\\n    function setMetadata(string memory _meta) external onlyOwner {\\n        METADATA = _meta;\\n    }\\n\\n    /// If funds are mistakenly sent to smart wallets, this will allow the owner to assist in rescue\\n    function rescueNativeFunds() external onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n    }\\n\\n    /// Under no circumstances should this contract ever contain ERC-20 tokens at the end of a transaction\\n    /// If it does, someone has mistakenly sent funds to the contract, and this function can rescue their tokens\\n    function rescueERC20(address token) external onlyOwner {\\n        uint amount = IERC20(token).balanceOf(address(this));\\n        IERC20(token).safeTransfer(msg.sender, amount);\\n    }\\n\\n    /// View Functions\\n\\n    function getCustomMetadata(uint) external view override returns (string memory) {\\n        return METADATA;\\n    }\\n    \\n    // Will give balance in LPs\\n    function getValue(uint fnftId) public view override returns (uint) {\\n        return IConvexWrapperV2(STAKING_TOKEN).totalBalanceOf(Clones.predictDeterministicAddress(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId))));\\n    }\\n\\n    // Must always be in native token\\n    function getAsset(uint) external pure override returns (address) {\\n        return CURVE_LP;\\n    }\\n\\n    function getOutputDisplayValues(uint fnftId) external view override returns (bytes memory displayData) {\\n        (address[] memory tokens, uint256[] memory rewardAmounts) = earned(fnftId);\\n        string[] memory rewardsDesc = new string[](rewardAmounts.length);\\n        bool hasRewards = rewardAmounts.length > 0;\\n        if(hasRewards) {\\n            for(uint i = 0; i < tokens.length; i++) {\\n                address token = tokens[i];\\n                string memory par1 = string(abi.encodePacked(RevestHelper.getName(token),\\\": \\\"));\\n                string memory par2 = string(abi.encodePacked(RevestHelper.amountToDecimal(rewardAmounts[i], token), \\\" [\\\", RevestHelper.getTicker(token), \\\"] Tokens Available\\\"));\\n                rewardsDesc[i] = string(abi.encodePacked(par1, par2));\\n            }\\n        }\\n        address smartWallet = getAddressForFNFT(fnftId);\\n        uint maxExtension = block.timestamp / (1 days) * (1 days) + MAX_LOCKUP; //Ensures no confusion with time zones and date-selectors\\n        displayData = abi.encode(smartWallet, rewardsDesc, hasRewards, maxExtension, TOKEN);\\n    }\\n\\n    function getAddressRegistry() external view override returns (address) {\\n        return addressRegistry;\\n    }\\n\\n    function getRevest() internal view returns (IRevest) {\\n        return IRevest(IAddressRegistry(addressRegistry).getRevest());\\n    }\\n\\n    function getAddressForFNFT(uint fnftId) public view returns (address smartWallAdd) {\\n        smartWallAdd = Clones.predictDeterministicAddress(TEMPLATE, keccak256(abi.encode(TOKEN, fnftId)));\\n    }\\n\\n    \\n    //helper function to combine earned tokens on staking contract and any tokens that are on this vault\\n    function earned(uint fnftId) internal view returns (address[] memory token_addresses, uint256[] memory total_earned) {\\n        //get list of reward tokens\\n        address smartWallAdd = getAddressForFNFT(fnftId);\\n\\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\\n        uint256[] memory stakedearned = IFraxFarmERC20(STAKING_ADDRESS).earned(smartWallAdd);\\n        IConvexWrapperV2.EarnedData[] memory convexrewards = IConvexWrapperV2(STAKING_TOKEN).earnedView(smartWallAdd);\\n\\n        uint256 extraRewardsLength = IRewards(REWARDS).rewardTokenLength();\\n        token_addresses = new address[](rewardTokens.length + extraRewardsLength + convexrewards.length);\\n        total_earned = new uint256[](rewardTokens.length + extraRewardsLength + convexrewards.length);\\n\\n        //add any tokens that happen to be already claimed but sitting on the vault\\n        //(ex. withdraw claiming REWARDS)\\n        for(uint256 i = 0; i < rewardTokens.length; i++){\\n            token_addresses[i] = rewardTokens[i];\\n            total_earned[i] = stakedearned[i] + IERC20(rewardTokens[i]).balanceOf(smartWallAdd);\\n        }\\n\\n        IRewards.EarnedData[] memory extraRewards = IRewards(REWARDS).claimableRewards(smartWallAdd);\\n        for(uint256 i = 0; i < extraRewards.length; i++){\\n            token_addresses[i+rewardTokens.length] = extraRewards[i].token;\\n            total_earned[i+rewardTokens.length] = extraRewards[i].amount;\\n        }\\n\\n        //add convex farm earned tokens\\n        for(uint256 i = 0; i < convexrewards.length; i++){\\n            token_addresses[i+rewardTokens.length+extraRewardsLength] = convexrewards[i].token;\\n            total_earned[i+rewardTokens.length+extraRewardsLength] = convexrewards[i].amount;\\n        }\\n    }\\n    \\n}\\n\",\"keccak256\":\"0xdb68b70dd9be7a4f49870af79dbea24c0a14ddd96eb8e13917c5eb0837fb19d1\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/VestedEscrowSmartWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\nimport \\\"./interfaces/IFraxFarmERC20.sol\\\";\\nimport \\\"./interfaces/IFraxFarmBase.sol\\\";\\nimport \\\"./interfaces/IConvexWrapperV2.sol\\\";\\nimport \\\"./interfaces/IRewards.sol\\\";\\n\\nimport \\\"./interfaces/IDistributor.sol\\\";\\nimport \\\"./interfaces/IRewardsHandler.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n\\npragma solidity ^0.8.0;\\n\\n/// @author RobAnon\\ncontract VestedEscrowSmartWallet {\\n\\n    using SafeERC20 for IERC20;\\n\\n    uint private constant MAX_INT = 2 ** 256 - 1;\\n\\n    address private immutable MASTER;\\n\\n    // Hardcoded for MVP\\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\\n\\n    address public constant FXS = 0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0;\\n    address public constant CRV = 0xD533a949740bb3306d119CC777fa900bA034cd52;\\n    address public constant CVX = 0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B;\\n\\n\\n\\n    constructor() {\\n        MASTER = msg.sender;\\n    }\\n\\n    modifier onlyMaster() {\\n        require(msg.sender == MASTER, 'Unauthorized!');\\n        _;\\n    }\\n\\n    function createLock(uint value, uint unlockTime, address user) external onlyMaster returns (bytes32 kek_id) {\\n        // Set all approvals up, don't if they're already set\\n        if(IERC20(STAKING_TOKEN).allowance(address(this), STAKING_ADDRESS) != MAX_INT) {\\n            IERC20(STAKING_TOKEN).approve(STAKING_ADDRESS, MAX_INT);\\n        }\\n        if(IERC20(CURVE_LP).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\\n            IERC20(CURVE_LP).approve(STAKING_TOKEN, MAX_INT);\\n        }\\n        if(IERC20(CONVEX_DEPOSIT_TOKEN).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\\n            IERC20(CONVEX_DEPOSIT_TOKEN).approve(STAKING_TOKEN, MAX_INT);\\n        }\\n\\n        //deposit into wrapper\\n        IConvexWrapperV2(STAKING_TOKEN).deposit(value, address(this));\\n\\n        //stake\\n        kek_id = IFraxFarmERC20(STAKING_ADDRESS).stakeLocked(value, unlockTime - block.timestamp);\\n        _checkpointRewards(user);\\n    }\\n\\n    function increaseAmount(uint amount, bytes32 kek_id, address user) external onlyMaster {\\n        if(amount > 0){\\n            //deposit into wrapper\\n            IConvexWrapperV2(STAKING_TOKEN).deposit(amount, address(this));\\n\\n            //add stake\\n            IFraxFarmERC20(STAKING_ADDRESS).lockAdditional(kek_id, amount);\\n        }\\n        \\n        //checkpoint rewards\\n        _checkpointRewards(user);\\n        _cleanMemory();\\n    }\\n\\n    function increaseUnlockTime(uint unlockTime, bytes32 kek_id, address user) external onlyMaster {\\n        //update time\\n        IFraxFarmERC20(STAKING_ADDRESS).lockLonger(kek_id, unlockTime);\\n        //checkpoint rewards\\n        _checkpointRewards(user);\\n        _cleanMemory();\\n    }\\n\\n    function withdraw(bytes32 kek_id, address user) external onlyMaster returns (uint balance) {\\n        // Withdraw\\n        IFraxFarmERC20(STAKING_ADDRESS).withdrawLocked(kek_id, address(this));\\n\\n        // Unwrap\\n        IConvexWrapperV2(STAKING_TOKEN).withdrawAndUnwrap(IERC20(STAKING_TOKEN).balanceOf(address(this)));\\n\\n        // Handle transfer\\n        balance = IERC20(CURVE_LP).balanceOf(address(this));\\n        IERC20(CURVE_LP).safeTransfer(user, balance);\\n        _checkpointRewards(user);\\n    }\\n\\n    function claimRewards(address user) external onlyMaster {\\n        _getReward(true, user); // Since this is just a demo, falling into edge cases acceptable.\\n        // Full produce will require proper edge-case handling for _getRewards\\n        _cleanMemory();\\n    }\\n\\n    /// Credit to doublesharp for the brilliant gas-saving concept\\n    /// Self-destructing clone pattern\\n    function cleanMemory() external onlyMaster {\\n        _cleanMemory();\\n    }\\n\\n    function _cleanMemory() internal {\\n        selfdestruct(payable(MASTER));\\n    }\\n\\n    //get reward with claim option.\\n    //_claim bool is for the off chance that rewardCollectionPause is true so getReward() fails but\\n    //there are tokens on this vault for cases such as withdraw() also calling claim.\\n    //can also be used to rescue tokens on the vault\\n    function _getReward(bool _claim, address user) internal {\\n\\n        //claim\\n        if(_claim){\\n            //claim frax farm\\n            IFraxFarmERC20(STAKING_ADDRESS).getReward(address(this));\\n            //claim convex farm and forward to owner\\n            IConvexWrapperV2(STAKING_TOKEN).getReward(address(this), user);\\n\\n            //double check there have been no crv/cvx claims directly to this address\\n            uint256 b = IERC20(CRV).balanceOf(address(this));\\n            if(b > 0){\\n                IERC20(CRV).safeTransfer(user, b);\\n            }\\n            b = IERC20(CVX).balanceOf(address(this));\\n            if(b > 0){\\n                IERC20(CVX).safeTransfer(user, b);\\n            }\\n        }\\n\\n        //process fxs fees\\n        _processFxs(user);\\n\\n        //get list of reward tokens\\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\\n\\n        //transfer\\n        _transferTokens(rewardTokens, user);\\n\\n        //extra rewards\\n        _processExtraRewards(user);\\n    }\\n\\n    //checkpoint and add/remove weight to convex rewards contract\\n    function _checkpointRewards(address user) internal{\\n        //if rewards are active, checkpoint\\n        if(IRewards(REWARDS).active()){\\n            //using liquidity shares from staking contract will handle rebasing tokens correctly\\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\\n            //get current balance of reward contract\\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\\n            if(userLiq >= bal){\\n                //add the difference to reward contract\\n                IRewards(REWARDS).deposit(user, userLiq - bal);\\n            }else{\\n                //remove the difference from the reward contract\\n                IRewards(REWARDS).withdraw(user, bal - userLiq);\\n            }\\n        }\\n    }\\n\\n    //apply fees to FXS and send remaining to owner\\n    function _processFxs(address user) internal{\\n\\n        // Transfer any FXS present to user\\n        uint sendAmount = IERC20(FXS).balanceOf(address(this));\\n        if(sendAmount > 0){\\n            IERC20(FXS).transfer(user, sendAmount);\\n        }\\n    }\\n\\n    //get extra rewards\\n    function _processExtraRewards(address user) internal{\\n        if(IRewards(REWARDS).active()){\\n            //check if there is a balance because the reward contract could have be activated later\\n            //dont use _checkpointRewards since difference of 0 will still call deposit() and cost gas\\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\\n            if(bal == 0 && userLiq > 0){\\n                //bal == 0 and liq > 0 can only happen if rewards were turned on after staking\\n                IRewards(REWARDS).deposit(user,userLiq);\\n            }\\n            IRewards(REWARDS).getReward(user);\\n        }\\n    }\\n\\n    //transfer other reward tokens besides FXS(which needs to have fees applied)\\n    function _transferTokens(address[] memory _tokens, address user) internal{\\n        //transfer all tokens\\n        for(uint256 i = 0; i < _tokens.length; i++){\\n            if(_tokens[i] != FXS){\\n                uint256 bal = IERC20(_tokens[i]).balanceOf(address(this));\\n                if(bal > 0){\\n                    IERC20(_tokens[i]).safeTransfer(user, bal);\\n                }\\n            }\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xc120b2fda12365bb110d517869e6cd51f4c8efe3080786dc6f8de7494320fa13\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IAddressRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n * @dev\\n *\\n */\\ninterface IAddressRegistry {\\n\\n    function initialize(\\n        address lock_manager_,\\n        address liquidity_,\\n        address revest_token_,\\n        address token_vault_,\\n        address revest_,\\n        address fnft_,\\n        address metadata_,\\n        address admin_,\\n        address rewards_\\n    ) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function setAdmin(address admin) external;\\n\\n    function getLockManager() external view returns (address);\\n\\n    function setLockManager(address manager) external;\\n\\n    function getTokenVault() external view returns (address);\\n\\n    function setTokenVault(address vault) external;\\n\\n    function getRevestFNFT() external view returns (address);\\n\\n    function setRevestFNFT(address fnft) external;\\n\\n    function getMetadataHandler() external view returns (address);\\n\\n    function setMetadataHandler(address metadata) external;\\n\\n    function getRevest() external view returns (address);\\n\\n    function setRevest(address revest) external;\\n\\n    function getDEX(uint index) external view returns (address);\\n\\n    function setDex(address dex) external;\\n\\n    function getRevestToken() external view returns (address);\\n\\n    function setRevestToken(address token) external;\\n\\n    function getRewardsHandler() external view returns(address);\\n\\n    function setRewardsHandler(address esc) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLPs() external view returns (address);\\n\\n    function setLPs(address liquidToken) external;\\n\\n}\\n\",\"keccak256\":\"0x129fecf36c5c18bcf17fcbb1b09267d52ca7a6e136ab9eaa037fd123d4822685\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IConvexWrapperV2.sol\":{\"content\":\"interface IConvexWrapperV2{\\n\\n   struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n\\n  function collateralVault() external view returns(address vault);\\n  function convexPoolId() external view returns(uint256 _poolId);\\n  function balanceOf(address _account) external view returns(uint256);\\n  function totalBalanceOf(address _account) external view returns(uint256);\\n  function deposit(uint256 _amount, address _to) external;\\n  function stake(uint256 _amount, address _to) external;\\n  function withdraw(uint256 _amount) external;\\n  function withdrawAndUnwrap(uint256 _amount) external;\\n  function getReward(address _account) external;\\n  function getReward(address _account, address _forwardTo) external;\\n  function rewardLength() external view returns(uint256);\\n  function earned(address _account) external returns(EarnedData[] memory claimable);\\n  function earnedView(address _account) external view returns(EarnedData[] memory claimable);\\n  function setVault(address _vault) external;\\n  function user_checkpoint(address[2] calldata _accounts) external returns(bool);\\n}\\n\",\"keccak256\":\"0xb8840d397b7bc4beb21b1cbc0a81f5b28ced3728cdfc216b1de960a0c0f0e449\"},\"contracts/interfaces/IDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IDistributor {\\n\\n    function claim() external returns (uint amountTransferred);\\n\\n    function N_COINS() external view returns (uint n);\\n\\n    function tokens(uint index) external view returns (address token);\\n\\n    function user_epoch_of(address _addr) external view returns (uint epoch);\\n\\n    function tokens_per_day(uint index, uint index2) external view returns (uint tokensPerDay);\\n\\n    function start_time() external view returns (uint startTime);\\n\\n    function last_token_times(uint index) external view returns (uint lastTime);//Call with index 0\\n\\n    function time_cursor() external view returns (uint timeCursor);\\n\\n    function time_cursor_of(address addr) external view returns (uint timeCursor);\\n\\n    function ve_supply(uint index) external view returns (uint supply);\\n\\n}\\n\",\"keccak256\":\"0x23be8c33a74f1edc05db02131855cef8250231bc41dc3122f9483dca6b4e11be\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IFNFTHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n\\ninterface IFNFTHandler  {\\n    function mint(address account, uint id, uint amount, bytes memory data) external;\\n\\n    function mintBatchRec(address[] memory recipients, uint[] memory quantities, uint id, uint newSupply, bytes memory data) external;\\n\\n    function mintBatch(address to, uint[] memory ids, uint[] memory amounts, bytes memory data) external;\\n\\n    function setURI(string memory newuri) external;\\n\\n    function burn(address account, uint id, uint amount) external;\\n\\n    function burnBatch(address account, uint[] memory ids, uint[] memory amounts) external;\\n\\n    function getBalance(address tokenHolder, uint id) external view returns (uint);\\n\\n    function getSupply(uint fnftId) external view returns (uint);\\n\\n    function getNextId() external view returns (uint);\\n}\\n\",\"keccak256\":\"0x9824a781b38146e5d6cd04f7a7a126ad3047188f39b8ac63189124219b524df6\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IFraxFarmBase.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IFraxFarmBase{\\n\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n\\n}\",\"keccak256\":\"0x345cf192a1be9f325aa553e9baf7dfa99ee8cf940febbd38e55ff16965ddb7d1\"},\"contracts/interfaces/IFraxFarmERC20.sol\":{\"content\":\"\\ninterface IFraxFarmERC20 {\\n    \\n    struct LockedStake {\\n        bytes32 kek_id;\\n        uint256 start_timestamp;\\n        uint256 liquidity;\\n        uint256 ending_timestamp;\\n        uint256 lock_multiplier; // 6 decimals of precision. 1x = 1000000\\n    }\\n\\n    function owner() external view returns (address);\\n    function stakingToken() external view returns (address);\\n    function fraxPerLPToken() external view returns (uint256);\\n    function calcCurCombinedWeight(address account) external view\\n        returns (\\n            uint256 old_combined_weight,\\n            uint256 new_vefxs_multiplier,\\n            uint256 new_combined_weight\\n        );\\n    function lockedStakesOf(address account) external view returns (LockedStake[] memory);\\n    function lockedStakesOfLength(address account) external view returns (uint256);\\n    function lockAdditional(bytes32 kek_id, uint256 addl_liq) external;\\n    function lockLonger(bytes32 kek_id, uint256 new_ending_ts) external;\\n    function stakeLocked(uint256 liquidity, uint256 secs) external returns (bytes32);\\n    function withdrawLocked(bytes32 kek_id, address destination_address) external returns (uint256);\\n\\n\\n\\n    function periodFinish() external view returns (uint256);\\n    function getAllRewardTokens() external view returns (address[] memory);\\n    function earned(address account) external view returns (uint256[] memory new_earned);\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n    function totalCombinedWeight() external view returns (uint256);\\n    function combinedWeightOf(address account) external view returns (uint256);\\n    function lockMultiplier(uint256 secs) external view returns (uint256);\\n    function rewardRates(uint256 token_idx) external view returns (uint256 rwd_rate);\\n\\n    function userStakedFrax(address account) external view returns (uint256);\\n    function proxyStakedFrax(address proxy_address) external view returns (uint256);\\n    function maxLPForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoostProxy(address proxy_address) external view returns (uint256);\\n    function veFXSMultiplier(address account) external view returns (uint256 vefxs_multiplier);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n    function vefxs_max_multiplier() external view returns(uint256);\\n    function vefxs_boost_scale_factor() external view returns(uint256);\\n    function vefxs_per_frax_for_max_boost() external view returns(uint256);\\n    function getProxyFor(address addr) external view returns (address);\\n\\n    function sync() external;\\n}\",\"keccak256\":\"0xed963af53ab2562f97d7d9e883939ac82945d9d7b614fb26707b4d803cc0b600\"},\"contracts/interfaces/ILockManager.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ILockManager {\\n\\n    function createLock(uint fnftId, IRevest.LockParam memory lock) external returns (uint);\\n\\n    function getLock(uint lockId) external view returns (IRevest.Lock memory);\\n\\n    function fnftIdToLockId(uint fnftId) external view returns (uint);\\n\\n    function fnftIdToLock(uint fnftId) external view returns (IRevest.Lock memory);\\n\\n    function pointFNFTToLock(uint fnftId, uint lockId) external;\\n\\n    function lockTypes(uint tokenId) external view returns (IRevest.LockType);\\n\\n    function unlockFNFT(uint fnftId, address sender) external returns (bool);\\n\\n    function getLockMaturity(uint fnftId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7b3170ed345d9750b315197f48f8076c8731e21640f7a063563bc93a6c2d1c00\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiver is IRegistryProvider, IERC165 {\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address asset,\\n        address payable owner,\\n        uint quantity\\n    ) external;\\n\\n    function getCustomMetadata(uint fnftId) external view returns (string memory);\\n\\n    function getValue(uint fnftId) external view returns (uint);\\n\\n    function getAsset(uint fnftId) external view returns (address);\\n\\n    function getOutputDisplayValues(uint fnftId) external view returns (bytes memory);\\n\\n}\\n\",\"keccak256\":\"0xdb291a6d6ff61ba3992f23044751c20736dbde86d879d3a466c854382abd9550\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV2.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiver.sol\\\";\\nimport \\\"./IRevest.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV2 is IOutputReceiver {\\n\\n    // Future proofing for secondary callbacks during withdrawal\\n    // Could just use triggerOutputReceiverUpdate and call withdrawal function\\n    // But deliberately using reentry is poor form and reminds me too much of OAuth 2.0 \\n    function receiveSecondaryCallback(\\n        uint fnftId,\\n        address payable owner,\\n        uint quantity,\\n        IRevest.FNFTConfig memory config,\\n        bytes memory args\\n    ) external payable;\\n\\n    // Allows for similar function to address lock, updating state while still locked\\n    // Called by the user directly\\n    function triggerOutputReceiverUpdate(\\n        uint fnftId,\\n        bytes memory args\\n    ) external;\\n\\n    // This function should only ever be called when a split or additional deposit has occurred \\n    function handleFNFTRemaps(uint fnftId, uint[] memory newFNFTIds, address caller, bool cleanup) external;\\n\\n}\\n\",\"keccak256\":\"0x3f54001da218efb1d47b5b5419f1796995a483fffc368d51929ab5fb61de0d62\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV3.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiverV2.sol\\\";\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV3 is IOutputReceiverV2 {\\n\\n    event DepositERC20OutputReceiver(address indexed mintTo, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event DepositERC721OutputReceiver(address indexed mintTo, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\\n\\n    event DepositERC1155OutputReceiver(address indexed mintTo, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC20OutputReceiver(address indexed caller, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC721OutputReceiver(address indexed caller, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC1155OutputReceiver(address indexed caller, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external;\\n\\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint quantity, address caller) external;\\n\\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external;\\n\\n}\\n\",\"keccak256\":\"0xb6b7ca189b8c8238df161cf2425aaf5fddc772947d654341ea9b4eb9f1e3c616\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRewards.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >= 0.8.0;\\n\\ninterface IRewards{\\n    struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n    \\n    function initialize(uint256 _pid, bool _startActive) external;\\n    function addReward(address _rewardsToken, address _distributor) external;\\n    function approveRewardDistributor(\\n        address _rewardsToken,\\n        address _distributor,\\n        bool _approved\\n    ) external;\\n    function deposit(address _owner, uint256 _amount) external;\\n    function withdraw(address _owner, uint256 _amount) external;\\n    function getReward(address _forward) external;\\n    function notifyRewardAmount(address _rewardsToken, uint256 _reward) external;\\n    function balanceOf(address account) external view returns (uint256);\\n    function claimableRewards(address _account) external view returns(EarnedData[] memory userRewards);\\n    function rewardTokens(uint256 _rid) external view returns (address);\\n    function rewardTokenLength() external view returns(uint256);\\n    function active() external view returns(bool);\\n}\\n\",\"keccak256\":\"0x5c4bd045413172f1911d4756733f9914dd33044472ccfbe41a2479d3add977df\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRewardsHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRewardsHandler {\\n\\n    struct UserBalance {\\n        uint allocPoint; // Allocation points\\n        uint lastMul;\\n    }\\n\\n    function receiveFee(address token, uint amount) external;\\n\\n    function updateLPShares(uint fnftId, uint newShares) external;\\n\\n    function updateBasicShares(uint fnftId, uint newShares) external;\\n\\n    function getAllocPoint(uint fnftId, address token, bool isBasic) external view returns (uint);\\n\\n    function claimRewards(uint fnftId, address caller) external returns (uint);\\n\\n    function setStakingContract(address stake) external;\\n\\n    function getRewards(uint fnftId, address token) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x7940819dfa042009e0b10dff3dd7224f3d1ae3a4c7addab3e8f33631c1ed5db7\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/ITokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ITokenVault {\\n\\n    function createFNFT(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig,\\n        uint quantity,\\n        address from\\n    ) external;\\n\\n    function withdrawToken(\\n        uint fnftId,\\n        uint quantity,\\n        address user\\n    ) external;\\n\\n    function depositToken(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external;\\n\\n    function cloneFNFTConfig(IRevest.FNFTConfig memory old) external returns (IRevest.FNFTConfig memory);\\n\\n    function mapFNFTToToken(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external;\\n\\n    function handleMultipleDeposits(\\n        uint fnftId,\\n        uint newFNFTId,\\n        uint amount\\n    ) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory newFNFTIds,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external;\\n\\n    function getFNFT(uint fnftId) external view returns (IRevest.FNFTConfig memory);\\n    function getFNFTCurrentValue(uint fnftId) external view returns (uint);\\n    function getNontransferable(uint fnftId) external view returns (bool);\\n    function getSplitsRemaining(uint fnftId) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xaf57460b4494ba71a094c4c89f095254c65796c1ddff0f41978c5f141472962d\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/lib/RevestHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ITokenVault.sol\\\";\\nimport \\\"../interfaces/ILockManager.sol\\\";\\nimport \\\"../interfaces/IRevest.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n\\nlibrary RevestHelper {\\n\\n \\n    function boolToString(bool arg) internal pure returns (string memory boolean) {\\n        boolean = arg ? \\\"true\\\" : \\\"false\\\";\\n    }\\n\\n    function getLockType(IRevest.LockType lock) internal pure returns (string memory lockType) {\\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Time\\\";\\n        } \\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Value\\\";\\n        }\\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Address\\\";\\n        }\\n    } \\n\\n    function getTicker(address asset) internal view returns (string memory ticker) {\\n        try IERC20Metadata(asset).symbol() returns (string memory tick) {\\n            ticker = tick;\\n        } catch {\\n            ticker = '???';\\n        }\\n    }\\n\\n    function getName(address asset) internal view returns (string memory ticker) {\\n        try IERC20Metadata(asset).name() returns (string memory tick) {\\n            ticker = tick;\\n        } catch {\\n            ticker = 'Unknown Token';\\n        }\\n    }\\n\\n    function amountToDecimal(uint amt, address asset) internal view returns (string memory decStr) {\\n        uint8 decimals;\\n        try IERC20Metadata(asset).decimals() returns (uint8 dec) {\\n            decimals = dec;\\n        } catch {\\n            decimals = 18;\\n        }\\n        decStr = decimalString(amt, decimals);\\n    }\\n\\n    function toString(uint _i) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint j = _i;\\n        uint len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint k = len;\\n        while (_i != 0) {\\n            k = k-1;\\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    function decimalString(uint256 number, uint8 decimals) internal pure returns(string memory){\\n        uint256 tenPowDecimals = 10 ** decimals;\\n\\n        uint256 temp = number;\\n        uint8 digits;\\n        uint8 numSigfigs;\\n        while (temp != 0) {\\n            if (numSigfigs > 0) {\\n                // count all digits preceding least significant figure\\n                numSigfigs++;\\n            } else if (temp % 10 != 0) {\\n                numSigfigs++;\\n            }\\n            digits++;\\n            temp /= 10;\\n        }\\n\\n        DecimalStringParams memory params;\\n        if((digits - numSigfigs) >= decimals) {\\n            // no decimals, ensure we preserve all trailing zeros\\n            params.sigfigs = number / tenPowDecimals;\\n            params.sigfigIndex = digits - decimals;\\n            params.bufferLength = params.sigfigIndex;\\n        } else {\\n            // chop all trailing zeros for numbers with decimals\\n            params.sigfigs = number / (10 ** (digits - numSigfigs));\\n            if(tenPowDecimals > number){\\n                // number is less tahn one\\n                // in this case, there may be leading zeros after the decimal place \\n                // that need to be added\\n\\n                // offset leading zeros by two to account for leading '0.'\\n                params.zerosStartIndex = 2;\\n                params.zerosEndIndex = decimals - digits + 2;\\n                params.sigfigIndex = numSigfigs + params.zerosEndIndex;\\n                params.bufferLength = params.sigfigIndex;\\n                params.isLessThanOne = true;\\n            } else {\\n                // In this case, there are digits before and\\n                // after the decimal place\\n                params.sigfigIndex = numSigfigs + 1;\\n                params.decimalIndex = digits - decimals + 1;\\n            }\\n        }\\n        params.bufferLength = params.sigfigIndex;\\n        return generateDecimalString(params);\\n    }\\n\\n    // With modifications, the below taken \\n    // from https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/NFTDescriptor.sol#L189-L231\\n\\n    struct DecimalStringParams {\\n        // significant figures of decimal\\n        uint256 sigfigs;\\n        // length of decimal string\\n        uint8 bufferLength;\\n        // ending index for significant figures (funtion works backwards when copying sigfigs)\\n        uint8 sigfigIndex;\\n        // index of decimal place (0 if no decimal)\\n        uint8 decimalIndex;\\n        // start index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosStartIndex;\\n        // end index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosEndIndex;\\n        // true if decimal number is less than one\\n        bool isLessThanOne;\\n    }\\n\\n    function generateDecimalString(DecimalStringParams memory params) private pure returns (string memory) {\\n        bytes memory buffer = new bytes(params.bufferLength);\\n        if (params.isLessThanOne) {\\n            buffer[0] = '0';\\n            buffer[1] = '.';\\n        }\\n\\n        // add leading/trailing 0's\\n        for (uint256 zerosCursor = params.zerosStartIndex; zerosCursor < params.zerosEndIndex; zerosCursor++) {\\n            buffer[zerosCursor] = bytes1(uint8(48));\\n        }\\n        // add sigfigs\\n        while (params.sigfigs > 0) {\\n            if (params.decimalIndex > 0 && params.sigfigIndex == params.decimalIndex) {\\n                buffer[--params.sigfigIndex] = '.';\\n            }\\n            buffer[--params.sigfigIndex] = bytes1(uint8(uint256(48) + (params.sigfigs % 10)));\\n            params.sigfigs /= 10;\\n        }\\n        return string(buffer);\\n    }\\n}\",\"keccak256\":\"0xe9708bee1fa68c61aeca3780e52cb8eb741844388c508cda66195fabbb967cdb\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/RevestConvexFrax.sol:RevestLiquidDriver","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":924,"contract":"contracts/RevestConvexFrax.sol:RevestLiquidDriver","label":"addressRegistry","offset":0,"slot":"1","type":"t_address"},{"astId":932,"contract":"contracts/RevestConvexFrax.sol:RevestLiquidDriver","label":"METADATA","offset":0,"slot":"2","type":"t_string_storage"},{"astId":951,"contract":"contracts/RevestConvexFrax.sol:RevestLiquidDriver","label":"kekIds","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint256,t_bytes32)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"getCustomMetadata(uint256)":{"notice":"View Functions"},"handleAdditionalDeposit(uint256,uint256,uint256,address)":{"notice":"Prerequisite: User has approved this contract to spend tokens on their behalf"},"rescueERC20(address)":{"notice":"Under no circumstances should this contract ever contain ERC-20 tokens at the end of a transaction If it does, someone has mistakenly sent funds to the contract, and this function can rescue their tokens"},"rescueNativeFunds()":{"notice":"If funds are mistakenly sent to smart wallets, this will allow the owner to assist in rescue"},"setAddressRegistry(address)":{"notice":"Admin Functions"}},"version":1}}},"contracts/VestedEscrowSmartWallet.sol":{"VestedEscrowSmartWallet":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CONVEX_DEPOSIT_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CRV","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CURVE_LP","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CVX","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FXS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARDS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKING_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKING_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cleanMemory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"unlockTime","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"createLock","outputs":[{"internalType":"bytes32","name":"kek_id","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"kek_id","type":"bytes32"},{"internalType":"address","name":"user","type":"address"}],"name":"increaseAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"unlockTime","type":"uint256"},{"internalType":"bytes32","name":"kek_id","type":"bytes32"},{"internalType":"address","name":"user","type":"address"}],"name":"increaseUnlockTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"kek_id","type":"bytes32"},{"internalType":"address","name":"user","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"RobAnon","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5033606081901b60805261245361005c6000396000818161028201528181610589015281816106c601528181610d1c01528181610dc501528181610f4f015261132d01526124536000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635aff427d1161008c578063945c914211610066578063945c914214610204578063c0034e0c1461021f578063ef5cfb8c1461023a578063f443faeb1461024d57600080fd5b80635aff427d146101bb578063759cb53b146101ce5780638c20570b146101e957600080fd5b8063200ea222116100c8578063200ea222146101705780633c0672bb1461018b5780633c4f8dd8146101a05780633ff5b85f146101b357600080fd5b80630479d644146100ef578063109bbf05146101345780631b258d501461014f575b600080fd5b61010a734659d5ff63a1e1edd6d5dd9cc315e063c95947d081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61010a73c07e540dbfeccf7431ea2478eb28a03918c1c30e81565b61016261015d3660046121e0565b610268565b60405190815260200161012b565b61010a733432b6a60d23ca0dfca7761b7ab56459d9c964d081565b61019e61019936600461220f565b610571565b005b6101626101ae366004612247565b6106ac565b61019e610d04565b61019e6101c936600461220f565b610dad565b61010a734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b81565b61010a73a537d64881b84faffb9ae43c951eebf368b71cda81565b61010a73d533a949740bb3306d119cc777fa900ba034cd5281565b61010a733465b8211278505ae9c6b5ba08ecd9af951a689681565b61019e610248366004612064565b610f37565b61010a73f43211935c781d5ca1a41d2041f397b8a7366c7a81565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461030e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a6564210000000000000000000000000000000000000060448201526064015b60405180910390fd5b6040517fe44b9fa50000000000000000000000000000000000000000000000000000000081526004810184905230602482015273a537d64881b84faffb9ae43c951eebf368b71cda9063e44b9fa590604401602060405180830381600087803b15801561037a57600080fd5b505af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b291906121c8565b506040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d090633969dfb49082906370a082319060240160206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045691906121c8565b6040518263ffffffff1660e01b815260040161047491815260200190565b600060405180830381600087803b15801561048e57600080fd5b505af11580156104a2573d6000803e3d6000fd5b50506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273f43211935c781d5ca1a41d2041f397b8a7366c7a92506370a08231915060240160206040518083038186803b15801561050957600080fd5b505afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054191906121c8565b905061056273f43211935c781d5ca1a41d2041f397b8a7366c7a8383610fec565b61056b82611079565b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b6040517fd2fbdc0d000000000000000000000000000000000000000000000000000000008152600481018390526024810184905273a537d64881b84faffb9ae43c951eebf368b71cda9063d2fbdc0d906044015b600060405180830381600087803b15801561067e57600080fd5b505af1158015610692573d6000803e3d6000fd5b5050505061069f81611079565b6106a761132b565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461074d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273a537d64881b84faffb9ae43c951eebf368b71cda602482015260001990734659d5ff63a1e1edd6d5dd9cc315e063c95947d09063dd62ed3e9060440160206040518083038186803b1580156107ce57600080fd5b505afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080691906121c8565b146108c6576040517f095ea7b300000000000000000000000000000000000000000000000000000000815273a537d64881b84faffb9ae43c951eebf368b71cda60048201526000196024820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d09063095ea7b390604401602060405180830381600087803b15801561088c57600080fd5b505af11580156108a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c491906121a8565b505b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d060248201526000199073f43211935c781d5ca1a41d2041f397b8a7366c7a9063dd62ed3e9060440160206040518083038186803b15801561094757600080fd5b505afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f91906121c8565b14610a3f576040517f095ea7b3000000000000000000000000000000000000000000000000000000008152734659d5ff63a1e1edd6d5dd9cc315e063c95947d06004820152600019602482015273f43211935c781d5ca1a41d2041f397b8a7366c7a9063095ea7b390604401602060405180830381600087803b158015610a0557600080fd5b505af1158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d91906121a8565b505b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d060248201526000199073c07e540dbfeccf7431ea2478eb28a03918c1c30e9063dd62ed3e9060440160206040518083038186803b158015610ac057600080fd5b505afa158015610ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af891906121c8565b14610bb8576040517f095ea7b3000000000000000000000000000000000000000000000000000000008152734659d5ff63a1e1edd6d5dd9cc315e063c95947d06004820152600019602482015273c07e540dbfeccf7431ea2478eb28a03918c1c30e9063095ea7b390604401602060405180830381600087803b158015610b7e57600080fd5b505af1158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906121a8565b505b6040517f6e553f6500000000000000000000000000000000000000000000000000000000815260048101859052306024820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d090636e553f6590604401600060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b5073a537d64881b84faffb9ae43c951eebf368b71cda92506317b18c899150869050610c64428761233b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401602060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf291906121c8565b9050610cfd82611079565b9392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610da3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b610dab61132b565b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b8215610f2e576040517f6e553f6500000000000000000000000000000000000000000000000000000000815260048101849052306024820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d090636e553f6590604401600060405180830381600087803b158015610ebe57600080fd5b505af1158015610ed2573d6000803e3d6000fd5b50506040517fb85efd06000000000000000000000000000000000000000000000000000000008152600481018590526024810186905273a537d64881b84faffb9ae43c951eebf368b71cda925063b85efd069150604401610664565b61069f81611079565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610fd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b610fe1600182611364565b610fe961132b565b50565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526106a7908490611720565b733465b8211278505ae9c6b5ba08ecd9af951a689673ffffffffffffffffffffffffffffffffffffffff166302fb0c5e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110d357600080fd5b505afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b91906121a8565b15610fe9576040517fd9f96e8d00000000000000000000000000000000000000000000000000000000815230600482015260009073a537d64881b84faffb9ae43c951eebf368b71cda9063d9f96e8d9060240160206040518083038186803b15801561117657600080fd5b505afa15801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae91906121c8565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152909150600090733465b8211278505ae9c6b5ba08ecd9af951a6896906370a082319060240160206040518083038186803b15801561121757600080fd5b505afa15801561122b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124f91906121c8565b905080821061130657733465b8211278505ae9c6b5ba08ecd9af951a68966347e7ef248461127d848661233b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044015b600060405180830381600087803b1580156112e957600080fd5b505af11580156112fd573d6000803e3d6000fd5b50505050505050565b733465b8211278505ae9c6b5ba08ecd9af951a689663f3fef3a38461127d858561233b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16ff5b811561164c576040517fc00007b000000000000000000000000000000000000000000000000000000000815230600482015273a537d64881b84faffb9ae43c951eebf368b71cda9063c00007b090602401600060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526114299190810190612121565b506040517f6b09169500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff82166024820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d090636b09169590604401600060405180830381600087803b1580156114ab57600080fd5b505af11580156114bf573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073d533a949740bb3306d119cc777fa900ba034cd5291506370a082319060240160206040518083038186803b15801561152957600080fd5b505afa15801561153d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156191906121c8565b905080156115885761158873d533a949740bb3306d119cc777fa900ba034cd528383610fec565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b906370a082319060240160206040518083038186803b1580156115eb57600080fd5b505afa1580156115ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162391906121c8565b9050801561164a5761164a734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b8383610fec565b505b6116558161182c565b600073a537d64881b84faffb9ae43c951eebf368b71cda73ffffffffffffffffffffffffffffffffffffffff166312edb24c6040518163ffffffff1660e01b815260040160006040518083038186803b1580156116b157600080fd5b505afa1580156116c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261170b9190810190612080565b90506117178183611990565b6106a782611b8e565b6000611782826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e7a9092919063ffffffff16565b8051909150156106a757808060200190518101906117a091906121a8565b6106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610305565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090733432b6a60d23ca0dfca7761b7ab56459d9c964d0906370a082319060240160206040518083038186803b15801561189257600080fd5b505afa1580156118a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ca91906121c8565b9050801561198c576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260248101829052733432b6a60d23ca0dfca7761b7ab56459d9c964d09063a9059cbb90604401602060405180830381600087803b15801561195457600080fd5b505af1158015611968573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a791906121a8565b5050565b60005b82518110156106a757733432b6a60d23ca0dfca7761b7ab56459d9c964d073ffffffffffffffffffffffffffffffffffffffff16838281518110611a00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614611b7c576000838281518110611a5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015611acf57600080fd5b505afa158015611ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0791906121c8565b90508015611b7a57611b7a8382868581518110611b4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610fec9092919063ffffffff16565b505b80611b8681612382565b915050611993565b733465b8211278505ae9c6b5ba08ecd9af951a689673ffffffffffffffffffffffffffffffffffffffff166302fb0c5e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611be857600080fd5b505afa158015611bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2091906121a8565b15610fe9576040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090733465b8211278505ae9c6b5ba08ecd9af951a6896906370a082319060240160206040518083038186803b158015611c8b57600080fd5b505afa158015611c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc391906121c8565b6040517fd9f96e8d00000000000000000000000000000000000000000000000000000000815230600482015290915060009073a537d64881b84faffb9ae43c951eebf368b71cda9063d9f96e8d9060240160206040518083038186803b158015611d2c57600080fd5b505afa158015611d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6491906121c8565b905081158015611d745750600081115b15611e14576040517f47e7ef2400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052733465b8211278505ae9c6b5ba08ecd9af951a6896906347e7ef2490604401600060405180830381600087803b158015611dfb57600080fd5b505af1158015611e0f573d6000803e3d6000fd5b505050505b6040517fc00007b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152733465b8211278505ae9c6b5ba08ecd9af951a68969063c00007b0906024016112cf565b6060611e898484600085611e91565b949350505050565b606082471015611f23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610305565b843b611f8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610305565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611fb4919061225b565b60006040518083038185875af1925050503d8060008114611ff1576040519150601f19603f3d011682016040523d82523d6000602084013e611ff6565b606091505b5091509150612006828286612011565b979650505050505050565b60608315612020575081610cfd565b8251156120305782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103059190612277565b600060208284031215612075578081fd5b8135610cfd816123fb565b60006020808385031215612092578182fd5b825167ffffffffffffffff8111156120a8578283fd5b8301601f810185136120b8578283fd5b80516120cb6120c682612317565b6122c8565b80828252848201915084840188868560051b87010111156120ea578687fd5b8694505b83851015612115578051612101816123fb565b8352600194909401939185019185016120ee565b50979650505050505050565b60006020808385031215612133578182fd5b825167ffffffffffffffff811115612149578283fd5b8301601f81018513612159578283fd5b80516121676120c682612317565b80828252848201915084840188868560051b8701011115612186578687fd5b8694505b8385101561211557805183526001949094019391850191850161218a565b6000602082840312156121b9578081fd5b81518015158114610cfd578182fd5b6000602082840312156121d9578081fd5b5051919050565b600080604083850312156121f2578081fd5b823591506020830135612204816123fb565b809150509250929050565b600080600060608486031215612223578081fd5b8335925060208401359150604084013561223c816123fb565b809150509250925092565b600080600060608486031215612223578283fd5b6000825161226d818460208701612352565b9190910192915050565b6020815260008251806020840152612296816040850160208701612352565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561230f5761230f6123cc565b604052919050565b600067ffffffffffffffff821115612331576123316123cc565b5060051b60200190565b60008282101561234d5761234d61239d565b500390565b60005b8381101561236d578181015183820152602001612355565b8381111561237c576000848401525b50505050565b60006000198214156123965761239661239d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610fe957600080fdfea264697066735822122069e34ef58c957f009198609be9fe6de22b31e200884867bfe67fa7617a5b2fed64736f6c63430008040033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x80 MSTORE PUSH2 0x2453 PUSH2 0x5C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x282 ADD MSTORE DUP2 DUP2 PUSH2 0x589 ADD MSTORE DUP2 DUP2 PUSH2 0x6C6 ADD MSTORE DUP2 DUP2 PUSH2 0xD1C ADD MSTORE DUP2 DUP2 PUSH2 0xDC5 ADD MSTORE DUP2 DUP2 PUSH2 0xF4F ADD MSTORE PUSH2 0x132D ADD MSTORE PUSH2 0x2453 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5AFF427D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x945C9142 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x945C9142 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xC0034E0C EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xEF5CFB8C EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF443FAEB EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5AFF427D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x759CB53B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8C20570B EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200EA222 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x200EA222 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x3C0672BB EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x3C4F8DD8 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x3FF5B85F EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x479D644 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x109BBF05 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x1B258D50 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12B JUMP JUMPDEST PUSH2 0x10A PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 DUP2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x19E PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x220F JUMP JUMPDEST PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x10A PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 DUP2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE44B9FA500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xE44B9FA5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x3969DFB4 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP3 POP PUSH4 0x70A08231 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x562 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x56B DUP3 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD2FBDC0D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD2FBDC0D SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x69F DUP2 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x132B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF8 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E553F6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP3 POP PUSH4 0x17B18C89 SWAP2 POP DUP7 SWAP1 POP PUSH2 0xC64 TIMESTAMP DUP8 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCFD DUP3 PUSH2 0x1079 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH2 0xDAB PUSH2 0x132B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E553F6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xB85EFD0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP3 POP PUSH4 0xB85EFD06 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x664 JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x1079 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH2 0xFE1 PUSH1 0x1 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xFE9 PUSH2 0x132B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x1720 JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2FB0C5E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD9F96E8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD9F96E8D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124F SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x1306 JUMPI PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH4 0x47E7EF24 DUP5 PUSH2 0x127D DUP5 DUP7 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH4 0xF3FEF3A3 DUP5 PUSH2 0x127D DUP6 DUP6 PUSH2 0x233B JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST DUP2 ISZERO PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH32 0xC00007B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xC00007B0 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1429 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2121 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6B09169500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6B091695 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1561 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1588 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x164A JUMPI PUSH2 0x164A PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST POP JUMPDEST PUSH2 0x1655 DUP2 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12EDB24C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x170B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2080 JUMP JUMPDEST SWAP1 POP PUSH2 0x1717 DUP2 DUP4 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x6A7 DUP3 PUSH2 0x1B8E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1782 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E7A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x6A7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17A0 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18CA SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1968 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6A7 JUMPI PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A00 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A5E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B07 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B7A DUP4 DUP3 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1B4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1B86 DUP2 PUSH2 0x2382 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1993 JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2FB0C5E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C20 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC3 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD9F96E8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD9F96E8D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D64 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1D74 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1E14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x47E7EF2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x47E7EF24 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC00007B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0xC00007B0 SWAP1 PUSH1 0x24 ADD PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E89 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1E91 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1F23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x305 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1F8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FB4 SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FF1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2006 DUP3 DUP3 DUP7 PUSH2 0x2011 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2020 JUMPI POP DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2030 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2075 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCFD DUP2 PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2092 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x20B8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x20CB PUSH2 0x20C6 DUP3 PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x22C8 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x20EA JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2115 JUMPI DUP1 MLOAD PUSH2 0x2101 DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x20EE JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2133 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2149 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2159 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2167 PUSH2 0x20C6 DUP3 PUSH2 0x2317 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2186 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2115 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x218A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCFD JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21F2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2204 DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2223 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x223C DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2223 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x226D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2352 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2296 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x230F JUMPI PUSH2 0x230F PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2331 JUMPI PUSH2 0x2331 PUSH2 0x23CC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x234D JUMPI PUSH2 0x234D PUSH2 0x239D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x236D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2355 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x237C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2396 JUMPI PUSH2 0x2396 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xE34EF58C957F00919860 SWAP12 0xE9 INVALID PUSH14 0xE22B31E200884867BFE67FA7617A JUMPDEST 0x2F 0xED PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"411:7479:10:-:0;;;1294:50;;;;;;;;;-1:-1:-1;1327:10:10;1318:19;;;;;;411:7479;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10298:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:187:29","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:29"},"nodeType":"YulFunctionCall","src":"132:22:29"},"nodeType":"YulExpressionStatement","src":"132:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:29"},"nodeType":"YulFunctionCall","src":"101:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:29"},"nodeType":"YulFunctionCall","src":"97:32:29"},"nodeType":"YulIf","src":"94:2:29"},{"nodeType":"YulVariableDeclaration","src":"165:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:29"},"nodeType":"YulFunctionCall","src":"178:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"235:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"210:24:29"},"nodeType":"YulFunctionCall","src":"210:31:29"},"nodeType":"YulExpressionStatement","src":"210:31:29"},{"nodeType":"YulAssignment","src":"250:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"260:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"250:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:29","type":""}],"src":"14:257:29"},{"body":{"nodeType":"YulBlock","src":"382:906:29","statements":[{"nodeType":"YulVariableDeclaration","src":"392:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"402:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"396:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"449:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"458:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"466:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"451:6:29"},"nodeType":"YulFunctionCall","src":"451:22:29"},"nodeType":"YulExpressionStatement","src":"451:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"424:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"433:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"420:3:29"},"nodeType":"YulFunctionCall","src":"420:23:29"},{"name":"_1","nodeType":"YulIdentifier","src":"445:2:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"416:3:29"},"nodeType":"YulFunctionCall","src":"416:32:29"},"nodeType":"YulIf","src":"413:2:29"},{"nodeType":"YulVariableDeclaration","src":"484:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"504:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"498:5:29"},"nodeType":"YulFunctionCall","src":"498:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"488:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"557:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"566:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"574:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"559:6:29"},"nodeType":"YulFunctionCall","src":"559:22:29"},"nodeType":"YulExpressionStatement","src":"559:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"529:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"537:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"526:2:29"},"nodeType":"YulFunctionCall","src":"526:30:29"},"nodeType":"YulIf","src":"523:2:29"},{"nodeType":"YulVariableDeclaration","src":"592:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"606:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"617:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"602:3:29"},"nodeType":"YulFunctionCall","src":"602:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"596:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"672:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"681:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"689:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"674:6:29"},"nodeType":"YulFunctionCall","src":"674:22:29"},"nodeType":"YulExpressionStatement","src":"674:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"651:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"655:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"647:3:29"},"nodeType":"YulFunctionCall","src":"647:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"662:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"643:3:29"},"nodeType":"YulFunctionCall","src":"643:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"636:6:29"},"nodeType":"YulFunctionCall","src":"636:35:29"},"nodeType":"YulIf","src":"633:2:29"},{"nodeType":"YulVariableDeclaration","src":"707:19:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"723:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"717:5:29"},"nodeType":"YulFunctionCall","src":"717:9:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"711:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"735:71:29","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"802:2:29"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"762:39:29"},"nodeType":"YulFunctionCall","src":"762:43:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"746:15:29"},"nodeType":"YulFunctionCall","src":"746:60:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"739:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"815:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"828:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"819:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"847:3:29"},{"name":"_3","nodeType":"YulIdentifier","src":"852:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"840:6:29"},"nodeType":"YulFunctionCall","src":"840:15:29"},"nodeType":"YulExpressionStatement","src":"840:15:29"},{"nodeType":"YulAssignment","src":"864:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"875:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"880:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"871:3:29"},"nodeType":"YulFunctionCall","src":"871:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"864:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"892:22:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"907:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"911:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"903:3:29"},"nodeType":"YulFunctionCall","src":"903:11:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"896:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"968:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"977:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"985:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"970:6:29"},"nodeType":"YulFunctionCall","src":"970:22:29"},"nodeType":"YulExpressionStatement","src":"970:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"937:2:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"945:1:29","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"948:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"941:3:29"},"nodeType":"YulFunctionCall","src":"941:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:29"},"nodeType":"YulFunctionCall","src":"933:19:29"},{"name":"_1","nodeType":"YulIdentifier","src":"954:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"929:3:29"},"nodeType":"YulFunctionCall","src":"929:28:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"959:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"926:2:29"},"nodeType":"YulFunctionCall","src":"926:41:29"},"nodeType":"YulIf","src":"923:2:29"},{"nodeType":"YulVariableDeclaration","src":"1003:15:29","value":{"name":"value0","nodeType":"YulIdentifier","src":"1012:6:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1007:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1072:186:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1086:23:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1105:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1099:5:29"},"nodeType":"YulFunctionCall","src":"1099:10:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1090:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1147:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1122:24:29"},"nodeType":"YulFunctionCall","src":"1122:31:29"},"nodeType":"YulExpressionStatement","src":"1122:31:29"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1173:3:29"},{"name":"value","nodeType":"YulIdentifier","src":"1178:5:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1166:6:29"},"nodeType":"YulFunctionCall","src":"1166:18:29"},"nodeType":"YulExpressionStatement","src":"1166:18:29"},{"nodeType":"YulAssignment","src":"1197:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1208:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1213:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1204:3:29"},"nodeType":"YulFunctionCall","src":"1204:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1197:3:29"}]},{"nodeType":"YulAssignment","src":"1229:19:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1240:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1245:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1236:3:29"},"nodeType":"YulFunctionCall","src":"1236:12:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1229:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1038:1:29"},{"name":"_3","nodeType":"YulIdentifier","src":"1041:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1035:2:29"},"nodeType":"YulFunctionCall","src":"1035:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1045:18:29","statements":[{"nodeType":"YulAssignment","src":"1047:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1056:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1059:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1052:3:29"},"nodeType":"YulFunctionCall","src":"1052:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1047:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1031:3:29","statements":[]},"src":"1027:231:29"},{"nodeType":"YulAssignment","src":"1267:15:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"1277:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1267:6:29"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"348:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"359:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"371:6:29","type":""}],"src":"276:1012:29"},{"body":{"nodeType":"YulBlock","src":"1399:831:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1409:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1419:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1413:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1466:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1475:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"1483:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1468:6:29"},"nodeType":"YulFunctionCall","src":"1468:22:29"},"nodeType":"YulExpressionStatement","src":"1468:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1441:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1437:3:29"},"nodeType":"YulFunctionCall","src":"1437:23:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1462:2:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1433:3:29"},"nodeType":"YulFunctionCall","src":"1433:32:29"},"nodeType":"YulIf","src":"1430:2:29"},{"nodeType":"YulVariableDeclaration","src":"1501:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1521:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1515:5:29"},"nodeType":"YulFunctionCall","src":"1515:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1505:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1574:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1583:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"1591:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1576:6:29"},"nodeType":"YulFunctionCall","src":"1576:22:29"},"nodeType":"YulExpressionStatement","src":"1576:22:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1546:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1554:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1543:2:29"},"nodeType":"YulFunctionCall","src":"1543:30:29"},"nodeType":"YulIf","src":"1540:2:29"},{"nodeType":"YulVariableDeclaration","src":"1609:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1623:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1634:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1619:3:29"},"nodeType":"YulFunctionCall","src":"1619:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1613:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1689:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1698:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"1706:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1691:6:29"},"nodeType":"YulFunctionCall","src":"1691:22:29"},"nodeType":"YulExpressionStatement","src":"1691:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1668:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"1672:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1664:3:29"},"nodeType":"YulFunctionCall","src":"1664:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1679:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1660:3:29"},"nodeType":"YulFunctionCall","src":"1660:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1653:6:29"},"nodeType":"YulFunctionCall","src":"1653:35:29"},"nodeType":"YulIf","src":"1650:2:29"},{"nodeType":"YulVariableDeclaration","src":"1724:19:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1740:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1734:5:29"},"nodeType":"YulFunctionCall","src":"1734:9:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1728:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1752:71:29","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1819:2:29"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"1779:39:29"},"nodeType":"YulFunctionCall","src":"1779:43:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1763:15:29"},"nodeType":"YulFunctionCall","src":"1763:60:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1756:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1832:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"1845:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"1836:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1864:3:29"},{"name":"_3","nodeType":"YulIdentifier","src":"1869:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1857:6:29"},"nodeType":"YulFunctionCall","src":"1857:15:29"},"nodeType":"YulExpressionStatement","src":"1857:15:29"},{"nodeType":"YulAssignment","src":"1881:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1892:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1897:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1888:3:29"},"nodeType":"YulFunctionCall","src":"1888:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1881:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"1909:22:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1924:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1928:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1920:3:29"},"nodeType":"YulFunctionCall","src":"1920:11:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1913:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1985:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1994:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2002:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1987:6:29"},"nodeType":"YulFunctionCall","src":"1987:22:29"},"nodeType":"YulExpressionStatement","src":"1987:22:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1954:2:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1962:1:29","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"1965:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1958:3:29"},"nodeType":"YulFunctionCall","src":"1958:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1950:3:29"},"nodeType":"YulFunctionCall","src":"1950:19:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1971:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1946:3:29"},"nodeType":"YulFunctionCall","src":"1946:28:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1976:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1943:2:29"},"nodeType":"YulFunctionCall","src":"1943:41:29"},"nodeType":"YulIf","src":"1940:2:29"},{"nodeType":"YulVariableDeclaration","src":"2020:15:29","value":{"name":"value0","nodeType":"YulIdentifier","src":"2029:6:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2024:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2089:111:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2110:3:29"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2121:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2115:5:29"},"nodeType":"YulFunctionCall","src":"2115:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2103:6:29"},"nodeType":"YulFunctionCall","src":"2103:23:29"},"nodeType":"YulExpressionStatement","src":"2103:23:29"},{"nodeType":"YulAssignment","src":"2139:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2150:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2155:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2146:3:29"},"nodeType":"YulFunctionCall","src":"2146:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2139:3:29"}]},{"nodeType":"YulAssignment","src":"2171:19:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2182:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2187:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2178:3:29"},"nodeType":"YulFunctionCall","src":"2178:12:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2171:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2055:1:29"},{"name":"_3","nodeType":"YulIdentifier","src":"2058:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2052:2:29"},"nodeType":"YulFunctionCall","src":"2052:9:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2062:18:29","statements":[{"nodeType":"YulAssignment","src":"2064:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2073:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"2076:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:29"},"nodeType":"YulFunctionCall","src":"2069:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2064:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"2048:3:29","statements":[]},"src":"2044:156:29"},{"nodeType":"YulAssignment","src":"2209:15:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"2219:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2209:6:29"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1365:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1376:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1388:6:29","type":""}],"src":"1293:937:29"},{"body":{"nodeType":"YulBlock","src":"2313:219:29","statements":[{"body":{"nodeType":"YulBlock","src":"2359:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2368:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2376:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2361:6:29"},"nodeType":"YulFunctionCall","src":"2361:22:29"},"nodeType":"YulExpressionStatement","src":"2361:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2334:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2343:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2330:3:29"},"nodeType":"YulFunctionCall","src":"2330:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2355:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2326:3:29"},"nodeType":"YulFunctionCall","src":"2326:32:29"},"nodeType":"YulIf","src":"2323:2:29"},{"nodeType":"YulVariableDeclaration","src":"2394:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2413:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2407:5:29"},"nodeType":"YulFunctionCall","src":"2407:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2398:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2476:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2485:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2493:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2478:6:29"},"nodeType":"YulFunctionCall","src":"2478:22:29"},"nodeType":"YulExpressionStatement","src":"2478:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2445:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2466:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2459:6:29"},"nodeType":"YulFunctionCall","src":"2459:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2452:6:29"},"nodeType":"YulFunctionCall","src":"2452:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2442:2:29"},"nodeType":"YulFunctionCall","src":"2442:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2435:6:29"},"nodeType":"YulFunctionCall","src":"2435:40:29"},"nodeType":"YulIf","src":"2432:2:29"},{"nodeType":"YulAssignment","src":"2511:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2521:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2511:6:29"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2279:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2290:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2302:6:29","type":""}],"src":"2235:297:29"},{"body":{"nodeType":"YulBlock","src":"2618:113:29","statements":[{"body":{"nodeType":"YulBlock","src":"2664:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2673:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2681:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2666:6:29"},"nodeType":"YulFunctionCall","src":"2666:22:29"},"nodeType":"YulExpressionStatement","src":"2666:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2639:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2648:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2635:3:29"},"nodeType":"YulFunctionCall","src":"2635:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2660:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2631:3:29"},"nodeType":"YulFunctionCall","src":"2631:32:29"},"nodeType":"YulIf","src":"2628:2:29"},{"nodeType":"YulAssignment","src":"2699:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2715:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2709:5:29"},"nodeType":"YulFunctionCall","src":"2709:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2699:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:29","type":""}],"src":"2537:194:29"},{"body":{"nodeType":"YulBlock","src":"2823:238:29","statements":[{"body":{"nodeType":"YulBlock","src":"2869:26:29","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2878:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"2886:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2871:6:29"},"nodeType":"YulFunctionCall","src":"2871:22:29"},"nodeType":"YulExpressionStatement","src":"2871:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2844:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2853:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2840:3:29"},"nodeType":"YulFunctionCall","src":"2840:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2865:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2836:3:29"},"nodeType":"YulFunctionCall","src":"2836:32:29"},"nodeType":"YulIf","src":"2833:2:29"},{"nodeType":"YulAssignment","src":"2904:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2927:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2914:12:29"},"nodeType":"YulFunctionCall","src":"2914:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2904:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"2946:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2976:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2987:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2972:3:29"},"nodeType":"YulFunctionCall","src":"2972:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2959:12:29"},"nodeType":"YulFunctionCall","src":"2959:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2950:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3025:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3000:24:29"},"nodeType":"YulFunctionCall","src":"3000:31:29"},"nodeType":"YulExpressionStatement","src":"3000:31:29"},{"nodeType":"YulAssignment","src":"3040:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3050:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3040:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2781:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2792:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2804:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2812:6:29","type":""}],"src":"2736:325:29"},{"body":{"nodeType":"YulBlock","src":"3147:113:29","statements":[{"body":{"nodeType":"YulBlock","src":"3193:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3202:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"3210:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3195:6:29"},"nodeType":"YulFunctionCall","src":"3195:22:29"},"nodeType":"YulExpressionStatement","src":"3195:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3168:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3177:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3164:3:29"},"nodeType":"YulFunctionCall","src":"3164:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3189:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3160:3:29"},"nodeType":"YulFunctionCall","src":"3160:32:29"},"nodeType":"YulIf","src":"3157:2:29"},{"nodeType":"YulAssignment","src":"3228:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3238:5:29"},"nodeType":"YulFunctionCall","src":"3238:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3228:6:29"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3113:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3124:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3136:6:29","type":""}],"src":"3066:194:29"},{"body":{"nodeType":"YulBlock","src":"3369:289:29","statements":[{"body":{"nodeType":"YulBlock","src":"3415:26:29","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3424:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"3432:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3417:6:29"},"nodeType":"YulFunctionCall","src":"3417:22:29"},"nodeType":"YulExpressionStatement","src":"3417:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3390:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3386:3:29"},"nodeType":"YulFunctionCall","src":"3386:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3411:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3382:3:29"},"nodeType":"YulFunctionCall","src":"3382:32:29"},"nodeType":"YulIf","src":"3379:2:29"},{"nodeType":"YulAssignment","src":"3450:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3473:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3460:12:29"},"nodeType":"YulFunctionCall","src":"3460:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3450:6:29"}]},{"nodeType":"YulAssignment","src":"3492:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3519:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3530:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3515:3:29"},"nodeType":"YulFunctionCall","src":"3515:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3502:12:29"},"nodeType":"YulFunctionCall","src":"3502:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3492:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3543:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3573:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3584:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3569:3:29"},"nodeType":"YulFunctionCall","src":"3569:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3556:12:29"},"nodeType":"YulFunctionCall","src":"3556:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3597:24:29"},"nodeType":"YulFunctionCall","src":"3597:31:29"},"nodeType":"YulExpressionStatement","src":"3597:31:29"},{"nodeType":"YulAssignment","src":"3637:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3647:5:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3637:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3319:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3330:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3342:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3350:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3358:6:29","type":""}],"src":"3265:393:29"},{"body":{"nodeType":"YulBlock","src":"3767:289:29","statements":[{"body":{"nodeType":"YulBlock","src":"3813:26:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3822:6:29"},{"name":"value0","nodeType":"YulIdentifier","src":"3830:6:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3815:6:29"},"nodeType":"YulFunctionCall","src":"3815:22:29"},"nodeType":"YulExpressionStatement","src":"3815:22:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3788:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3797:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3784:3:29"},"nodeType":"YulFunctionCall","src":"3784:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3809:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3780:3:29"},"nodeType":"YulFunctionCall","src":"3780:32:29"},"nodeType":"YulIf","src":"3777:2:29"},{"nodeType":"YulAssignment","src":"3848:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3871:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3858:12:29"},"nodeType":"YulFunctionCall","src":"3858:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3848:6:29"}]},{"nodeType":"YulAssignment","src":"3890:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3917:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3928:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3913:3:29"},"nodeType":"YulFunctionCall","src":"3913:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3900:12:29"},"nodeType":"YulFunctionCall","src":"3900:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3890:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3941:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3971:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3982:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:29"},"nodeType":"YulFunctionCall","src":"3967:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3954:12:29"},"nodeType":"YulFunctionCall","src":"3954:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3945:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4020:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3995:24:29"},"nodeType":"YulFunctionCall","src":"3995:31:29"},"nodeType":"YulExpressionStatement","src":"3995:31:29"},{"nodeType":"YulAssignment","src":"4035:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"4045:5:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4035:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3717:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3728:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3740:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3748:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3756:6:29","type":""}],"src":"3663:393:29"},{"body":{"nodeType":"YulBlock","src":"4198:137:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4208:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4228:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4222:5:29"},"nodeType":"YulFunctionCall","src":"4222:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4212:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4270:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4278:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4266:3:29"},"nodeType":"YulFunctionCall","src":"4266:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"4285:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4290:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4244:21:29"},"nodeType":"YulFunctionCall","src":"4244:53:29"},"nodeType":"YulExpressionStatement","src":"4244:53:29"},{"nodeType":"YulAssignment","src":"4306:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4317:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4322:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4313:3:29"},"nodeType":"YulFunctionCall","src":"4313:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4306:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4174:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4179:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4190:3:29","type":""}],"src":"4061:274:29"},{"body":{"nodeType":"YulBlock","src":"4441:125:29","statements":[{"nodeType":"YulAssignment","src":"4451:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4463:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4474:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4459:3:29"},"nodeType":"YulFunctionCall","src":"4459:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4493:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4508:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4516:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4504:3:29"},"nodeType":"YulFunctionCall","src":"4504:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4486:6:29"},"nodeType":"YulFunctionCall","src":"4486:74:29"},"nodeType":"YulExpressionStatement","src":"4486:74:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4410:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4421:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4432:4:29","type":""}],"src":"4340:226:29"},{"body":{"nodeType":"YulBlock","src":"4700:198:29","statements":[{"nodeType":"YulAssignment","src":"4710:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4722:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4733:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4718:3:29"},"nodeType":"YulFunctionCall","src":"4718:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4710:4:29"}]},{"nodeType":"YulVariableDeclaration","src":"4745:52:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4755:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4749:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4813:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4828:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4836:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4824:3:29"},"nodeType":"YulFunctionCall","src":"4824:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4806:6:29"},"nodeType":"YulFunctionCall","src":"4806:34:29"},"nodeType":"YulExpressionStatement","src":"4806:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4860:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4871:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4856:3:29"},"nodeType":"YulFunctionCall","src":"4856:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4880:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4888:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4876:3:29"},"nodeType":"YulFunctionCall","src":"4876:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4849:6:29"},"nodeType":"YulFunctionCall","src":"4849:43:29"},"nodeType":"YulExpressionStatement","src":"4849:43:29"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4661:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4672:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4680:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4691:4:29","type":""}],"src":"4571:327:29"},{"body":{"nodeType":"YulBlock","src":"5032:168:29","statements":[{"nodeType":"YulAssignment","src":"5042:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5054:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5065:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5050:3:29"},"nodeType":"YulFunctionCall","src":"5050:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5042:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5084:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5099:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5107:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5095:3:29"},"nodeType":"YulFunctionCall","src":"5095:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5077:6:29"},"nodeType":"YulFunctionCall","src":"5077:74:29"},"nodeType":"YulExpressionStatement","src":"5077:74:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:29"},"nodeType":"YulFunctionCall","src":"5167:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"5187:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:29"},"nodeType":"YulFunctionCall","src":"5160:34:29"},"nodeType":"YulExpressionStatement","src":"5160:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4993:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5004:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5012:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5023:4:29","type":""}],"src":"4903:297:29"},{"body":{"nodeType":"YulBlock","src":"5306:76:29","statements":[{"nodeType":"YulAssignment","src":"5316:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5328:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5339:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5324:3:29"},"nodeType":"YulFunctionCall","src":"5324:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5316:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5358:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5369:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5351:6:29"},"nodeType":"YulFunctionCall","src":"5351:25:29"},"nodeType":"YulExpressionStatement","src":"5351:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5275:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5286:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5297:4:29","type":""}],"src":"5205:177:29"},{"body":{"nodeType":"YulBlock","src":"5516:168:29","statements":[{"nodeType":"YulAssignment","src":"5526:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5549:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5534:3:29"},"nodeType":"YulFunctionCall","src":"5534:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5526:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5568:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5579:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5561:6:29"},"nodeType":"YulFunctionCall","src":"5561:25:29"},"nodeType":"YulExpressionStatement","src":"5561:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5606:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5617:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5602:3:29"},"nodeType":"YulFunctionCall","src":"5602:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5626:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5634:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5622:3:29"},"nodeType":"YulFunctionCall","src":"5622:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5595:6:29"},"nodeType":"YulFunctionCall","src":"5595:83:29"},"nodeType":"YulExpressionStatement","src":"5595:83:29"}]},"name":"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5477:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5488:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5496:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5507:4:29","type":""}],"src":"5387:297:29"},{"body":{"nodeType":"YulBlock","src":"5818:119:29","statements":[{"nodeType":"YulAssignment","src":"5828:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5840:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5851:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5836:3:29"},"nodeType":"YulFunctionCall","src":"5836:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5828:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5870:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5881:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5863:6:29"},"nodeType":"YulFunctionCall","src":"5863:25:29"},"nodeType":"YulExpressionStatement","src":"5863:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5908:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5919:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5904:3:29"},"nodeType":"YulFunctionCall","src":"5904:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"5924:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5897:6:29"},"nodeType":"YulFunctionCall","src":"5897:34:29"},"nodeType":"YulExpressionStatement","src":"5897:34:29"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5779:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5790:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5798:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5809:4:29","type":""}],"src":"5689:248:29"},{"body":{"nodeType":"YulBlock","src":"6063:321:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6080:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6091:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6073:6:29"},"nodeType":"YulFunctionCall","src":"6073:21:29"},"nodeType":"YulExpressionStatement","src":"6073:21:29"},{"nodeType":"YulVariableDeclaration","src":"6103:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6123:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6117:5:29"},"nodeType":"YulFunctionCall","src":"6117:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6107:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6150:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6161:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6146:3:29"},"nodeType":"YulFunctionCall","src":"6146:18:29"},{"name":"length","nodeType":"YulIdentifier","src":"6166:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6139:6:29"},"nodeType":"YulFunctionCall","src":"6139:34:29"},"nodeType":"YulExpressionStatement","src":"6139:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6208:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6216:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6204:3:29"},"nodeType":"YulFunctionCall","src":"6204:15:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6225:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6236:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6221:3:29"},"nodeType":"YulFunctionCall","src":"6221:18:29"},{"name":"length","nodeType":"YulIdentifier","src":"6241:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6182:21:29"},"nodeType":"YulFunctionCall","src":"6182:66:29"},"nodeType":"YulExpressionStatement","src":"6182:66:29"},{"nodeType":"YulAssignment","src":"6257:121:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6273:9:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6292:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6300:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6288:3:29"},"nodeType":"YulFunctionCall","src":"6288:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"6305:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6284:3:29"},"nodeType":"YulFunctionCall","src":"6284:88:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:29"},"nodeType":"YulFunctionCall","src":"6269:104:29"},{"kind":"number","nodeType":"YulLiteral","src":"6375:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6265:3:29"},"nodeType":"YulFunctionCall","src":"6265:113:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6257:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6032:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6043:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6054:4:29","type":""}],"src":"5942:442:29"},{"body":{"nodeType":"YulBlock","src":"6563:163:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6580:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6591:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6573:6:29"},"nodeType":"YulFunctionCall","src":"6573:21:29"},"nodeType":"YulExpressionStatement","src":"6573:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6614:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6625:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6610:3:29"},"nodeType":"YulFunctionCall","src":"6610:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6630:2:29","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6603:6:29"},"nodeType":"YulFunctionCall","src":"6603:30:29"},"nodeType":"YulExpressionStatement","src":"6603:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6653:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6664:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6649:3:29"},"nodeType":"YulFunctionCall","src":"6649:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"6669:15:29","type":"","value":"Unauthorized!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6642:6:29"},"nodeType":"YulFunctionCall","src":"6642:43:29"},"nodeType":"YulExpressionStatement","src":"6642:43:29"},{"nodeType":"YulAssignment","src":"6694:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6706:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6717:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6702:3:29"},"nodeType":"YulFunctionCall","src":"6702:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6694:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_5019e9bb860959cdda3e1d3eb61165a2a9c9d9818183c266b0f702fe5e27928b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6540:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6554:4:29","type":""}],"src":"6389:337:29"},{"body":{"nodeType":"YulBlock","src":"6905:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6922:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6933:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6915:6:29"},"nodeType":"YulFunctionCall","src":"6915:21:29"},"nodeType":"YulExpressionStatement","src":"6915:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6956:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6967:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6952:3:29"},"nodeType":"YulFunctionCall","src":"6952:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6972:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6945:6:29"},"nodeType":"YulFunctionCall","src":"6945:30:29"},"nodeType":"YulExpressionStatement","src":"6945:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6995:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7006:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6991:3:29"},"nodeType":"YulFunctionCall","src":"6991:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"7011:34:29","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6984:6:29"},"nodeType":"YulFunctionCall","src":"6984:62:29"},"nodeType":"YulExpressionStatement","src":"6984:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7066:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7077:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7062:3:29"},"nodeType":"YulFunctionCall","src":"7062:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"7082:8:29","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7055:6:29"},"nodeType":"YulFunctionCall","src":"7055:36:29"},"nodeType":"YulExpressionStatement","src":"7055:36:29"},{"nodeType":"YulAssignment","src":"7100:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7112:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7123:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7108:3:29"},"nodeType":"YulFunctionCall","src":"7108:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7100:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6882:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6896:4:29","type":""}],"src":"6731:402:29"},{"body":{"nodeType":"YulBlock","src":"7312:179:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7329:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7340:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7322:6:29"},"nodeType":"YulFunctionCall","src":"7322:21:29"},"nodeType":"YulExpressionStatement","src":"7322:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7363:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7374:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7359:3:29"},"nodeType":"YulFunctionCall","src":"7359:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"7379:2:29","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7352:6:29"},"nodeType":"YulFunctionCall","src":"7352:30:29"},"nodeType":"YulExpressionStatement","src":"7352:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7402:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7413:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7398:3:29"},"nodeType":"YulFunctionCall","src":"7398:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"7418:31:29","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7391:6:29"},"nodeType":"YulFunctionCall","src":"7391:59:29"},"nodeType":"YulExpressionStatement","src":"7391:59:29"},{"nodeType":"YulAssignment","src":"7459:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7471:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7482:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7467:3:29"},"nodeType":"YulFunctionCall","src":"7467:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7459:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7289:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7303:4:29","type":""}],"src":"7138:353:29"},{"body":{"nodeType":"YulBlock","src":"7670:232:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7687:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7698:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7680:6:29"},"nodeType":"YulFunctionCall","src":"7680:21:29"},"nodeType":"YulExpressionStatement","src":"7680:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7721:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7732:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7717:3:29"},"nodeType":"YulFunctionCall","src":"7717:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"7737:2:29","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7710:6:29"},"nodeType":"YulFunctionCall","src":"7710:30:29"},"nodeType":"YulExpressionStatement","src":"7710:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7760:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7771:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7756:3:29"},"nodeType":"YulFunctionCall","src":"7756:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"7776:34:29","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7749:6:29"},"nodeType":"YulFunctionCall","src":"7749:62:29"},"nodeType":"YulExpressionStatement","src":"7749:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7831:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7842:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7827:3:29"},"nodeType":"YulFunctionCall","src":"7827:18:29"},{"kind":"string","nodeType":"YulLiteral","src":"7847:12:29","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7820:6:29"},"nodeType":"YulFunctionCall","src":"7820:40:29"},"nodeType":"YulExpressionStatement","src":"7820:40:29"},{"nodeType":"YulAssignment","src":"7869:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7881:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7892:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7877:3:29"},"nodeType":"YulFunctionCall","src":"7877:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7869:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7647:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7661:4:29","type":""}],"src":"7496:406:29"},{"body":{"nodeType":"YulBlock","src":"8008:76:29","statements":[{"nodeType":"YulAssignment","src":"8018:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8030:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8041:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8026:3:29"},"nodeType":"YulFunctionCall","src":"8026:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8018:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8060:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8071:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8053:6:29"},"nodeType":"YulFunctionCall","src":"8053:25:29"},"nodeType":"YulExpressionStatement","src":"8053:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7977:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7988:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7999:4:29","type":""}],"src":"7907:177:29"},{"body":{"nodeType":"YulBlock","src":"8218:168:29","statements":[{"nodeType":"YulAssignment","src":"8228:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8240:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8251:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8236:3:29"},"nodeType":"YulFunctionCall","src":"8236:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8228:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8270:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8281:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8263:6:29"},"nodeType":"YulFunctionCall","src":"8263:25:29"},"nodeType":"YulExpressionStatement","src":"8263:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8308:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8319:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8304:3:29"},"nodeType":"YulFunctionCall","src":"8304:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8328:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8336:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8324:3:29"},"nodeType":"YulFunctionCall","src":"8324:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8297:6:29"},"nodeType":"YulFunctionCall","src":"8297:83:29"},"nodeType":"YulExpressionStatement","src":"8297:83:29"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8179:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8190:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8198:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8209:4:29","type":""}],"src":"8089:297:29"},{"body":{"nodeType":"YulBlock","src":"8520:119:29","statements":[{"nodeType":"YulAssignment","src":"8530:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8542:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8553:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8538:3:29"},"nodeType":"YulFunctionCall","src":"8538:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8530:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8572:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8583:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8565:6:29"},"nodeType":"YulFunctionCall","src":"8565:25:29"},"nodeType":"YulExpressionStatement","src":"8565:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8610:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8621:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8606:3:29"},"nodeType":"YulFunctionCall","src":"8606:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"8626:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8599:6:29"},"nodeType":"YulFunctionCall","src":"8599:34:29"},"nodeType":"YulExpressionStatement","src":"8599:34:29"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8481:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8492:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8500:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8511:4:29","type":""}],"src":"8391:248:29"},{"body":{"nodeType":"YulBlock","src":"8689:289:29","statements":[{"nodeType":"YulAssignment","src":"8699:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8715:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8709:5:29"},"nodeType":"YulFunctionCall","src":"8709:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8699:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"8727:117:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8749:6:29"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8765:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"8771:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8761:3:29"},"nodeType":"YulFunctionCall","src":"8761:13:29"},{"kind":"number","nodeType":"YulLiteral","src":"8776:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8757:3:29"},"nodeType":"YulFunctionCall","src":"8757:86:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8745:3:29"},"nodeType":"YulFunctionCall","src":"8745:99:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8731:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8919:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8921:16:29"},"nodeType":"YulFunctionCall","src":"8921:18:29"},"nodeType":"YulExpressionStatement","src":"8921:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8862:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"8874:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8859:2:29"},"nodeType":"YulFunctionCall","src":"8859:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8898:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8910:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8895:2:29"},"nodeType":"YulFunctionCall","src":"8895:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8856:2:29"},"nodeType":"YulFunctionCall","src":"8856:62:29"},"nodeType":"YulIf","src":"8853:2:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8957:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8961:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8950:6:29"},"nodeType":"YulFunctionCall","src":"8950:22:29"},"nodeType":"YulExpressionStatement","src":"8950:22:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8669:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8678:6:29","type":""}],"src":"8644:334:29"},{"body":{"nodeType":"YulBlock","src":"9052:114:29","statements":[{"body":{"nodeType":"YulBlock","src":"9096:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9098:16:29"},"nodeType":"YulFunctionCall","src":"9098:18:29"},"nodeType":"YulExpressionStatement","src":"9098:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9068:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9076:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9065:2:29"},"nodeType":"YulFunctionCall","src":"9065:30:29"},"nodeType":"YulIf","src":"9062:2:29"},{"nodeType":"YulAssignment","src":"9127:33:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9143:1:29","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"9146:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9139:3:29"},"nodeType":"YulFunctionCall","src":"9139:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"9155:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9135:3:29"},"nodeType":"YulFunctionCall","src":"9135:25:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9127:4:29"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9032:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9043:4:29","type":""}],"src":"8983:183:29"},{"body":{"nodeType":"YulBlock","src":"9220:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"9242:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9244:16:29"},"nodeType":"YulFunctionCall","src":"9244:18:29"},"nodeType":"YulExpressionStatement","src":"9244:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9236:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"9239:1:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9233:2:29"},"nodeType":"YulFunctionCall","src":"9233:8:29"},"nodeType":"YulIf","src":"9230:2:29"},{"nodeType":"YulAssignment","src":"9273:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9285:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"9288:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9281:3:29"},"nodeType":"YulFunctionCall","src":"9281:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9273:4:29"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9202:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"9205:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9211:4:29","type":""}],"src":"9171:125:29"},{"body":{"nodeType":"YulBlock","src":"9354:205:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9364:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9373:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9368:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9433:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9458:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"9463:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9454:3:29"},"nodeType":"YulFunctionCall","src":"9454:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9477:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"9482:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9473:3:29"},"nodeType":"YulFunctionCall","src":"9473:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9467:5:29"},"nodeType":"YulFunctionCall","src":"9467:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9447:6:29"},"nodeType":"YulFunctionCall","src":"9447:39:29"},"nodeType":"YulExpressionStatement","src":"9447:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9394:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"9397:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9391:2:29"},"nodeType":"YulFunctionCall","src":"9391:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9405:19:29","statements":[{"nodeType":"YulAssignment","src":"9407:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9416:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9412:3:29"},"nodeType":"YulFunctionCall","src":"9412:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9407:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"9387:3:29","statements":[]},"src":"9383:113:29"},{"body":{"nodeType":"YulBlock","src":"9522:31:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9535:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"9540:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9531:3:29"},"nodeType":"YulFunctionCall","src":"9531:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"9549:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9524:6:29"},"nodeType":"YulFunctionCall","src":"9524:27:29"},"nodeType":"YulExpressionStatement","src":"9524:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9511:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"9514:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9508:2:29"},"nodeType":"YulFunctionCall","src":"9508:13:29"},"nodeType":"YulIf","src":"9505:2:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9332:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9337:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"9342:6:29","type":""}],"src":"9301:258:29"},{"body":{"nodeType":"YulBlock","src":"9611:148:29","statements":[{"body":{"nodeType":"YulBlock","src":"9702:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9704:16:29"},"nodeType":"YulFunctionCall","src":"9704:18:29"},"nodeType":"YulExpressionStatement","src":"9704:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9627:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"9634:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9624:2:29"},"nodeType":"YulFunctionCall","src":"9624:77:29"},"nodeType":"YulIf","src":"9621:2:29"},{"nodeType":"YulAssignment","src":"9733:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9744:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"9751:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9740:3:29"},"nodeType":"YulFunctionCall","src":"9740:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9733:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9593:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9603:3:29","type":""}],"src":"9564:195:29"},{"body":{"nodeType":"YulBlock","src":"9796:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9813:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9816:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9806:6:29"},"nodeType":"YulFunctionCall","src":"9806:88:29"},"nodeType":"YulExpressionStatement","src":"9806:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9910:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9913:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9903:6:29"},"nodeType":"YulFunctionCall","src":"9903:15:29"},"nodeType":"YulExpressionStatement","src":"9903:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9934:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9937:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9927:6:29"},"nodeType":"YulFunctionCall","src":"9927:15:29"},"nodeType":"YulExpressionStatement","src":"9927:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9764:184:29"},{"body":{"nodeType":"YulBlock","src":"9985:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10002:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10005:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9995:6:29"},"nodeType":"YulFunctionCall","src":"9995:88:29"},"nodeType":"YulExpressionStatement","src":"9995:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10099:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10102:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10092:6:29"},"nodeType":"YulFunctionCall","src":"10092:15:29"},"nodeType":"YulExpressionStatement","src":"10092:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10123:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10126:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10116:6:29"},"nodeType":"YulFunctionCall","src":"10116:15:29"},"nodeType":"YulExpressionStatement","src":"10116:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9953:184:29"},{"body":{"nodeType":"YulBlock","src":"10187:109:29","statements":[{"body":{"nodeType":"YulBlock","src":"10274:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10283:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10286:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10276:6:29"},"nodeType":"YulFunctionCall","src":"10276:12:29"},"nodeType":"YulExpressionStatement","src":"10276:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10210:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10221:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10228:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10217:3:29"},"nodeType":"YulFunctionCall","src":"10217:54:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10207:2:29"},"nodeType":"YulFunctionCall","src":"10207:65:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10200:6:29"},"nodeType":"YulFunctionCall","src":"10200:73:29"},"nodeType":"YulIf","src":"10197:2:29"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10176:5:29","type":""}],"src":"10142:154:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(5, _3)), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(5, _3)), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bytes32t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_5019e9bb860959cdda3e1d3eb61165a2a9c9d9818183c266b0f702fe5e27928b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Unauthorized!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2045":[{"length":32,"start":642},{"length":32,"start":1417},{"length":32,"start":1734},{"length":32,"start":3356},{"length":32,"start":3525},{"length":32,"start":3919},{"length":32,"start":4909}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635aff427d1161008c578063945c914211610066578063945c914214610204578063c0034e0c1461021f578063ef5cfb8c1461023a578063f443faeb1461024d57600080fd5b80635aff427d146101bb578063759cb53b146101ce5780638c20570b146101e957600080fd5b8063200ea222116100c8578063200ea222146101705780633c0672bb1461018b5780633c4f8dd8146101a05780633ff5b85f146101b357600080fd5b80630479d644146100ef578063109bbf05146101345780631b258d501461014f575b600080fd5b61010a734659d5ff63a1e1edd6d5dd9cc315e063c95947d081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61010a73c07e540dbfeccf7431ea2478eb28a03918c1c30e81565b61016261015d3660046121e0565b610268565b60405190815260200161012b565b61010a733432b6a60d23ca0dfca7761b7ab56459d9c964d081565b61019e61019936600461220f565b610571565b005b6101626101ae366004612247565b6106ac565b61019e610d04565b61019e6101c936600461220f565b610dad565b61010a734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b81565b61010a73a537d64881b84faffb9ae43c951eebf368b71cda81565b61010a73d533a949740bb3306d119cc777fa900ba034cd5281565b61010a733465b8211278505ae9c6b5ba08ecd9af951a689681565b61019e610248366004612064565b610f37565b61010a73f43211935c781d5ca1a41d2041f397b8a7366c7a81565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461030e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a6564210000000000000000000000000000000000000060448201526064015b60405180910390fd5b6040517fe44b9fa50000000000000000000000000000000000000000000000000000000081526004810184905230602482015273a537d64881b84faffb9ae43c951eebf368b71cda9063e44b9fa590604401602060405180830381600087803b15801561037a57600080fd5b505af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b291906121c8565b506040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d090633969dfb49082906370a082319060240160206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045691906121c8565b6040518263ffffffff1660e01b815260040161047491815260200190565b600060405180830381600087803b15801561048e57600080fd5b505af11580156104a2573d6000803e3d6000fd5b50506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273f43211935c781d5ca1a41d2041f397b8a7366c7a92506370a08231915060240160206040518083038186803b15801561050957600080fd5b505afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054191906121c8565b905061056273f43211935c781d5ca1a41d2041f397b8a7366c7a8383610fec565b61056b82611079565b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b6040517fd2fbdc0d000000000000000000000000000000000000000000000000000000008152600481018390526024810184905273a537d64881b84faffb9ae43c951eebf368b71cda9063d2fbdc0d906044015b600060405180830381600087803b15801561067e57600080fd5b505af1158015610692573d6000803e3d6000fd5b5050505061069f81611079565b6106a761132b565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461074d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273a537d64881b84faffb9ae43c951eebf368b71cda602482015260001990734659d5ff63a1e1edd6d5dd9cc315e063c95947d09063dd62ed3e9060440160206040518083038186803b1580156107ce57600080fd5b505afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080691906121c8565b146108c6576040517f095ea7b300000000000000000000000000000000000000000000000000000000815273a537d64881b84faffb9ae43c951eebf368b71cda60048201526000196024820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d09063095ea7b390604401602060405180830381600087803b15801561088c57600080fd5b505af11580156108a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c491906121a8565b505b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d060248201526000199073f43211935c781d5ca1a41d2041f397b8a7366c7a9063dd62ed3e9060440160206040518083038186803b15801561094757600080fd5b505afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f91906121c8565b14610a3f576040517f095ea7b3000000000000000000000000000000000000000000000000000000008152734659d5ff63a1e1edd6d5dd9cc315e063c95947d06004820152600019602482015273f43211935c781d5ca1a41d2041f397b8a7366c7a9063095ea7b390604401602060405180830381600087803b158015610a0557600080fd5b505af1158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d91906121a8565b505b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d060248201526000199073c07e540dbfeccf7431ea2478eb28a03918c1c30e9063dd62ed3e9060440160206040518083038186803b158015610ac057600080fd5b505afa158015610ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af891906121c8565b14610bb8576040517f095ea7b3000000000000000000000000000000000000000000000000000000008152734659d5ff63a1e1edd6d5dd9cc315e063c95947d06004820152600019602482015273c07e540dbfeccf7431ea2478eb28a03918c1c30e9063095ea7b390604401602060405180830381600087803b158015610b7e57600080fd5b505af1158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906121a8565b505b6040517f6e553f6500000000000000000000000000000000000000000000000000000000815260048101859052306024820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d090636e553f6590604401600060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b5073a537d64881b84faffb9ae43c951eebf368b71cda92506317b18c899150869050610c64428761233b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401602060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf291906121c8565b9050610cfd82611079565b9392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610da3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b610dab61132b565b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b8215610f2e576040517f6e553f6500000000000000000000000000000000000000000000000000000000815260048101849052306024820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d090636e553f6590604401600060405180830381600087803b158015610ebe57600080fd5b505af1158015610ed2573d6000803e3d6000fd5b50506040517fb85efd06000000000000000000000000000000000000000000000000000000008152600481018590526024810186905273a537d64881b84faffb9ae43c951eebf368b71cda925063b85efd069150604401610664565b61069f81611079565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610fd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f556e617574686f72697a656421000000000000000000000000000000000000006044820152606401610305565b610fe1600182611364565b610fe961132b565b50565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526106a7908490611720565b733465b8211278505ae9c6b5ba08ecd9af951a689673ffffffffffffffffffffffffffffffffffffffff166302fb0c5e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110d357600080fd5b505afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b91906121a8565b15610fe9576040517fd9f96e8d00000000000000000000000000000000000000000000000000000000815230600482015260009073a537d64881b84faffb9ae43c951eebf368b71cda9063d9f96e8d9060240160206040518083038186803b15801561117657600080fd5b505afa15801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae91906121c8565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152909150600090733465b8211278505ae9c6b5ba08ecd9af951a6896906370a082319060240160206040518083038186803b15801561121757600080fd5b505afa15801561122b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124f91906121c8565b905080821061130657733465b8211278505ae9c6b5ba08ecd9af951a68966347e7ef248461127d848661233b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044015b600060405180830381600087803b1580156112e957600080fd5b505af11580156112fd573d6000803e3d6000fd5b50505050505050565b733465b8211278505ae9c6b5ba08ecd9af951a689663f3fef3a38461127d858561233b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16ff5b811561164c576040517fc00007b000000000000000000000000000000000000000000000000000000000815230600482015273a537d64881b84faffb9ae43c951eebf368b71cda9063c00007b090602401600060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526114299190810190612121565b506040517f6b09169500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff82166024820152734659d5ff63a1e1edd6d5dd9cc315e063c95947d090636b09169590604401600060405180830381600087803b1580156114ab57600080fd5b505af11580156114bf573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073d533a949740bb3306d119cc777fa900ba034cd5291506370a082319060240160206040518083038186803b15801561152957600080fd5b505afa15801561153d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156191906121c8565b905080156115885761158873d533a949740bb3306d119cc777fa900ba034cd528383610fec565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b906370a082319060240160206040518083038186803b1580156115eb57600080fd5b505afa1580156115ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162391906121c8565b9050801561164a5761164a734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b8383610fec565b505b6116558161182c565b600073a537d64881b84faffb9ae43c951eebf368b71cda73ffffffffffffffffffffffffffffffffffffffff166312edb24c6040518163ffffffff1660e01b815260040160006040518083038186803b1580156116b157600080fd5b505afa1580156116c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261170b9190810190612080565b90506117178183611990565b6106a782611b8e565b6000611782826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e7a9092919063ffffffff16565b8051909150156106a757808060200190518101906117a091906121a8565b6106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610305565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090733432b6a60d23ca0dfca7761b7ab56459d9c964d0906370a082319060240160206040518083038186803b15801561189257600080fd5b505afa1580156118a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ca91906121c8565b9050801561198c576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260248101829052733432b6a60d23ca0dfca7761b7ab56459d9c964d09063a9059cbb90604401602060405180830381600087803b15801561195457600080fd5b505af1158015611968573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a791906121a8565b5050565b60005b82518110156106a757733432b6a60d23ca0dfca7761b7ab56459d9c964d073ffffffffffffffffffffffffffffffffffffffff16838281518110611a00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614611b7c576000838281518110611a5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015611acf57600080fd5b505afa158015611ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0791906121c8565b90508015611b7a57611b7a8382868581518110611b4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610fec9092919063ffffffff16565b505b80611b8681612382565b915050611993565b733465b8211278505ae9c6b5ba08ecd9af951a689673ffffffffffffffffffffffffffffffffffffffff166302fb0c5e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611be857600080fd5b505afa158015611bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2091906121a8565b15610fe9576040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090733465b8211278505ae9c6b5ba08ecd9af951a6896906370a082319060240160206040518083038186803b158015611c8b57600080fd5b505afa158015611c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc391906121c8565b6040517fd9f96e8d00000000000000000000000000000000000000000000000000000000815230600482015290915060009073a537d64881b84faffb9ae43c951eebf368b71cda9063d9f96e8d9060240160206040518083038186803b158015611d2c57600080fd5b505afa158015611d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6491906121c8565b905081158015611d745750600081115b15611e14576040517f47e7ef2400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052733465b8211278505ae9c6b5ba08ecd9af951a6896906347e7ef2490604401600060405180830381600087803b158015611dfb57600080fd5b505af1158015611e0f573d6000803e3d6000fd5b505050505b6040517fc00007b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152733465b8211278505ae9c6b5ba08ecd9af951a68969063c00007b0906024016112cf565b6060611e898484600085611e91565b949350505050565b606082471015611f23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610305565b843b611f8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610305565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611fb4919061225b565b60006040518083038185875af1925050503d8060008114611ff1576040519150601f19603f3d011682016040523d82523d6000602084013e611ff6565b606091505b5091509150612006828286612011565b979650505050505050565b60608315612020575081610cfd565b8251156120305782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103059190612277565b600060208284031215612075578081fd5b8135610cfd816123fb565b60006020808385031215612092578182fd5b825167ffffffffffffffff8111156120a8578283fd5b8301601f810185136120b8578283fd5b80516120cb6120c682612317565b6122c8565b80828252848201915084840188868560051b87010111156120ea578687fd5b8694505b83851015612115578051612101816123fb565b8352600194909401939185019185016120ee565b50979650505050505050565b60006020808385031215612133578182fd5b825167ffffffffffffffff811115612149578283fd5b8301601f81018513612159578283fd5b80516121676120c682612317565b80828252848201915084840188868560051b8701011115612186578687fd5b8694505b8385101561211557805183526001949094019391850191850161218a565b6000602082840312156121b9578081fd5b81518015158114610cfd578182fd5b6000602082840312156121d9578081fd5b5051919050565b600080604083850312156121f2578081fd5b823591506020830135612204816123fb565b809150509250929050565b600080600060608486031215612223578081fd5b8335925060208401359150604084013561223c816123fb565b809150509250925092565b600080600060608486031215612223578283fd5b6000825161226d818460208701612352565b9190910192915050565b6020815260008251806020840152612296816040850160208701612352565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561230f5761230f6123cc565b604052919050565b600067ffffffffffffffff821115612331576123316123cc565b5060051b60200190565b60008282101561234d5761234d61239d565b500390565b60005b8381101561236d578181015183820152602001612355565b8381111561237c576000848401525b50505050565b60006000198214156123965761239661239d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610fe957600080fdfea264697066735822122069e34ef58c957f009198609be9fe6de22b31e200884867bfe67fa7617a5b2fed64736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5AFF427D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x945C9142 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x945C9142 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xC0034E0C EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xEF5CFB8C EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF443FAEB EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5AFF427D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x759CB53B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8C20570B EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200EA222 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x200EA222 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x3C0672BB EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x3C4F8DD8 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x3FF5B85F EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x479D644 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x109BBF05 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x1B258D50 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12B JUMP JUMPDEST PUSH2 0x10A PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 DUP2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x19E PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x220F JUMP JUMPDEST PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x10A PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 DUP2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x10A PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE44B9FA500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xE44B9FA5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x3969DFB4 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP3 POP PUSH4 0x70A08231 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x562 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x56B DUP3 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD2FBDC0D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD2FBDC0D SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x69F DUP2 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x132B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xF43211935C781D5CA1A41D2041F397B8A7366C7A SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 NOT SWAP1 PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF8 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xC07E540DBFECCF7431EA2478EB28A03918C1C30E SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E553F6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP3 POP PUSH4 0x17B18C89 SWAP2 POP DUP7 SWAP1 POP PUSH2 0xC64 TIMESTAMP DUP8 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCFD DUP3 PUSH2 0x1079 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH2 0xDAB PUSH2 0x132B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E553F6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xB85EFD0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP3 POP PUSH4 0xB85EFD06 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x664 JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x1079 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH2 0xFE1 PUSH1 0x1 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xFE9 PUSH2 0x132B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x1720 JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2FB0C5E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD9F96E8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD9F96E8D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124F SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x1306 JUMPI PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH4 0x47E7EF24 DUP5 PUSH2 0x127D DUP5 DUP7 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH4 0xF3FEF3A3 DUP5 PUSH2 0x127D DUP6 DUP6 PUSH2 0x233B JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST DUP2 ISZERO PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH32 0xC00007B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xC00007B0 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1429 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2121 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6B09169500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4659D5FF63A1E1EDD6D5DD9CC315E063C95947D0 SWAP1 PUSH4 0x6B091695 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1561 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1588 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x164A JUMPI PUSH2 0x164A PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST POP JUMPDEST PUSH2 0x1655 DUP2 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12EDB24C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x170B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2080 JUMP JUMPDEST SWAP1 POP PUSH2 0x1717 DUP2 DUP4 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x6A7 DUP3 PUSH2 0x1B8E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1782 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E7A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x6A7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17A0 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18CA SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1968 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6A7 JUMPI PUSH20 0x3432B6A60D23CA0DFCA7761B7AB56459D9C964D0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A00 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A5E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B07 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B7A DUP4 DUP3 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1B4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1B86 DUP2 PUSH2 0x2382 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1993 JUMP JUMPDEST PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2FB0C5E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C20 SWAP2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC3 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD9F96E8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0xA537D64881B84FAFFB9AE43C951EEBF368B71CDA SWAP1 PUSH4 0xD9F96E8D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D64 SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1D74 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1E14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x47E7EF2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0x47E7EF24 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC00007B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x3465B8211278505AE9C6B5BA08ECD9AF951A6896 SWAP1 PUSH4 0xC00007B0 SWAP1 PUSH1 0x24 ADD PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E89 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1E91 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1F23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x305 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1F8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FB4 SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FF1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2006 DUP3 DUP3 DUP7 PUSH2 0x2011 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2020 JUMPI POP DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2030 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2075 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCFD DUP2 PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2092 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x20B8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x20CB PUSH2 0x20C6 DUP3 PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x22C8 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x20EA JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2115 JUMPI DUP1 MLOAD PUSH2 0x2101 DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x20EE JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2133 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2149 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2159 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2167 PUSH2 0x20C6 DUP3 PUSH2 0x2317 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2186 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2115 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x218A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCFD JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21F2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2204 DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2223 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x223C DUP2 PUSH2 0x23FB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2223 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x226D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2352 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2296 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x230F JUMPI PUSH2 0x230F PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2331 JUMPI PUSH2 0x2331 PUSH2 0x23CC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x234D JUMPI PUSH2 0x234D PUSH2 0x239D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x236D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2355 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x237C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2396 JUMPI PUSH2 0x2396 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xE34EF58C957F00919860 SWAP12 0xE9 INVALID PUSH14 0xE22B31E200884867BFE67FA7617A JUMPDEST 0x2F 0xED PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"411:7479:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:82;;722:42;682:82;;;;;4516:42:29;4504:55;;;4486:74;;4474:2;4459:18;682:82:10;;;;;;;;879:89;;926:42;879:89;;3119:500;;;;;;:::i;:::-;;:::i;:::-;;;5351:25:29;;;5339:2;5324:18;3119:500:10;5306:76:29;1057:72:10;;1087:42;1057:72;;2830:283;;;;;;:::i;:::-;;:::i;:::-;;1452:930;;;;;;:::i;:::-;;:::i;4001:74::-;;;:::i;2388:436::-;;;;;;:::i;:::-;;:::i;1213:72::-;;1243:42;1213:72;;789:84;;831:42;789:84;;1135:72;;1165:42;1135:72;;974:76;;1008:42;974:76;;3625:264;;;;;;:::i;:::-;;:::i;599:77::-;;634:42;599:77;;3119:500;3196:12;1390:10;:20;1404:6;1390:20;;1382:46;;;;;;;6591:2:29;1382:46:10;;;6573:21:29;6630:2;6610:18;;;6603:30;6669:15;6649:18;;;6642:43;6702:18;;1382:46:10;;;;;;;;;3240:69:::1;::::0;;;;::::1;::::0;::::1;5561:25:29::0;;;3303:4:10::1;5602:18:29::0;;;5595:83;831:42:10::1;::::0;3240:46:::1;::::0;5534:18:29;;3240:69:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3388:46:10::1;::::0;;;;3428:4:::1;3388:46;::::0;::::1;4486:74:29::0;722:42:10::1;::::0;3338:49:::1;::::0;722:42;;3388:31:::1;::::0;4459:18:29;;3388:46:10::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3338:97;;;;;;;;;;;;;5351:25:29::0;;5339:2;5324:18;;5306:76;3338:97:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3483:41:10::1;::::0;;;;3518:4:::1;3483:41;::::0;::::1;4486:74:29::0;634:42:10::1;::::0;-1:-1:-1;3483:26:10::1;::::0;-1:-1:-1;4459:18:29;;3483:41:10::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3473:51:::0;-1:-1:-1;3534:44:10::1;634:42;3564:4:::0;3473:51;3534:29:::1;:44::i;:::-;3588:24;3607:4;3588:18;:24::i;:::-;3119:500:::0;;;;:::o;2830:283::-;1390:10;:20;1404:6;1390:20;;1382:46;;;;;;;6591:2:29;1382:46:10;;;6573:21:29;6630:2;6610:18;;;6603:30;6669:15;6649:18;;;6642:43;6702:18;;1382:46:10;6563:163:29;1382:46:10;2957:62:::1;::::0;;;;::::1;::::0;::::1;5863:25:29::0;;;5904:18;;;5897:34;;;831:42:10::1;::::0;2957::::1;::::0;5836:18:29;;2957:62:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3058:24;3077:4;3058:18;:24::i;:::-;3092:14;:12;:14::i;:::-;2830:283:::0;;;:::o;1452:930::-;1544:14;1390:10;:20;1404:6;1390:20;;1382:46;;;;;;;6591:2:29;1382:46:10;;;6573:21:29;6630:2;6610:18;;;6603:30;6669:15;6649:18;;;6642:43;6702:18;;1382:46:10;6563:163:29;1382:46:10;1635:63:::1;::::0;;;;1675:4:::1;1635:63;::::0;::::1;4806:34:29::0;831:42:10::1;4856:18:29::0;;;4849:43;-1:-1:-1;;516:12:10;722:42:::1;::::0;1635:31:::1;::::0;4718:18:29;;1635:63:10::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:74;1632:159;;1725:55;::::0;;;;831:42:::1;1725:55;::::0;::::1;5077:74:29::0;-1:-1:-1;;5167:18:29;;;5160:34;722:42:10::1;::::0;1725:29:::1;::::0;5050:18:29;;1725:55:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1632:159;1803:56;::::0;;;;1838:4:::1;1803:56;::::0;::::1;4806:34:29::0;722:42:10::1;4856:18:29::0;;;4849:43;-1:-1:-1;;516:12:10;634:42:::1;::::0;1803:26:::1;::::0;4718:18:29;;1803:56:10::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;1800:145;;1886:48;::::0;;;;722:42:::1;1886:48;::::0;::::1;5077:74:29::0;-1:-1:-1;;5167:18:29;;;5160:34;634:42:10::1;::::0;1886:24:::1;::::0;5050:18:29;;1886:48:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1800:145;1957:68;::::0;;;;2004:4:::1;1957:68;::::0;::::1;4806:34:29::0;722:42:10::1;4856:18:29::0;;;4849:43;-1:-1:-1;;516:12:10;926:42:::1;::::0;1957:38:::1;::::0;4718:18:29;;1957:68:10::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:79;1954:169;;2052:60;::::0;;;;722:42:::1;2052:60;::::0;::::1;5077:74:29::0;-1:-1:-1;;5167:18:29;;;5160:34;926:42:10::1;::::0;2052:36:::1;::::0;5050:18:29;;2052:60:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1954:169;2164:61;::::0;;;;::::1;::::0;::::1;5561:25:29::0;;;2219:4:10::1;5602:18:29::0;;;5595:83;722:42:10::1;::::0;2164:39:::1;::::0;5534:18:29;;2164:61:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;831:42:10::1;::::0;-1:-1:-1;2261:43:10::1;::::0;-1:-1:-1;2305:5:10;;-1:-1:-1;2312:28:10::1;2325:15;2312:10:::0;:28:::1;:::i;:::-;2261:80;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;5863:25:29::0;;;;5904:18;;;5897:34;5836:18;;2261:80:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2252:89;;2351:24;2370:4;2351:18;:24::i;:::-;1452:930:::0;;;;;:::o;4001:74::-;1390:10;:20;1404:6;1390:20;;1382:46;;;;;;;6591:2:29;1382:46:10;;;6573:21:29;6630:2;6610:18;;;6603:30;6669:15;6649:18;;;6642:43;6702:18;;1382:46:10;6563:163:29;1382:46:10;4054:14:::1;:12;:14::i;:::-;4001:74::o:0;2388:436::-;1390:10;:20;1404:6;1390:20;;1382:46;;;;;;;6591:2:29;1382:46:10;;;6573:21:29;6630:2;6610:18;;;6603:30;6669:15;6649:18;;;6642:43;6702:18;;1382:46:10;6563:163:29;1382:46:10;2488:10;;2485:237:::1;;2548:62;::::0;;;;::::1;::::0;::::1;5561:25:29::0;;;2604:4:10::1;5602:18:29::0;;;5595:83;722:42:10::1;::::0;2548:39:::1;::::0;5534:18:29;;2548:62:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2649:62:10::1;::::0;;;;::::1;::::0;::::1;5863:25:29::0;;;5904:18;;;5897:34;;;831:42:10::1;::::0;-1:-1:-1;2649:46:10::1;::::0;-1:-1:-1;5836:18:29;;2649:62:10::1;5818:119:29::0;2485:237:10::1;2769:24;2788:4;2769:18;:24::i;3625:264::-:0;1390:10;:20;1404:6;1390:20;;1382:46;;;;;;;6591:2:29;1382:46:10;;;6573:21:29;6630:2;6610:18;;;6603:30;6669:15;6649:18;;;6642:43;6702:18;;1382:46:10;6563:163:29;1382:46:10;3691:22:::1;3702:4;3708;3691:10;:22::i;:::-;3868:14;:12;:14::i;:::-;3625:264:::0;:::o;634:205:4:-;773:58;;;5107:42:29;5095:55;;773:58:4;;;5077:74:29;5167:18;;;;5160:34;;;773:58:4;;;;;;;;;;5050:18:29;;;;773:58:4;;;;;;;;;;796:23;773:58;;;746:86;;766:5;;746:19;:86::i;5543:781:10:-;1008:42;5650:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5647:671;;;5806:63;;;;;5863:4;5806:63;;;4486:74:29;5788:15:10;;831:42;;5806:48;;4459:18:29;;5806:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5950:42;;;;;5986:4;5950:42;;;4486:74:29;5788:81:10;;-1:-1:-1;5936:11:10;;1008:42;;5950:27;;4459:18:29;;5950:42:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5936:56;;6020:3;6009:7;:14;6006:302;;1008:42;6098:25;6124:4;6130:13;6140:3;6130:7;:13;:::i;:::-;6098:46;;;;;;;;;;5107:42:29;5095:55;;;6098:46:10;;;5077:74:29;5167:18;;;5160:34;5050:18;;6098:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2830:283;;;:::o;6006:302::-;1008:42;6246:26;6273:4;6279:13;6285:7;6279:3;:13;:::i;4081:79::-;4145:6;4124:29;;;4441:1030;4527:6;4524:629;;;4578:56;;;;;4628:4;4578:56;;;4486:74:29;831:42:10;;4578:41;;4459:18:29;;4578:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4701:62:10;;;;;4751:4;4701:62;;;4806:34:29;4755:42;4876:15;;4856:18;;;4849:43;722:42:10;;4701:41;;4718:18:29;;4701:62:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4876:36:10;;;;;4906:4;4876:36;;;4486:74:29;4864:9:10;;-1:-1:-1;1165:42:10;;-1:-1:-1;4876:21:10;;4459:18:29;;4876:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4864:48;-1:-1:-1;4929:5:10;;4926:75;;4953:33;1165:42;4978:4;4984:1;4953:24;:33::i;:::-;5018:36;;;;;5048:4;5018:36;;;4486:74:29;1243:42:10;;5018:21;;4459:18:29;;5018:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5014:40;-1:-1:-1;5071:5:10;;5068:75;;5095:33;1243:42;5120:4;5126:1;5095:24;:33::i;:::-;4524:629;;5190:17;5202:4;5190:11;:17::i;:::-;5254:29;831:42;5286:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5254:84;;5368:35;5384:12;5398:4;5368:15;:35::i;:::-;5438:26;5459:4;5438:20;:26::i;3140:706:4:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;3585:27;;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:4;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;;;;7698:2:29;3744:85:4;;;7680:21:29;7737:2;7717:18;;;7710:30;7776:34;7756:18;;;7749:62;7847:12;7827:18;;;7820:40;7877:19;;3744:85:4;7670:232:29;6382:249:10;6498:36;;;;;6528:4;6498:36;;;4486:74:29;6480:15:10;;1087:42;;6498:21;;4459:18:29;;6498:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6480:54;-1:-1:-1;6547:14:10;;6544:81;;6576:38;;;;;5107:42:29;5095:55;;6576:38:10;;;5077:74:29;5167:18;;;5160:34;;;1087:42:10;;6576:20;;5050:18:29;;6576:38:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6544:81::-;6382:249;;:::o;7479:408::-;7596:9;7592:289;7615:7;:14;7611:1;:18;7592:289;;;1087:42;7652:17;;:7;7660:1;7652:10;;;;;;;;;;;;;;;;;;;;;;:17;;;7649:222;;7688:11;7709:7;7717:1;7709:10;;;;;;;;;;;;;;;;;;;;;;;;;;7702:43;;;;;7739:4;7702:43;;;4486:74:29;7702:28:10;;;;;;;4459:18:29;;7702:43:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7688:57;-1:-1:-1;7766:7:10;;7763:94;;7796:42;7828:4;7834:3;7803:7;7811:1;7803:10;;;;;;;;;;;;;;;;;;;;;;7796:31;;;;:42;;;;;:::i;:::-;7649:222;;7631:3;;;;:::i;:::-;;;;7592:289;;6661:731;1008:42;6726:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6723:663;;;6984:42;;;;;7020:4;6984:42;;;4486:74:29;6970:11:10;;1008:42;;6984:27;;4459:18:29;;6984:42:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7058:63;;;;;7115:4;7058:63;;;4486:74:29;6970:56:10;;-1:-1:-1;7040:15:10;;831:42;;7058:48;;4459:18:29;;7058:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7040:81;-1:-1:-1;7138:8:10;;:23;;;;;7160:1;7150:7;:11;7138:23;7135:194;;;7275:39;;;;;5107:42:29;5095:55;;7275:39:10;;;5077:74:29;5167:18;;;5160:34;;;1008:42:10;;7275:25;;5050:18:29;;7275:39:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7135:194;7342:33;;;;;4516:42:29;4504:55;;7342:33:10;;;4486:74:29;1008:42:10;;7342:27;;4459:18:29;;7342:33:10;4441:125:29;3461:223:5;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:5:o;4548:500::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;;;;6933:2:29;4737:81:5;;;6915:21:29;6972:2;6952:18;;;6945:30;7011:34;6991:18;;;6984:62;7082:8;7062:18;;;7055:36;7108:19;;4737:81:5;6905:228:29;4737:81:5;1034:20;;4828:60;;;;;;;7340:2:29;4828:60:5;;;7322:21:29;7379:2;7359:18;;;7352:30;7418:31;7398:18;;;7391:59;7467:18;;4828:60:5;7312:179:29;4828:60:5;4900:12;4914:23;4941:6;:11;;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:5:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:5;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7408:145;7598:12;7591:20;;;;;;;;;;;:::i;14:257:29:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:1012::-;371:6;402:2;445;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;504:9;498:16;537:18;529:6;526:30;523:2;;;574:6;566;559:22;523:2;602:22;;655:4;647:13;;643:27;-1:-1:-1;633:2:29;;689:6;681;674:22;633:2;723;717:9;746:60;762:43;802:2;762:43;:::i;:::-;746:60;:::i;:::-;828:3;852:2;847:3;840:15;880:2;875:3;871:12;864:19;;911:2;907;903:11;959:7;954:2;948;945:1;941:10;937:2;933:19;929:28;926:41;923:2;;;985:6;977;970:22;923:2;1012:6;1003:15;;1027:231;1041:2;1038:1;1035:9;1027:231;;;1105:3;1099:10;1122:31;1147:5;1122:31;:::i;:::-;1166:18;;1059:1;1052:9;;;;;1204:12;;;;1236;;1027:231;;;-1:-1:-1;1277:5:29;382:906;-1:-1:-1;;;;;;;382:906:29:o;1293:937::-;1388:6;1419:2;1462;1450:9;1441:7;1437:23;1433:32;1430:2;;;1483:6;1475;1468:22;1430:2;1521:9;1515:16;1554:18;1546:6;1543:30;1540:2;;;1591:6;1583;1576:22;1540:2;1619:22;;1672:4;1664:13;;1660:27;-1:-1:-1;1650:2:29;;1706:6;1698;1691:22;1650:2;1740;1734:9;1763:60;1779:43;1819:2;1779:43;:::i;1763:60::-;1845:3;1869:2;1864:3;1857:15;1897:2;1892:3;1888:12;1881:19;;1928:2;1924;1920:11;1976:7;1971:2;1965;1962:1;1958:10;1954:2;1950:19;1946:28;1943:41;1940:2;;;2002:6;1994;1987:22;1940:2;2029:6;2020:15;;2044:156;2058:2;2055:1;2052:9;2044:156;;;2115:10;;2103:23;;2076:1;2069:9;;;;;2146:12;;;;2178;;2044:156;;2235:297;2302:6;2355:2;2343:9;2334:7;2330:23;2326:32;2323:2;;;2376:6;2368;2361:22;2323:2;2413:9;2407:16;2466:5;2459:13;2452:21;2445:5;2442:32;2432:2;;2493:6;2485;2478:22;2537:194;2607:6;2660:2;2648:9;2639:7;2635:23;2631:32;2628:2;;;2681:6;2673;2666:22;2628:2;-1:-1:-1;2709:16:29;;2618:113;-1:-1:-1;2618:113:29:o;2736:325::-;2804:6;2812;2865:2;2853:9;2844:7;2840:23;2836:32;2833:2;;;2886:6;2878;2871:22;2833:2;2927:9;2914:23;2904:33;;2987:2;2976:9;2972:18;2959:32;3000:31;3025:5;3000:31;:::i;:::-;3050:5;3040:15;;;2823:238;;;;;:::o;3265:393::-;3342:6;3350;3358;3411:2;3399:9;3390:7;3386:23;3382:32;3379:2;;;3432:6;3424;3417:22;3379:2;3473:9;3460:23;3450:33;;3530:2;3519:9;3515:18;3502:32;3492:42;;3584:2;3573:9;3569:18;3556:32;3597:31;3622:5;3597:31;:::i;:::-;3647:5;3637:15;;;3369:289;;;;;:::o;3663:393::-;3740:6;3748;3756;3809:2;3797:9;3788:7;3784:23;3780:32;3777:2;;;3830:6;3822;3815:22;4061:274;4190:3;4228:6;4222:13;4244:53;4290:6;4285:3;4278:4;4270:6;4266:17;4244:53;:::i;:::-;4313:16;;;;;4198:137;-1:-1:-1;;4198:137:29:o;5942:442::-;6091:2;6080:9;6073:21;6054:4;6123:6;6117:13;6166:6;6161:2;6150:9;6146:18;6139:34;6182:66;6241:6;6236:2;6225:9;6221:18;6216:2;6208:6;6204:15;6182:66;:::i;:::-;6300:2;6288:15;6305:66;6284:88;6269:104;;;;6375:2;6265:113;;6063:321;-1:-1:-1;;6063:321:29:o;8644:334::-;8715:2;8709:9;8771:2;8761:13;;8776:66;8757:86;8745:99;;8874:18;8859:34;;8895:22;;;8856:62;8853:2;;;8921:18;;:::i;:::-;8957:2;8950:22;8689:289;;-1:-1:-1;8689:289:29:o;8983:183::-;9043:4;9076:18;9068:6;9065:30;9062:2;;;9098:18;;:::i;:::-;-1:-1:-1;9143:1:29;9139:14;9155:4;9135:25;;9052:114::o;9171:125::-;9211:4;9239:1;9236;9233:8;9230:2;;;9244:18;;:::i;:::-;-1:-1:-1;9281:9:29;;9220:76::o;9301:258::-;9373:1;9383:113;9397:6;9394:1;9391:13;9383:113;;;9473:11;;;9467:18;9454:11;;;9447:39;9419:2;9412:10;9383:113;;;9514:6;9511:1;9508:13;9505:2;;;9549:1;9540:6;9535:3;9531:16;9524:27;9505:2;;9354:205;;;:::o;9564:195::-;9603:3;-1:-1:-1;9624:77:29;;9621:2;;;9704:18;;:::i;:::-;-1:-1:-1;9751:1:29;9740:13;;9611:148::o;9764:184::-;9816:77;9813:1;9806:88;9913:4;9910:1;9903:15;9937:4;9934:1;9927:15;9953:184;10005:77;10002:1;9995:88;10102:4;10099:1;10092:15;10126:4;10123:1;10116:15;10142:154;10228:42;10221:5;10217:54;10210:5;10207:65;10197:2;;10286:1;10283;10276:12"},"gasEstimates":{"creation":{"codeDepositCost":"1859800","executionCost":"infinite","totalCost":"infinite"},"external":{"CONVEX_DEPOSIT_TOKEN()":"239","CRV()":"215","CURVE_LP()":"281","CVX()":"238","FXS()":"216","REWARDS()":"237","STAKING_ADDRESS()":"260","STAKING_TOKEN()":"217","claimRewards(address)":"infinite","cleanMemory()":"infinite","createLock(uint256,uint256,address)":"infinite","increaseAmount(uint256,bytes32,address)":"infinite","increaseUnlockTime(uint256,bytes32,address)":"infinite","withdraw(bytes32,address)":"infinite"},"internal":{"_checkpointRewards(address)":"infinite","_cleanMemory()":"infinite","_getReward(bool,address)":"infinite","_processExtraRewards(address)":"infinite","_processFxs(address)":"infinite","_transferTokens(address[] memory,address)":"infinite"}},"methodIdentifiers":{"CONVEX_DEPOSIT_TOKEN()":"109bbf05","CRV()":"945c9142","CURVE_LP()":"f443faeb","CVX()":"759cb53b","FXS()":"200ea222","REWARDS()":"c0034e0c","STAKING_ADDRESS()":"8c20570b","STAKING_TOKEN()":"0479d644","claimRewards(address)":"ef5cfb8c","cleanMemory()":"3ff5b85f","createLock(uint256,uint256,address)":"3c4f8dd8","increaseAmount(uint256,bytes32,address)":"5aff427d","increaseUnlockTime(uint256,bytes32,address)":"3c0672bb","withdraw(bytes32,address)":"1b258d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CONVEX_DEPOSIT_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CRV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURVE_LP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CVX\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FXS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARDS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cleanMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"createLock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"kek_id\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kek_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"increaseAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kek_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"increaseUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"kek_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"RobAnon\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cleanMemory()\":{\"notice\":\"Credit to doublesharp for the brilliant gas-saving concept Self-destructing clone pattern\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VestedEscrowSmartWallet.sol\":\"VestedEscrowSmartWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/VestedEscrowSmartWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\nimport \\\"./interfaces/IFraxFarmERC20.sol\\\";\\nimport \\\"./interfaces/IFraxFarmBase.sol\\\";\\nimport \\\"./interfaces/IConvexWrapperV2.sol\\\";\\nimport \\\"./interfaces/IRewards.sol\\\";\\n\\nimport \\\"./interfaces/IDistributor.sol\\\";\\nimport \\\"./interfaces/IRewardsHandler.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n\\npragma solidity ^0.8.0;\\n\\n/// @author RobAnon\\ncontract VestedEscrowSmartWallet {\\n\\n    using SafeERC20 for IERC20;\\n\\n    uint private constant MAX_INT = 2 ** 256 - 1;\\n\\n    address private immutable MASTER;\\n\\n    // Hardcoded for MVP\\n    address public constant CURVE_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;\\n    address public constant STAKING_TOKEN = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0; // ConvexWrapperV2\\n    address public constant STAKING_ADDRESS = 0xa537d64881b84faffb9Ae43c951EEbF368b71cdA;\\n    address public constant CONVEX_DEPOSIT_TOKEN = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;\\n    address public constant REWARDS = 0x3465B8211278505ae9C6b5ba08ECD9af951A6896;\\n\\n    address public constant FXS = 0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0;\\n    address public constant CRV = 0xD533a949740bb3306d119CC777fa900bA034cd52;\\n    address public constant CVX = 0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B;\\n\\n\\n\\n    constructor() {\\n        MASTER = msg.sender;\\n    }\\n\\n    modifier onlyMaster() {\\n        require(msg.sender == MASTER, 'Unauthorized!');\\n        _;\\n    }\\n\\n    function createLock(uint value, uint unlockTime, address user) external onlyMaster returns (bytes32 kek_id) {\\n        // Set all approvals up, don't if they're already set\\n        if(IERC20(STAKING_TOKEN).allowance(address(this), STAKING_ADDRESS) != MAX_INT) {\\n            IERC20(STAKING_TOKEN).approve(STAKING_ADDRESS, MAX_INT);\\n        }\\n        if(IERC20(CURVE_LP).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\\n            IERC20(CURVE_LP).approve(STAKING_TOKEN, MAX_INT);\\n        }\\n        if(IERC20(CONVEX_DEPOSIT_TOKEN).allowance(address(this), STAKING_TOKEN) != MAX_INT) {\\n            IERC20(CONVEX_DEPOSIT_TOKEN).approve(STAKING_TOKEN, MAX_INT);\\n        }\\n\\n        //deposit into wrapper\\n        IConvexWrapperV2(STAKING_TOKEN).deposit(value, address(this));\\n\\n        //stake\\n        kek_id = IFraxFarmERC20(STAKING_ADDRESS).stakeLocked(value, unlockTime - block.timestamp);\\n        _checkpointRewards(user);\\n    }\\n\\n    function increaseAmount(uint amount, bytes32 kek_id, address user) external onlyMaster {\\n        if(amount > 0){\\n            //deposit into wrapper\\n            IConvexWrapperV2(STAKING_TOKEN).deposit(amount, address(this));\\n\\n            //add stake\\n            IFraxFarmERC20(STAKING_ADDRESS).lockAdditional(kek_id, amount);\\n        }\\n        \\n        //checkpoint rewards\\n        _checkpointRewards(user);\\n        _cleanMemory();\\n    }\\n\\n    function increaseUnlockTime(uint unlockTime, bytes32 kek_id, address user) external onlyMaster {\\n        //update time\\n        IFraxFarmERC20(STAKING_ADDRESS).lockLonger(kek_id, unlockTime);\\n        //checkpoint rewards\\n        _checkpointRewards(user);\\n        _cleanMemory();\\n    }\\n\\n    function withdraw(bytes32 kek_id, address user) external onlyMaster returns (uint balance) {\\n        // Withdraw\\n        IFraxFarmERC20(STAKING_ADDRESS).withdrawLocked(kek_id, address(this));\\n\\n        // Unwrap\\n        IConvexWrapperV2(STAKING_TOKEN).withdrawAndUnwrap(IERC20(STAKING_TOKEN).balanceOf(address(this)));\\n\\n        // Handle transfer\\n        balance = IERC20(CURVE_LP).balanceOf(address(this));\\n        IERC20(CURVE_LP).safeTransfer(user, balance);\\n        _checkpointRewards(user);\\n    }\\n\\n    function claimRewards(address user) external onlyMaster {\\n        _getReward(true, user); // Since this is just a demo, falling into edge cases acceptable.\\n        // Full produce will require proper edge-case handling for _getRewards\\n        _cleanMemory();\\n    }\\n\\n    /// Credit to doublesharp for the brilliant gas-saving concept\\n    /// Self-destructing clone pattern\\n    function cleanMemory() external onlyMaster {\\n        _cleanMemory();\\n    }\\n\\n    function _cleanMemory() internal {\\n        selfdestruct(payable(MASTER));\\n    }\\n\\n    //get reward with claim option.\\n    //_claim bool is for the off chance that rewardCollectionPause is true so getReward() fails but\\n    //there are tokens on this vault for cases such as withdraw() also calling claim.\\n    //can also be used to rescue tokens on the vault\\n    function _getReward(bool _claim, address user) internal {\\n\\n        //claim\\n        if(_claim){\\n            //claim frax farm\\n            IFraxFarmERC20(STAKING_ADDRESS).getReward(address(this));\\n            //claim convex farm and forward to owner\\n            IConvexWrapperV2(STAKING_TOKEN).getReward(address(this), user);\\n\\n            //double check there have been no crv/cvx claims directly to this address\\n            uint256 b = IERC20(CRV).balanceOf(address(this));\\n            if(b > 0){\\n                IERC20(CRV).safeTransfer(user, b);\\n            }\\n            b = IERC20(CVX).balanceOf(address(this));\\n            if(b > 0){\\n                IERC20(CVX).safeTransfer(user, b);\\n            }\\n        }\\n\\n        //process fxs fees\\n        _processFxs(user);\\n\\n        //get list of reward tokens\\n        address[] memory rewardTokens = IFraxFarmERC20(STAKING_ADDRESS).getAllRewardTokens();\\n\\n        //transfer\\n        _transferTokens(rewardTokens, user);\\n\\n        //extra rewards\\n        _processExtraRewards(user);\\n    }\\n\\n    //checkpoint and add/remove weight to convex rewards contract\\n    function _checkpointRewards(address user) internal{\\n        //if rewards are active, checkpoint\\n        if(IRewards(REWARDS).active()){\\n            //using liquidity shares from staking contract will handle rebasing tokens correctly\\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\\n            //get current balance of reward contract\\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\\n            if(userLiq >= bal){\\n                //add the difference to reward contract\\n                IRewards(REWARDS).deposit(user, userLiq - bal);\\n            }else{\\n                //remove the difference from the reward contract\\n                IRewards(REWARDS).withdraw(user, bal - userLiq);\\n            }\\n        }\\n    }\\n\\n    //apply fees to FXS and send remaining to owner\\n    function _processFxs(address user) internal{\\n\\n        // Transfer any FXS present to user\\n        uint sendAmount = IERC20(FXS).balanceOf(address(this));\\n        if(sendAmount > 0){\\n            IERC20(FXS).transfer(user, sendAmount);\\n        }\\n    }\\n\\n    //get extra rewards\\n    function _processExtraRewards(address user) internal{\\n        if(IRewards(REWARDS).active()){\\n            //check if there is a balance because the reward contract could have be activated later\\n            //dont use _checkpointRewards since difference of 0 will still call deposit() and cost gas\\n            uint256 bal = IRewards(REWARDS).balanceOf(address(this));\\n            uint256 userLiq = IFraxFarmBase(STAKING_ADDRESS).lockedLiquidityOf(address(this));\\n            if(bal == 0 && userLiq > 0){\\n                //bal == 0 and liq > 0 can only happen if rewards were turned on after staking\\n                IRewards(REWARDS).deposit(user,userLiq);\\n            }\\n            IRewards(REWARDS).getReward(user);\\n        }\\n    }\\n\\n    //transfer other reward tokens besides FXS(which needs to have fees applied)\\n    function _transferTokens(address[] memory _tokens, address user) internal{\\n        //transfer all tokens\\n        for(uint256 i = 0; i < _tokens.length; i++){\\n            if(_tokens[i] != FXS){\\n                uint256 bal = IERC20(_tokens[i]).balanceOf(address(this));\\n                if(bal > 0){\\n                    IERC20(_tokens[i]).safeTransfer(user, bal);\\n                }\\n            }\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xc120b2fda12365bb110d517869e6cd51f4c8efe3080786dc6f8de7494320fa13\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IConvexWrapperV2.sol\":{\"content\":\"interface IConvexWrapperV2{\\n\\n   struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n\\n  function collateralVault() external view returns(address vault);\\n  function convexPoolId() external view returns(uint256 _poolId);\\n  function balanceOf(address _account) external view returns(uint256);\\n  function totalBalanceOf(address _account) external view returns(uint256);\\n  function deposit(uint256 _amount, address _to) external;\\n  function stake(uint256 _amount, address _to) external;\\n  function withdraw(uint256 _amount) external;\\n  function withdrawAndUnwrap(uint256 _amount) external;\\n  function getReward(address _account) external;\\n  function getReward(address _account, address _forwardTo) external;\\n  function rewardLength() external view returns(uint256);\\n  function earned(address _account) external returns(EarnedData[] memory claimable);\\n  function earnedView(address _account) external view returns(EarnedData[] memory claimable);\\n  function setVault(address _vault) external;\\n  function user_checkpoint(address[2] calldata _accounts) external returns(bool);\\n}\\n\",\"keccak256\":\"0xb8840d397b7bc4beb21b1cbc0a81f5b28ced3728cdfc216b1de960a0c0f0e449\"},\"contracts/interfaces/IDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IDistributor {\\n\\n    function claim() external returns (uint amountTransferred);\\n\\n    function N_COINS() external view returns (uint n);\\n\\n    function tokens(uint index) external view returns (address token);\\n\\n    function user_epoch_of(address _addr) external view returns (uint epoch);\\n\\n    function tokens_per_day(uint index, uint index2) external view returns (uint tokensPerDay);\\n\\n    function start_time() external view returns (uint startTime);\\n\\n    function last_token_times(uint index) external view returns (uint lastTime);//Call with index 0\\n\\n    function time_cursor() external view returns (uint timeCursor);\\n\\n    function time_cursor_of(address addr) external view returns (uint timeCursor);\\n\\n    function ve_supply(uint index) external view returns (uint supply);\\n\\n}\\n\",\"keccak256\":\"0x23be8c33a74f1edc05db02131855cef8250231bc41dc3122f9483dca6b4e11be\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IFraxFarmBase.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IFraxFarmBase{\\n\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n\\n}\",\"keccak256\":\"0x345cf192a1be9f325aa553e9baf7dfa99ee8cf940febbd38e55ff16965ddb7d1\"},\"contracts/interfaces/IFraxFarmERC20.sol\":{\"content\":\"\\ninterface IFraxFarmERC20 {\\n    \\n    struct LockedStake {\\n        bytes32 kek_id;\\n        uint256 start_timestamp;\\n        uint256 liquidity;\\n        uint256 ending_timestamp;\\n        uint256 lock_multiplier; // 6 decimals of precision. 1x = 1000000\\n    }\\n\\n    function owner() external view returns (address);\\n    function stakingToken() external view returns (address);\\n    function fraxPerLPToken() external view returns (uint256);\\n    function calcCurCombinedWeight(address account) external view\\n        returns (\\n            uint256 old_combined_weight,\\n            uint256 new_vefxs_multiplier,\\n            uint256 new_combined_weight\\n        );\\n    function lockedStakesOf(address account) external view returns (LockedStake[] memory);\\n    function lockedStakesOfLength(address account) external view returns (uint256);\\n    function lockAdditional(bytes32 kek_id, uint256 addl_liq) external;\\n    function lockLonger(bytes32 kek_id, uint256 new_ending_ts) external;\\n    function stakeLocked(uint256 liquidity, uint256 secs) external returns (bytes32);\\n    function withdrawLocked(bytes32 kek_id, address destination_address) external returns (uint256);\\n\\n\\n\\n    function periodFinish() external view returns (uint256);\\n    function getAllRewardTokens() external view returns (address[] memory);\\n    function earned(address account) external view returns (uint256[] memory new_earned);\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n    function totalCombinedWeight() external view returns (uint256);\\n    function combinedWeightOf(address account) external view returns (uint256);\\n    function lockMultiplier(uint256 secs) external view returns (uint256);\\n    function rewardRates(uint256 token_idx) external view returns (uint256 rwd_rate);\\n\\n    function userStakedFrax(address account) external view returns (uint256);\\n    function proxyStakedFrax(address proxy_address) external view returns (uint256);\\n    function maxLPForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoostProxy(address proxy_address) external view returns (uint256);\\n    function veFXSMultiplier(address account) external view returns (uint256 vefxs_multiplier);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n    function vefxs_max_multiplier() external view returns(uint256);\\n    function vefxs_boost_scale_factor() external view returns(uint256);\\n    function vefxs_per_frax_for_max_boost() external view returns(uint256);\\n    function getProxyFor(address addr) external view returns (address);\\n\\n    function sync() external;\\n}\",\"keccak256\":\"0xed963af53ab2562f97d7d9e883939ac82945d9d7b614fb26707b4d803cc0b600\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRewards.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >= 0.8.0;\\n\\ninterface IRewards{\\n    struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n    \\n    function initialize(uint256 _pid, bool _startActive) external;\\n    function addReward(address _rewardsToken, address _distributor) external;\\n    function approveRewardDistributor(\\n        address _rewardsToken,\\n        address _distributor,\\n        bool _approved\\n    ) external;\\n    function deposit(address _owner, uint256 _amount) external;\\n    function withdraw(address _owner, uint256 _amount) external;\\n    function getReward(address _forward) external;\\n    function notifyRewardAmount(address _rewardsToken, uint256 _reward) external;\\n    function balanceOf(address account) external view returns (uint256);\\n    function claimableRewards(address _account) external view returns(EarnedData[] memory userRewards);\\n    function rewardTokens(uint256 _rid) external view returns (address);\\n    function rewardTokenLength() external view returns(uint256);\\n    function active() external view returns(bool);\\n}\\n\",\"keccak256\":\"0x5c4bd045413172f1911d4756733f9914dd33044472ccfbe41a2479d3add977df\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRewardsHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRewardsHandler {\\n\\n    struct UserBalance {\\n        uint allocPoint; // Allocation points\\n        uint lastMul;\\n    }\\n\\n    function receiveFee(address token, uint amount) external;\\n\\n    function updateLPShares(uint fnftId, uint newShares) external;\\n\\n    function updateBasicShares(uint fnftId, uint newShares) external;\\n\\n    function getAllocPoint(uint fnftId, address token, bool isBasic) external view returns (uint);\\n\\n    function claimRewards(uint fnftId, address caller) external returns (uint);\\n\\n    function setStakingContract(address stake) external;\\n\\n    function getRewards(uint fnftId, address token) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x7940819dfa042009e0b10dff3dd7224f3d1ae3a4c7addab3e8f33631c1ed5db7\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"cleanMemory()":{"notice":"Credit to doublesharp for the brilliant gas-saving concept Self-destructing clone pattern"}},"version":1}}},"contracts/interfaces/IAddressRegistry.sol":{"IAddressRegistry":{"abi":[{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDEX","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLPs","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLockManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMetadataHandler","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRevest","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRevestFNFT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRevestToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRewardsHandler","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"lock_manager_","type":"address"},{"internalType":"address","name":"liquidity_","type":"address"},{"internalType":"address","name":"revest_token_","type":"address"},{"internalType":"address","name":"token_vault_","type":"address"},{"internalType":"address","name":"revest_","type":"address"},{"internalType":"address","name":"fnft_","type":"address"},{"internalType":"address","name":"metadata_","type":"address"},{"internalType":"address","name":"admin_","type":"address"},{"internalType":"address","name":"rewards_","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"setAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"dex","type":"address"}],"name":"setDex","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"liquidToken","type":"address"}],"name":"setLPs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"manager","type":"address"}],"name":"setLockManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"metadata","type":"address"}],"name":"setMetadataHandler","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"revest","type":"address"}],"name":"setRevest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fnft","type":"address"}],"name":"setRevestFNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"setRevestToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"esc","type":"address"}],"name":"setRewardsHandler","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"name":"setTokenVault","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"Provider interface for Revest FNFTs","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAddress(bytes32)":"21f8a721","getAdmin()":"6e9960c3","getDEX(uint256)":"2a7b941a","getLPs()":"b61657f7","getLockManager()":"035d0c69","getMetadataHandler()":"025e3c61","getRevest()":"f97e7d74","getRevestFNFT()":"d59e296e","getRevestToken()":"016abd2c","getRewardsHandler()":"f9f5e1dd","getTokenVault()":"54f2f7af","initialize(address,address,address,address,address,address,address,address,address)":"f5e95acb","setAdmin(address)":"704b6c02","setDex(address)":"447fa8b7","setLPs(address)":"382b5e07","setLockManager(address)":"deedfdbd","setMetadataHandler(address)":"fe762024","setRevest(address)":"9bb363a9","setRevestFNFT(address)":"f95eb482","setRevestToken(address)":"87f7f696","setRewardsHandler(address)":"b38221ff","setTokenVault(address)":"6497a8a0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDEX\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLPs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMetadataHandler\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevestFNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevestToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsHandler\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lock_manager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidity_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"revest_token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_vault_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"revest_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fnft_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"metadata_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewards_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"setDex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidToken\",\"type\":\"address\"}],\"name\":\"setLPs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLockManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metadata\",\"type\":\"address\"}],\"name\":\"setMetadataHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revest\",\"type\":\"address\"}],\"name\":\"setRevest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fnft\",\"type\":\"address\"}],\"name\":\"setRevestFNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setRevestToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"esc\",\"type\":\"address\"}],\"name\":\"setRewardsHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"setTokenVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provider interface for Revest FNFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAddressRegistry.sol\":\"IAddressRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAddressRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n * @dev\\n *\\n */\\ninterface IAddressRegistry {\\n\\n    function initialize(\\n        address lock_manager_,\\n        address liquidity_,\\n        address revest_token_,\\n        address token_vault_,\\n        address revest_,\\n        address fnft_,\\n        address metadata_,\\n        address admin_,\\n        address rewards_\\n    ) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function setAdmin(address admin) external;\\n\\n    function getLockManager() external view returns (address);\\n\\n    function setLockManager(address manager) external;\\n\\n    function getTokenVault() external view returns (address);\\n\\n    function setTokenVault(address vault) external;\\n\\n    function getRevestFNFT() external view returns (address);\\n\\n    function setRevestFNFT(address fnft) external;\\n\\n    function getMetadataHandler() external view returns (address);\\n\\n    function setMetadataHandler(address metadata) external;\\n\\n    function getRevest() external view returns (address);\\n\\n    function setRevest(address revest) external;\\n\\n    function getDEX(uint index) external view returns (address);\\n\\n    function setDex(address dex) external;\\n\\n    function getRevestToken() external view returns (address);\\n\\n    function setRevestToken(address token) external;\\n\\n    function getRewardsHandler() external view returns(address);\\n\\n    function setRewardsHandler(address esc) external;\\n\\n    function getAddress(bytes32 id) external view returns (address);\\n\\n    function getLPs() external view returns (address);\\n\\n    function setLPs(address liquidToken) external;\\n\\n}\\n\",\"keccak256\":\"0x129fecf36c5c18bcf17fcbb1b09267d52ca7a6e136ab9eaa037fd123d4822685\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IConvexWrapperV2.sol":{"IConvexWrapperV2":{"abi":[{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateralVault","outputs":[{"internalType":"address","name":"vault","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"convexPoolId","outputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"earned","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IConvexWrapperV2.EarnedData[]","name":"claimable","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"earnedView","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IConvexWrapperV2.EarnedData[]","name":"claimable","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"address","name":"_forwardTo","type":"address"}],"name":"getReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"getReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vault","type":"address"}],"name":"setVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"totalBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[2]","name":"_accounts","type":"address[2]"}],"name":"user_checkpoint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawAndUnwrap","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address)":"70a08231","collateralVault()":"0bece79c","convexPoolId()":"e529ee95","deposit(uint256,address)":"6e553f65","earned(address)":"008cc262","earnedView(address)":"b277e8f0","getReward(address)":"c00007b0","getReward(address,address)":"6b091695","rewardLength()":"b95c5746","setVault(address)":"6817031b","stake(uint256,address)":"7acb7757","totalBalanceOf(address)":"4b0ee02a","user_checkpoint(address[2])":"e2aecded","withdraw(uint256)":"2e1a7d4d","withdrawAndUnwrap(uint256)":"3969dfb4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IConvexWrapperV2.EarnedData[]\",\"name\":\"claimable\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"earnedView\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IConvexWrapperV2.EarnedData[]\",\"name\":\"claimable\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_forwardTo\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"totalBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"_accounts\",\"type\":\"address[2]\"}],\"name\":\"user_checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAndUnwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IConvexWrapperV2.sol\":\"IConvexWrapperV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IConvexWrapperV2.sol\":{\"content\":\"interface IConvexWrapperV2{\\n\\n   struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n\\n  function collateralVault() external view returns(address vault);\\n  function convexPoolId() external view returns(uint256 _poolId);\\n  function balanceOf(address _account) external view returns(uint256);\\n  function totalBalanceOf(address _account) external view returns(uint256);\\n  function deposit(uint256 _amount, address _to) external;\\n  function stake(uint256 _amount, address _to) external;\\n  function withdraw(uint256 _amount) external;\\n  function withdrawAndUnwrap(uint256 _amount) external;\\n  function getReward(address _account) external;\\n  function getReward(address _account, address _forwardTo) external;\\n  function rewardLength() external view returns(uint256);\\n  function earned(address _account) external returns(EarnedData[] memory claimable);\\n  function earnedView(address _account) external view returns(EarnedData[] memory claimable);\\n  function setVault(address _vault) external;\\n  function user_checkpoint(address[2] calldata _accounts) external returns(bool);\\n}\\n\",\"keccak256\":\"0xb8840d397b7bc4beb21b1cbc0a81f5b28ced3728cdfc216b1de960a0c0f0e449\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDistributor.sol":{"IDistributor":{"abi":[{"inputs":[],"name":"N_COINS","outputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claim","outputs":[{"internalType":"uint256","name":"amountTransferred","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"last_token_times","outputs":[{"internalType":"uint256","name":"lastTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"start_time","outputs":[{"internalType":"uint256","name":"startTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"time_cursor","outputs":[{"internalType":"uint256","name":"timeCursor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"time_cursor_of","outputs":[{"internalType":"uint256","name":"timeCursor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"index2","type":"uint256"}],"name":"tokens_per_day","outputs":[{"internalType":"uint256","name":"tokensPerDay","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"user_epoch_of","outputs":[{"internalType":"uint256","name":"epoch","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ve_supply","outputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"Provider interface for Revest FNFTs","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"N_COINS()":"29357750","claim()":"4e71d92d","last_token_times(uint256)":"c6288443","start_time()":"834ee417","time_cursor()":"127dcbd3","time_cursor_of(address)":"2a2a314b","tokens(uint256)":"4f64b2be","tokens_per_day(uint256,uint256)":"3fd83e9e","user_epoch_of(address)":"d5d46e88","ve_supply(uint256)":"d4dafba8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"N_COINS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTransferred\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"last_token_times\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time_cursor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeCursor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"time_cursor_of\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeCursor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index2\",\"type\":\"uint256\"}],\"name\":\"tokens_per_day\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensPerDay\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"user_epoch_of\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ve_supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provider interface for Revest FNFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDistributor.sol\":\"IDistributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/interfaces/IDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IDistributor {\\n\\n    function claim() external returns (uint amountTransferred);\\n\\n    function N_COINS() external view returns (uint n);\\n\\n    function tokens(uint index) external view returns (address token);\\n\\n    function user_epoch_of(address _addr) external view returns (uint epoch);\\n\\n    function tokens_per_day(uint index, uint index2) external view returns (uint tokensPerDay);\\n\\n    function start_time() external view returns (uint startTime);\\n\\n    function last_token_times(uint index) external view returns (uint lastTime);//Call with index 0\\n\\n    function time_cursor() external view returns (uint timeCursor);\\n\\n    function time_cursor_of(address addr) external view returns (uint timeCursor);\\n\\n    function ve_supply(uint index) external view returns (uint supply);\\n\\n}\\n\",\"keccak256\":\"0x23be8c33a74f1edc05db02131855cef8250231bc41dc3122f9483dca6b4e11be\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IFNFTHandler.sol":{"IFNFTHandler":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenHolder","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNextId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"quantities","type":"uint256[]"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"newSupply","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatchRec","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","getBalance(address,uint256)":"2b04e840","getNextId()":"bc968326","getSupply(uint256)":"f77ee79d","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","mintBatchRec(address[],uint256[],uint256,uint256,bytes)":"9a46cd5d","setURI(string)":"02fe5305"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSupply\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatchRec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFNFTHandler.sol\":\"IFNFTHandler\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFNFTHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n\\ninterface IFNFTHandler  {\\n    function mint(address account, uint id, uint amount, bytes memory data) external;\\n\\n    function mintBatchRec(address[] memory recipients, uint[] memory quantities, uint id, uint newSupply, bytes memory data) external;\\n\\n    function mintBatch(address to, uint[] memory ids, uint[] memory amounts, bytes memory data) external;\\n\\n    function setURI(string memory newuri) external;\\n\\n    function burn(address account, uint id, uint amount) external;\\n\\n    function burnBatch(address account, uint[] memory ids, uint[] memory amounts) external;\\n\\n    function getBalance(address tokenHolder, uint id) external view returns (uint);\\n\\n    function getSupply(uint fnftId) external view returns (uint);\\n\\n    function getNextId() external view returns (uint);\\n}\\n\",\"keccak256\":\"0x9824a781b38146e5d6cd04f7a7a126ad3047188f39b8ac63189124219b524df6\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IFeeReporter.sol":{"IFeeReporter":{"abi":[{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getERC20Fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getFlatWeiFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getERC20Fee(address)":"2036e7ce","getFlatWeiFee(address)":"3ea5665f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getERC20Fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getFlatWeiFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFeeReporter.sol\":\"IFeeReporter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFeeReporter.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\n\\ninterface IFeeReporter {\\n\\n    function getFlatWeiFee(address asset) external view returns (uint);\\n\\n    function getERC20Fee(address asset) external view returns (uint);\\n\\n}\\n\",\"keccak256\":\"0x512813aba75e60b04349601f23c954c12c30c9de0f0d5eeef1135eb753afddb9\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IFraxFarmBase.sol":{"IFraxFarmBase":{"abi":[{"inputs":[{"internalType":"address","name":"destination_address","type":"address"}],"name":"getReward","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"lockedLiquidityOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker_address","type":"address"}],"name":"proxyToggleStaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proxy_address","type":"address"}],"name":"stakerSetVeFXSProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proxy_address","type":"address"}],"name":"toggleValidVeFXSProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalLiquidityLocked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getReward(address)":"c00007b0","lockedLiquidityOf(address)":"d9f96e8d","proxyToggleStaker(address)":"e7f30582","stakerSetVeFXSProxy(address)":"d7400d56","toggleValidVeFXSProxy(address)":"91cf600a","totalLiquidityLocked()":"e01f62bf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination_address\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedLiquidityOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker_address\",\"type\":\"address\"}],\"name\":\"proxyToggleStaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy_address\",\"type\":\"address\"}],\"name\":\"stakerSetVeFXSProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy_address\",\"type\":\"address\"}],\"name\":\"toggleValidVeFXSProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidityLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFraxFarmBase.sol\":\"IFraxFarmBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFraxFarmBase.sol\":{\"content\":\"pragma solidity >=0.8.0;\\n\\ninterface IFraxFarmBase{\\n\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n\\n}\",\"keccak256\":\"0x345cf192a1be9f325aa553e9baf7dfa99ee8cf940febbd38e55ff16965ddb7d1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IFraxFarmERC20.sol":{"IFraxFarmERC20":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"calcCurCombinedWeight","outputs":[{"internalType":"uint256","name":"old_combined_weight","type":"uint256"},{"internalType":"uint256","name":"new_vefxs_multiplier","type":"uint256"},{"internalType":"uint256","name":"new_combined_weight","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"combinedWeightOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256[]","name":"new_earned","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fraxPerLPToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllRewardTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getProxyFor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"destination_address","type":"address"}],"name":"getReward","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"kek_id","type":"bytes32"},{"internalType":"uint256","name":"addl_liq","type":"uint256"}],"name":"lockAdditional","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"kek_id","type":"bytes32"},{"internalType":"uint256","name":"new_ending_ts","type":"uint256"}],"name":"lockLonger","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"secs","type":"uint256"}],"name":"lockMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"lockedLiquidityOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"lockedStakesOf","outputs":[{"components":[{"internalType":"bytes32","name":"kek_id","type":"bytes32"},{"internalType":"uint256","name":"start_timestamp","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"ending_timestamp","type":"uint256"},{"internalType":"uint256","name":"lock_multiplier","type":"uint256"}],"internalType":"struct IFraxFarmERC20.LockedStake[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"lockedStakesOfLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"maxLPForMaxBoost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"minVeFXSForMaxBoost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proxy_address","type":"address"}],"name":"minVeFXSForMaxBoostProxy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proxy_address","type":"address"}],"name":"proxyStakedFrax","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker_address","type":"address"}],"name":"proxyToggleStaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"token_idx","type":"uint256"}],"name":"rewardRates","outputs":[{"internalType":"uint256","name":"rwd_rate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"secs","type":"uint256"}],"name":"stakeLocked","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proxy_address","type":"address"}],"name":"stakerSetVeFXSProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proxy_address","type":"address"}],"name":"toggleValidVeFXSProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalCombinedWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLiquidityLocked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"userStakedFrax","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"veFXSMultiplier","outputs":[{"internalType":"uint256","name":"vefxs_multiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vefxs_boost_scale_factor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vefxs_max_multiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vefxs_per_frax_for_max_boost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"kek_id","type":"bytes32"},{"internalType":"address","name":"destination_address","type":"address"}],"name":"withdrawLocked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"calcCurCombinedWeight(address)":"8bad86a7","combinedWeightOf(address)":"36f89af2","earned(address)":"008cc262","fraxPerLPToken()":"5bfd9258","getAllRewardTokens()":"12edb24c","getProxyFor(address)":"c3543826","getReward(address)":"c00007b0","lockAdditional(bytes32,uint256)":"b85efd06","lockLonger(bytes32,uint256)":"d2fbdc0d","lockMultiplier(uint256)":"0d7bac4f","lockedLiquidityOf(address)":"d9f96e8d","lockedStakesOf(address)":"1e090f01","lockedStakesOfLength(address)":"ca6df29d","maxLPForMaxBoost(address)":"a0f23476","minVeFXSForMaxBoost(address)":"4fd2b536","minVeFXSForMaxBoostProxy(address)":"7f472e54","owner()":"8da5cb5b","periodFinish()":"ebe2b12b","proxyStakedFrax(address)":"1face856","proxyToggleStaker(address)":"e7f30582","rewardRates(uint256)":"f2caeb1e","stakeLocked(uint256,uint256)":"17b18c89","stakerSetVeFXSProxy(address)":"d7400d56","stakingToken()":"72f702f3","sync()":"fff6cae9","toggleValidVeFXSProxy(address)":"91cf600a","totalCombinedWeight()":"64f2c060","totalLiquidityLocked()":"e01f62bf","userStakedFrax(address)":"d42fc9b4","veFXSMultiplier(address)":"2c0c2a0a","vefxs_boost_scale_factor()":"aa1d4fce","vefxs_max_multiplier()":"f288baf6","vefxs_per_frax_for_max_boost()":"f2a8d349","withdrawLocked(bytes32,address)":"e44b9fa5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"calcCurCombinedWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"old_combined_weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"new_vefxs_multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"new_combined_weight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"combinedWeightOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"new_earned\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxPerLPToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getProxyFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination_address\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"kek_id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"addl_liq\",\"type\":\"uint256\"}],\"name\":\"lockAdditional\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"kek_id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"new_ending_ts\",\"type\":\"uint256\"}],\"name\":\"lockLonger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secs\",\"type\":\"uint256\"}],\"name\":\"lockMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedLiquidityOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedStakesOf\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"kek_id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"start_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ending_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lock_multiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct IFraxFarmERC20.LockedStake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedStakesOfLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"maxLPForMaxBoost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"minVeFXSForMaxBoost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy_address\",\"type\":\"address\"}],\"name\":\"minVeFXSForMaxBoostProxy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy_address\",\"type\":\"address\"}],\"name\":\"proxyStakedFrax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker_address\",\"type\":\"address\"}],\"name\":\"proxyToggleStaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token_idx\",\"type\":\"uint256\"}],\"name\":\"rewardRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rwd_rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secs\",\"type\":\"uint256\"}],\"name\":\"stakeLocked\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy_address\",\"type\":\"address\"}],\"name\":\"stakerSetVeFXSProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy_address\",\"type\":\"address\"}],\"name\":\"toggleValidVeFXSProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCombinedWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidityLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"userStakedFrax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"veFXSMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vefxs_multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vefxs_boost_scale_factor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vefxs_max_multiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vefxs_per_frax_for_max_boost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"kek_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destination_address\",\"type\":\"address\"}],\"name\":\"withdrawLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFraxFarmERC20.sol\":\"IFraxFarmERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFraxFarmERC20.sol\":{\"content\":\"\\ninterface IFraxFarmERC20 {\\n    \\n    struct LockedStake {\\n        bytes32 kek_id;\\n        uint256 start_timestamp;\\n        uint256 liquidity;\\n        uint256 ending_timestamp;\\n        uint256 lock_multiplier; // 6 decimals of precision. 1x = 1000000\\n    }\\n\\n    function owner() external view returns (address);\\n    function stakingToken() external view returns (address);\\n    function fraxPerLPToken() external view returns (uint256);\\n    function calcCurCombinedWeight(address account) external view\\n        returns (\\n            uint256 old_combined_weight,\\n            uint256 new_vefxs_multiplier,\\n            uint256 new_combined_weight\\n        );\\n    function lockedStakesOf(address account) external view returns (LockedStake[] memory);\\n    function lockedStakesOfLength(address account) external view returns (uint256);\\n    function lockAdditional(bytes32 kek_id, uint256 addl_liq) external;\\n    function lockLonger(bytes32 kek_id, uint256 new_ending_ts) external;\\n    function stakeLocked(uint256 liquidity, uint256 secs) external returns (bytes32);\\n    function withdrawLocked(bytes32 kek_id, address destination_address) external returns (uint256);\\n\\n\\n\\n    function periodFinish() external view returns (uint256);\\n    function getAllRewardTokens() external view returns (address[] memory);\\n    function earned(address account) external view returns (uint256[] memory new_earned);\\n    function totalLiquidityLocked() external view returns (uint256);\\n    function lockedLiquidityOf(address account) external view returns (uint256);\\n    function totalCombinedWeight() external view returns (uint256);\\n    function combinedWeightOf(address account) external view returns (uint256);\\n    function lockMultiplier(uint256 secs) external view returns (uint256);\\n    function rewardRates(uint256 token_idx) external view returns (uint256 rwd_rate);\\n\\n    function userStakedFrax(address account) external view returns (uint256);\\n    function proxyStakedFrax(address proxy_address) external view returns (uint256);\\n    function maxLPForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoost(address account) external view returns (uint256);\\n    function minVeFXSForMaxBoostProxy(address proxy_address) external view returns (uint256);\\n    function veFXSMultiplier(address account) external view returns (uint256 vefxs_multiplier);\\n\\n    function toggleValidVeFXSProxy(address proxy_address) external;\\n    function proxyToggleStaker(address staker_address) external;\\n    function stakerSetVeFXSProxy(address proxy_address) external;\\n    function getReward(address destination_address) external returns (uint256[] memory);\\n    function vefxs_max_multiplier() external view returns(uint256);\\n    function vefxs_boost_scale_factor() external view returns(uint256);\\n    function vefxs_per_frax_for_max_boost() external view returns(uint256);\\n    function getProxyFor(address addr) external view returns (address);\\n\\n    function sync() external;\\n}\",\"keccak256\":\"0xed963af53ab2562f97d7d9e883939ac82945d9d7b614fb26707b4d803cc0b600\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ILockManager.sol":{"ILockManager":{"abi":[{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"components":[{"internalType":"address","name":"addressLock","type":"address"},{"internalType":"uint256","name":"timeLockExpiry","type":"uint256"},{"internalType":"enum IRevest.LockType","name":"lockType","type":"uint8"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"compareTo","type":"address"},{"internalType":"address","name":"oracle","type":"address"},{"internalType":"uint256","name":"unlockValue","type":"uint256"},{"internalType":"bool","name":"unlockRisingEdge","type":"bool"}],"internalType":"struct IRevest.ValueLock","name":"valueLock","type":"tuple"}],"internalType":"struct IRevest.LockParam","name":"lock","type":"tuple"}],"name":"createLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"fnftIdToLock","outputs":[{"components":[{"internalType":"address","name":"addressLock","type":"address"},{"internalType":"enum IRevest.LockType","name":"lockType","type":"uint8"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"compareTo","type":"address"},{"internalType":"address","name":"oracle","type":"address"},{"internalType":"uint256","name":"unlockValue","type":"uint256"},{"internalType":"bool","name":"unlockRisingEdge","type":"bool"}],"internalType":"struct IRevest.ValueLock","name":"valueLock","type":"tuple"},{"internalType":"uint256","name":"timeLockExpiry","type":"uint256"},{"internalType":"uint256","name":"creationTime","type":"uint256"},{"internalType":"bool","name":"unlocked","type":"bool"}],"internalType":"struct IRevest.Lock","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"fnftIdToLockId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"lockId","type":"uint256"}],"name":"getLock","outputs":[{"components":[{"internalType":"address","name":"addressLock","type":"address"},{"internalType":"enum IRevest.LockType","name":"lockType","type":"uint8"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"compareTo","type":"address"},{"internalType":"address","name":"oracle","type":"address"},{"internalType":"uint256","name":"unlockValue","type":"uint256"},{"internalType":"bool","name":"unlockRisingEdge","type":"bool"}],"internalType":"struct IRevest.ValueLock","name":"valueLock","type":"tuple"},{"internalType":"uint256","name":"timeLockExpiry","type":"uint256"},{"internalType":"uint256","name":"creationTime","type":"uint256"},{"internalType":"bool","name":"unlocked","type":"bool"}],"internalType":"struct IRevest.Lock","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getLockMaturity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"lockTypes","outputs":[{"internalType":"enum IRevest.LockType","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"lockId","type":"uint256"}],"name":"pointFNFTToLock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address","name":"sender","type":"address"}],"name":"unlockFNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createLock(uint256,(address,uint256,uint8,(address,address,address,uint256,bool)))":"dd6aa4cf","fnftIdToLock(uint256)":"3fe8ca06","fnftIdToLockId(uint256)":"29029c16","getLock(uint256)":"d68f4dd1","getLockMaturity(uint256)":"cab4fb9c","lockTypes(uint256)":"fc9ec25d","pointFNFTToLock(uint256,uint256)":"d7f92205","unlockFNFT(uint256,address)":"fb684805"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addressLock\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeLockExpiry\",\"type\":\"uint256\"},{\"internalType\":\"enum IRevest.LockType\",\"name\":\"lockType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"compareTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unlockRisingEdge\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.ValueLock\",\"name\":\"valueLock\",\"type\":\"tuple\"}],\"internalType\":\"struct IRevest.LockParam\",\"name\":\"lock\",\"type\":\"tuple\"}],\"name\":\"createLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"fnftIdToLock\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addressLock\",\"type\":\"address\"},{\"internalType\":\"enum IRevest.LockType\",\"name\":\"lockType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"compareTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unlockRisingEdge\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.ValueLock\",\"name\":\"valueLock\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"timeLockExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.Lock\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"fnftIdToLockId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockId\",\"type\":\"uint256\"}],\"name\":\"getLock\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addressLock\",\"type\":\"address\"},{\"internalType\":\"enum IRevest.LockType\",\"name\":\"lockType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"compareTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unlockRisingEdge\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.ValueLock\",\"name\":\"valueLock\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"timeLockExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.Lock\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getLockMaturity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"lockTypes\",\"outputs\":[{\"internalType\":\"enum IRevest.LockType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockId\",\"type\":\"uint256\"}],\"name\":\"pointFNFTToLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"unlockFNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILockManager.sol\":\"ILockManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILockManager.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ILockManager {\\n\\n    function createLock(uint fnftId, IRevest.LockParam memory lock) external returns (uint);\\n\\n    function getLock(uint lockId) external view returns (IRevest.Lock memory);\\n\\n    function fnftIdToLockId(uint fnftId) external view returns (uint);\\n\\n    function fnftIdToLock(uint fnftId) external view returns (IRevest.Lock memory);\\n\\n    function pointFNFTToLock(uint fnftId, uint lockId) external;\\n\\n    function lockTypes(uint tokenId) external view returns (IRevest.LockType);\\n\\n    function unlockFNFT(uint fnftId, address sender) external returns (bool);\\n\\n    function getLockMaturity(uint fnftId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7b3170ed345d9750b315197f48f8076c8731e21640f7a063563bc93a6c2d1c00\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IOutputReceiver.sol":{"IOutputReceiver":{"abi":[{"inputs":[],"name":"getAddressRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getCustomMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getOutputDisplayValues","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"receiveRevestOutput","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"revest","type":"address"}],"name":"setAddressRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"title":"Provider interface for Revest FNFTs","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAddressRegistry()":"8d9d6705","getAsset(uint256)":"eac8f5b8","getCustomMetadata(uint256)":"16f49e8a","getOutputDisplayValues(uint256)":"8ecacb1b","getValue(uint256)":"0ff4c916","receiveRevestOutput(uint256,address,address,uint256)":"aca1c665","setAddressRegistry(address)":"27c7812c","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAddressRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getCustomMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getOutputDisplayValues\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"receiveRevestOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revest\",\"type\":\"address\"}],\"name\":\"setAddressRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"Provider interface for Revest FNFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOutputReceiver.sol\":\"IOutputReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/interfaces/IOutputReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiver is IRegistryProvider, IERC165 {\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address asset,\\n        address payable owner,\\n        uint quantity\\n    ) external;\\n\\n    function getCustomMetadata(uint fnftId) external view returns (string memory);\\n\\n    function getValue(uint fnftId) external view returns (uint);\\n\\n    function getAsset(uint fnftId) external view returns (address);\\n\\n    function getOutputDisplayValues(uint fnftId) external view returns (bytes memory);\\n\\n}\\n\",\"keccak256\":\"0xdb291a6d6ff61ba3992f23044751c20736dbde86d879d3a466c854382abd9550\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IOutputReceiverV2.sol":{"IOutputReceiverV2":{"abi":[{"inputs":[],"name":"getAddressRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getCustomMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getOutputDisplayValues","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256[]","name":"newFNFTIds","type":"uint256[]"},{"internalType":"address","name":"caller","type":"address"},{"internalType":"bool","name":"cleanup","type":"bool"}],"name":"handleFNFTRemaps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"receiveRevestOutput","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"config","type":"tuple"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"receiveSecondaryCallback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"revest","type":"address"}],"name":"setAddressRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"triggerOutputReceiverUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"title":"Provider interface for Revest FNFTs","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAddressRegistry()":"8d9d6705","getAsset(uint256)":"eac8f5b8","getCustomMetadata(uint256)":"16f49e8a","getOutputDisplayValues(uint256)":"8ecacb1b","getValue(uint256)":"0ff4c916","handleFNFTRemaps(uint256,uint256[],address,bool)":"644bf7d8","receiveRevestOutput(uint256,address,address,uint256)":"aca1c665","receiveSecondaryCallback(uint256,address,uint256,(address,address,uint256,uint256,uint256,uint256,bool,bool,bool),bytes)":"f48fe050","setAddressRegistry(address)":"27c7812c","supportsInterface(bytes4)":"01ffc9a7","triggerOutputReceiverUpdate(uint256,bytes)":"d2551412"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAddressRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getCustomMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getOutputDisplayValues\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"newFNFTIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cleanup\",\"type\":\"bool\"}],\"name\":\"handleFNFTRemaps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"receiveRevestOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"receiveSecondaryCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revest\",\"type\":\"address\"}],\"name\":\"setAddressRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"triggerOutputReceiverUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"Provider interface for Revest FNFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOutputReceiverV2.sol\":\"IOutputReceiverV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/interfaces/IOutputReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiver is IRegistryProvider, IERC165 {\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address asset,\\n        address payable owner,\\n        uint quantity\\n    ) external;\\n\\n    function getCustomMetadata(uint fnftId) external view returns (string memory);\\n\\n    function getValue(uint fnftId) external view returns (uint);\\n\\n    function getAsset(uint fnftId) external view returns (address);\\n\\n    function getOutputDisplayValues(uint fnftId) external view returns (bytes memory);\\n\\n}\\n\",\"keccak256\":\"0xdb291a6d6ff61ba3992f23044751c20736dbde86d879d3a466c854382abd9550\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV2.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiver.sol\\\";\\nimport \\\"./IRevest.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV2 is IOutputReceiver {\\n\\n    // Future proofing for secondary callbacks during withdrawal\\n    // Could just use triggerOutputReceiverUpdate and call withdrawal function\\n    // But deliberately using reentry is poor form and reminds me too much of OAuth 2.0 \\n    function receiveSecondaryCallback(\\n        uint fnftId,\\n        address payable owner,\\n        uint quantity,\\n        IRevest.FNFTConfig memory config,\\n        bytes memory args\\n    ) external payable;\\n\\n    // Allows for similar function to address lock, updating state while still locked\\n    // Called by the user directly\\n    function triggerOutputReceiverUpdate(\\n        uint fnftId,\\n        bytes memory args\\n    ) external;\\n\\n    // This function should only ever be called when a split or additional deposit has occurred \\n    function handleFNFTRemaps(uint fnftId, uint[] memory newFNFTIds, address caller, bool cleanup) external;\\n\\n}\\n\",\"keccak256\":\"0x3f54001da218efb1d47b5b5419f1796995a483fffc368d51929ab5fb61de0d62\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IOutputReceiverV3.sol":{"IOutputReceiverV3":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"mintTo","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountTokens","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"DepositERC1155OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"mintTo","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountTokens","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"DepositERC20OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"mintTo","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"DepositERC721OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountTokens","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"WithdrawERC1155OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountTokens","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"WithdrawERC20OutputReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"WithdrawERC721OutputReceiver","type":"event"},{"inputs":[],"name":"getAddressRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getCustomMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getOutputDisplayValues","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"amountToDeposit","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"handleAdditionalDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256[]","name":"newFNFTIds","type":"uint256[]"},{"internalType":"address","name":"caller","type":"address"},{"internalType":"bool","name":"cleanup","type":"bool"}],"name":"handleFNFTRemaps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256[]","name":"proportions","type":"uint256[]"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"handleSplitOperation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"handleTimelockExtensions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"receiveRevestOutput","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"config","type":"tuple"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"receiveSecondaryCallback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"revest","type":"address"}],"name":"setAddressRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"triggerOutputReceiverUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"title":"Provider interface for Revest FNFTs","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAddressRegistry()":"8d9d6705","getAsset(uint256)":"eac8f5b8","getCustomMetadata(uint256)":"16f49e8a","getOutputDisplayValues(uint256)":"8ecacb1b","getValue(uint256)":"0ff4c916","handleAdditionalDeposit(uint256,uint256,uint256,address)":"1d145721","handleFNFTRemaps(uint256,uint256[],address,bool)":"644bf7d8","handleSplitOperation(uint256,uint256[],uint256,address)":"76da63f3","handleTimelockExtensions(uint256,uint256,address)":"1355f7ab","receiveRevestOutput(uint256,address,address,uint256)":"aca1c665","receiveSecondaryCallback(uint256,address,uint256,(address,address,uint256,uint256,uint256,uint256,bool,bool,bool),bytes)":"f48fe050","setAddressRegistry(address)":"27c7812c","supportsInterface(bytes4)":"01ffc9a7","triggerOutputReceiverUpdate(uint256,bytes)":"d2551412"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"DepositERC1155OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"DepositERC20OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"DepositERC721OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"WithdrawERC1155OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"WithdrawERC20OutputReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"WithdrawERC721OutputReceiver\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAddressRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getCustomMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getOutputDisplayValues\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"handleAdditionalDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"newFNFTIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cleanup\",\"type\":\"bool\"}],\"name\":\"handleFNFTRemaps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"proportions\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"handleSplitOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"handleTimelockExtensions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"receiveRevestOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"receiveSecondaryCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revest\",\"type\":\"address\"}],\"name\":\"setAddressRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"triggerOutputReceiverUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"Provider interface for Revest FNFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOutputReceiverV3.sol\":\"IOutputReceiverV3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/interfaces/IOutputReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiver is IRegistryProvider, IERC165 {\\n\\n    function receiveRevestOutput(\\n        uint fnftId,\\n        address asset,\\n        address payable owner,\\n        uint quantity\\n    ) external;\\n\\n    function getCustomMetadata(uint fnftId) external view returns (string memory);\\n\\n    function getValue(uint fnftId) external view returns (uint);\\n\\n    function getAsset(uint fnftId) external view returns (address);\\n\\n    function getOutputDisplayValues(uint fnftId) external view returns (bytes memory);\\n\\n}\\n\",\"keccak256\":\"0xdb291a6d6ff61ba3992f23044751c20736dbde86d879d3a466c854382abd9550\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV2.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiver.sol\\\";\\nimport \\\"./IRevest.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV2 is IOutputReceiver {\\n\\n    // Future proofing for secondary callbacks during withdrawal\\n    // Could just use triggerOutputReceiverUpdate and call withdrawal function\\n    // But deliberately using reentry is poor form and reminds me too much of OAuth 2.0 \\n    function receiveSecondaryCallback(\\n        uint fnftId,\\n        address payable owner,\\n        uint quantity,\\n        IRevest.FNFTConfig memory config,\\n        bytes memory args\\n    ) external payable;\\n\\n    // Allows for similar function to address lock, updating state while still locked\\n    // Called by the user directly\\n    function triggerOutputReceiverUpdate(\\n        uint fnftId,\\n        bytes memory args\\n    ) external;\\n\\n    // This function should only ever be called when a split or additional deposit has occurred \\n    function handleFNFTRemaps(uint fnftId, uint[] memory newFNFTIds, address caller, bool cleanup) external;\\n\\n}\\n\",\"keccak256\":\"0x3f54001da218efb1d47b5b5419f1796995a483fffc368d51929ab5fb61de0d62\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IOutputReceiverV3.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IOutputReceiverV2.sol\\\";\\n\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IOutputReceiverV3 is IOutputReceiverV2 {\\n\\n    event DepositERC20OutputReceiver(address indexed mintTo, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event DepositERC721OutputReceiver(address indexed mintTo, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\\n\\n    event DepositERC1155OutputReceiver(address indexed mintTo, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC20OutputReceiver(address indexed caller, address indexed token, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC721OutputReceiver(address indexed caller, address indexed token, uint[] tokenIds, uint indexed fnftId, bytes extraData);\\n\\n    event WithdrawERC1155OutputReceiver(address indexed caller, address indexed token, uint tokenId, uint amountTokens, uint indexed fnftId, bytes extraData);\\n\\n    function handleTimelockExtensions(uint fnftId, uint expiration, address caller) external;\\n\\n    function handleAdditionalDeposit(uint fnftId, uint amountToDeposit, uint quantity, address caller) external;\\n\\n    function handleSplitOperation(uint fnftId, uint[] memory proportions, uint quantity, address caller) external;\\n\\n}\\n\",\"keccak256\":\"0xb6b7ca189b8c8238df161cf2425aaf5fddc772947d654341ea9b4eb9f1e3c616\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IRegistryProvider.sol":{"IRegistryProvider":{"abi":[{"inputs":[],"name":"getAddressRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"revest","type":"address"}],"name":"setAddressRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAddressRegistry()":"8d9d6705","setAddressRegistry(address)":"27c7812c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAddressRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revest\",\"type\":\"address\"}],\"name\":\"setAddressRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRegistryProvider.sol\":\"IRegistryProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IRevest.sol":{"IRevest":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"newFNFTId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"quantity","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FNFTAddionalDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"address","name":"trigger","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"quantities","type":"uint256[]"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"indexed":false,"internalType":"struct IRevest.FNFTConfig","name":"fnftConfig","type":"tuple"}],"name":"FNFTAddressLockMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newExtendedTime","type":"uint256"}],"name":"FNFTMaturityExtended","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256[]","name":"newFNFTId","type":"uint256[]"},{"indexed":true,"internalType":"uint256[]","name":"proportions","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"FNFTSplit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"quantities","type":"uint256[]"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"indexed":false,"internalType":"struct IRevest.FNFTConfig","name":"fnftConfig","type":"tuple"}],"name":"FNFTTimeLockMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"FNFTUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":false,"internalType":"address","name":"compareTo","type":"address"},{"indexed":false,"internalType":"address","name":"oracleDispatch","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"quantities","type":"uint256[]"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"indexed":false,"internalType":"struct IRevest.FNFTConfig","name":"fnftConfig","type":"tuple"}],"name":"FNFTValueLockMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"fnftId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"FNFTWithdrawn","type":"event"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"depositAdditionalToFNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"extendFNFTMaturity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getERC20Fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFlatWeiFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"trigger","type":"address"},{"internalType":"bytes","name":"arguments","type":"bytes"},{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"quantities","type":"uint256[]"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"fnftConfig","type":"tuple"}],"name":"mintAddressLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"quantities","type":"uint256[]"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"fnftConfig","type":"tuple"}],"name":"mintTimeLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"primaryAsset","type":"address"},{"internalType":"address","name":"compareTo","type":"address"},{"internalType":"uint256","name":"unlockValue","type":"uint256"},{"internalType":"bool","name":"unlockRisingEdge","type":"bool"},{"internalType":"address","name":"oracleDispatch","type":"address"},{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"quantities","type":"uint256[]"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"fnftConfig","type":"tuple"}],"name":"mintValueLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"erc20","type":"uint256"}],"name":"setERC20Fee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wethFee","type":"uint256"}],"name":"setFlatWeiFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256[]","name":"proportions","type":"uint256[]"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"splitFNFT","outputs":[{"internalType":"uint256[]","name":"newFNFTIds","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenUID","type":"uint256"}],"name":"unlockFNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenUID","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"withdrawFNFT","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"depositAdditionalToFNFT(uint256,uint256,uint256)":"5dcb7ab2","extendFNFTMaturity(uint256,uint256)":"93a9003c","getERC20Fee()":"ecea07d8","getFlatWeiFee()":"42de99fe","mintAddressLock(address,bytes,address[],uint256[],(address,address,uint256,uint256,uint256,uint256,bool,bool,bool))":"02e236bc","mintTimeLock(uint256,address[],uint256[],(address,address,uint256,uint256,uint256,uint256,bool,bool,bool))":"5a7c08f0","mintValueLock(address,address,uint256,bool,address,address[],uint256[],(address,address,uint256,uint256,uint256,uint256,bool,bool,bool))":"bdb132d5","setERC20Fee(uint256)":"bc2ab8ce","setFlatWeiFee(uint256)":"58efe201","splitFNFT(uint256,uint256[],uint256)":"fccc19d0","unlockFNFT(uint256)":"22caa234","withdrawFNFT(uint256,uint256)":"f2465f09"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFNFTId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FNFTAddionalDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trigger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"fnftConfig\",\"type\":\"tuple\"}],\"name\":\"FNFTAddressLockMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newExtendedTime\",\"type\":\"uint256\"}],\"name\":\"FNFTMaturityExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"newFNFTId\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"proportions\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"FNFTSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"fnftConfig\",\"type\":\"tuple\"}],\"name\":\"FNFTTimeLockMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"FNFTUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"compareTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracleDispatch\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"fnftConfig\",\"type\":\"tuple\"}],\"name\":\"FNFTValueLockMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"FNFTWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"depositAdditionalToFNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"extendFNFTMaturity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getERC20Fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatWeiFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trigger\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"arguments\",\"type\":\"bytes\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"fnftConfig\",\"type\":\"tuple\"}],\"name\":\"mintAddressLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"fnftConfig\",\"type\":\"tuple\"}],\"name\":\"mintTimeLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"primaryAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"compareTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unlockRisingEdge\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"oracleDispatch\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"fnftConfig\",\"type\":\"tuple\"}],\"name\":\"mintValueLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20\",\"type\":\"uint256\"}],\"name\":\"setERC20Fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wethFee\",\"type\":\"uint256\"}],\"name\":\"setFlatWeiFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"proportions\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"splitFNFT\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"newFNFTIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenUID\",\"type\":\"uint256\"}],\"name\":\"unlockFNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenUID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"withdrawFNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRevest.sol\":\"IRevest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IRewards.sol":{"IRewards":{"abi":[{"inputs":[],"name":"active","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_distributor","type":"address"}],"name":"addReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_distributor","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"approveRewardDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"claimableRewards","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IRewards.EarnedData[]","name":"userRewards","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_forward","type":"address"}],"name":"getReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"bool","name":"_startActive","type":"bool"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardTokenLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rid","type":"uint256"}],"name":"rewardTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"active()":"02fb0c5e","addReward(address,address)":"40b47e1a","approveRewardDistributor(address,address,bool)":"6724c910","balanceOf(address)":"70a08231","claimableRewards(address)":"dc01f60d","deposit(address,uint256)":"47e7ef24","getReward(address)":"c00007b0","initialize(uint256,bool)":"27964666","notifyRewardAmount(address,uint256)":"b66503cf","rewardTokenLength()":"857cb94a","rewardTokens(uint256)":"7bb7bed1","withdraw(address,uint256)":"f3fef3a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"approveRewardDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"claimableRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewards.EarnedData[]\",\"name\":\"userRewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forward\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_startActive\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rid\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRewards.sol\":\"IRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRewards.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >= 0.8.0;\\n\\ninterface IRewards{\\n    struct EarnedData {\\n        address token;\\n        uint256 amount;\\n    }\\n    \\n    function initialize(uint256 _pid, bool _startActive) external;\\n    function addReward(address _rewardsToken, address _distributor) external;\\n    function approveRewardDistributor(\\n        address _rewardsToken,\\n        address _distributor,\\n        bool _approved\\n    ) external;\\n    function deposit(address _owner, uint256 _amount) external;\\n    function withdraw(address _owner, uint256 _amount) external;\\n    function getReward(address _forward) external;\\n    function notifyRewardAmount(address _rewardsToken, uint256 _reward) external;\\n    function balanceOf(address account) external view returns (uint256);\\n    function claimableRewards(address _account) external view returns(EarnedData[] memory userRewards);\\n    function rewardTokens(uint256 _rid) external view returns (address);\\n    function rewardTokenLength() external view returns(uint256);\\n    function active() external view returns(bool);\\n}\\n\",\"keccak256\":\"0x5c4bd045413172f1911d4756733f9914dd33044472ccfbe41a2479d3add977df\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IRewardsHandler.sol":{"IRewardsHandler":{"abi":[{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"claimRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"bool","name":"isBasic","type":"bool"}],"name":"getAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"getRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"receiveFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"stake","type":"address"}],"name":"setStakingContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"newShares","type":"uint256"}],"name":"updateBasicShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"newShares","type":"uint256"}],"name":"updateLPShares","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"claimRewards(uint256,address)":"6c7b69cb","getAllocPoint(uint256,address,bool)":"352152ff","getRewards(uint256,address)":"29d21a00","receiveFee(address,uint256)":"2316ad32","setStakingContract(address)":"9dd373b9","updateBasicShares(uint256,uint256)":"7af3a86f","updateLPShares(uint256,uint256)":"61120328"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBasic\",\"type\":\"bool\"}],\"name\":\"getAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receiveFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stake\",\"type\":\"address\"}],\"name\":\"setStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"name\":\"updateBasicShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"name\":\"updateLPShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRewardsHandler.sol\":\"IRewardsHandler\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRewardsHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRewardsHandler {\\n\\n    struct UserBalance {\\n        uint allocPoint; // Allocation points\\n        uint lastMul;\\n    }\\n\\n    function receiveFee(address token, uint amount) external;\\n\\n    function updateLPShares(uint fnftId, uint newShares) external;\\n\\n    function updateBasicShares(uint fnftId, uint newShares) external;\\n\\n    function getAllocPoint(uint fnftId, address token, bool isBasic) external view returns (uint);\\n\\n    function claimRewards(uint fnftId, address caller) external returns (uint);\\n\\n    function setStakingContract(address stake) external;\\n\\n    function getRewards(uint fnftId, address token) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x7940819dfa042009e0b10dff3dd7224f3d1ae3a4c7addab3e8f33631c1ed5db7\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ITokenVault.sol":{"ITokenVault":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"old","type":"tuple"}],"name":"cloneFNFTConfig","outputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"fnftConfig","type":"tuple"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"from","type":"address"}],"name":"createFNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getFNFT","outputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getFNFTCurrentValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getNontransferable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"}],"name":"getSplitsRemaining","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"newFNFTId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"handleMultipleDeposits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"pipeToContract","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"depositMul","type":"uint256"},{"internalType":"uint256","name":"split","type":"uint256"},{"internalType":"uint256","name":"depositStopTime","type":"uint256"},{"internalType":"bool","name":"maturityExtension","type":"bool"},{"internalType":"bool","name":"isMulti","type":"bool"},{"internalType":"bool","name":"nontransferrable","type":"bool"}],"internalType":"struct IRevest.FNFTConfig","name":"fnftConfig","type":"tuple"}],"name":"mapFNFTToToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256[]","name":"newFNFTIds","type":"uint256[]"},{"internalType":"uint256[]","name":"proportions","type":"uint256[]"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"splitFNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fnftId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"cloneFNFTConfig((address,address,uint256,uint256,uint256,uint256,bool,bool,bool))":"0bb007b8","createFNFT(uint256,(address,address,uint256,uint256,uint256,uint256,bool,bool,bool),uint256,address)":"8717293d","depositToken(uint256,uint256,uint256)":"a3606b90","getFNFT(uint256)":"522f9b37","getFNFTCurrentValue(uint256)":"3398498d","getNontransferable(uint256)":"f5e574a5","getSplitsRemaining(uint256)":"14f487fa","handleMultipleDeposits(uint256,uint256,uint256)":"375d59ba","mapFNFTToToken(uint256,(address,address,uint256,uint256,uint256,uint256,bool,bool,bool))":"3c8b3b62","splitFNFT(uint256,uint256[],uint256[],uint256)":"fbe42921","withdrawToken(uint256,uint256,address)":"5d61210d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"old\",\"type\":\"tuple\"}],\"name\":\"cloneFNFTConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"fnftConfig\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"createFNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getFNFT\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getFNFTCurrentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getNontransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"}],\"name\":\"getSplitsRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFNFTId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"handleMultipleDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pipeToContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositMul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"split\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositStopTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"maturityExtension\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMulti\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nontransferrable\",\"type\":\"bool\"}],\"internalType\":\"struct IRevest.FNFTConfig\",\"name\":\"fnftConfig\",\"type\":\"tuple\"}],\"name\":\"mapFNFTToToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"newFNFTIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"proportions\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"splitFNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fnftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ITokenVault.sol\":\"ITokenVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/ITokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ITokenVault {\\n\\n    function createFNFT(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig,\\n        uint quantity,\\n        address from\\n    ) external;\\n\\n    function withdrawToken(\\n        uint fnftId,\\n        uint quantity,\\n        address user\\n    ) external;\\n\\n    function depositToken(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external;\\n\\n    function cloneFNFTConfig(IRevest.FNFTConfig memory old) external returns (IRevest.FNFTConfig memory);\\n\\n    function mapFNFTToToken(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external;\\n\\n    function handleMultipleDeposits(\\n        uint fnftId,\\n        uint newFNFTId,\\n        uint amount\\n    ) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory newFNFTIds,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external;\\n\\n    function getFNFT(uint fnftId) external view returns (IRevest.FNFTConfig memory);\\n    function getFNFTCurrentValue(uint fnftId) external view returns (uint);\\n    function getNontransferable(uint fnftId) external view returns (bool);\\n    function getSplitsRemaining(uint fnftId) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xaf57460b4494ba71a094c4c89f095254c65796c1ddff0f41978c5f141472962d\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IVotingEscrow.sol":{"IVotingEscrow":{"abi":[{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_unlock_time","type":"uint256"}],"name":"create_lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"increase_amount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_unlock_time","type":"uint256"}],"name":"increase_unlock_time","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"locked__end","outputs":[{"internalType":"uint256","name":"lockEnd","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"smart_wallet_checker","outputs":[{"internalType":"address","name":"walletCheck","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"tok","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"user_point_epoch","outputs":[{"internalType":"uint256","name":"epoch","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"user_point_history","outputs":[{"components":[{"internalType":"int128","name":"bias","type":"int128"},{"internalType":"int128","name":"slope","type":"int128"},{"internalType":"uint256","name":"ts","type":"uint256"},{"internalType":"uint256","name":"blk","type":"uint256"}],"internalType":"struct IVotingEscrow.Point","name":"pt","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"Provider interface for Revest FNFTs","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address)":"70a08231","create_lock(uint256,uint256)":"65fc3873","increase_amount(uint256)":"4957677c","increase_unlock_time(uint256)":"eff7a612","locked__end(address)":"adc63589","smart_wallet_checker()":"7175d4f7","token()":"fc0c546a","user_point_epoch(address)":"010ae757","user_point_history(address,uint256)":"28d09d47","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unlock_time\",\"type\":\"uint256\"}],\"name\":\"create_lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increase_amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlock_time\",\"type\":\"uint256\"}],\"name\":\"increase_unlock_time\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"locked__end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"smart_wallet_checker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"walletCheck\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tok\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"user_point_epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"user_point_history\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"}],\"internalType\":\"struct IVotingEscrow.Point\",\"name\":\"pt\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provider interface for Revest FNFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVotingEscrow.sol\":\"IVotingEscrow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/interfaces/IRegistryProvider.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRegistryProvider {\\n    function setAddressRegistry(address revest) external;\\n\\n    function getAddressRegistry() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ccc21fd55781813da82184aa94fe7779e54fc58f27f2ecba81a5e23efc7c903\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IVotingEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRegistryProvider.sol\\\";\\nimport '@openzeppelin/contracts/utils/introspection/IERC165.sol';\\n\\n/**\\n * @title Provider interface for Revest FNFTs\\n */\\ninterface IVotingEscrow {\\n\\n    struct Point {\\n        int128 bias;\\n        int128 slope;\\n        uint ts;\\n        uint blk;\\n    }\\n\\n    function create_lock(uint _value, uint _unlock_time) external;\\n\\n    function increase_amount(uint _value) external;\\n\\n    function increase_unlock_time(uint _unlock_time) external;\\n\\n    function withdraw() external;\\n\\n    function smart_wallet_checker() external view returns (address walletCheck);\\n\\n    function token() external view returns (address tok);\\n\\n    function locked__end(address _addr) external view returns (uint lockEnd);\\n\\n    function balanceOf(address _addr) external view returns (uint balance);\\n\\n    function user_point_epoch(address _addr) external view returns (uint epoch);\\n\\n    function user_point_history(address _addr, uint index) external view returns (Point memory pt);\\n\\n}\\n\",\"keccak256\":\"0x30ab66cd365ad74ba24835a601028cf3dc557a40425aafdd4f34a6fc8eff29ad\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lib/RevestHelper.sol":{"RevestHelper":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0e3463c2fb59688b8df97b85fbebde5c23848cea56e886f4c55ca09a90f48b664736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xE3 CHAINID EXTCODECOPY 0x2F 0xB5 SWAP7 DUP9 0xB8 0xDF SWAP8 0xB8 0x5F 0xBE 0xBD 0xE5 0xC2 CODESIZE 0x48 0xCE 0xA5 PUSH15 0x886F4C55CA09A90F48B664736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ","sourceMap":"271:5565:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;271:5565:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0e3463c2fb59688b8df97b85fbebde5c23848cea56e886f4c55ca09a90f48b664736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xE3 CHAINID EXTCODECOPY 0x2F 0xB5 SWAP7 DUP9 0xB8 0xDF SWAP8 0xB8 0x5F 0xBE 0xBD 0xE5 0xC2 CODESIZE 0x48 0xCE 0xA5 PUSH15 0x886F4C55CA09A90F48B664736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ","sourceMap":"271:5565:28:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"amountToDecimal(uint256,address)":"infinite","boolToString(bool)":"infinite","decimalString(uint256,uint8)":"infinite","generateDecimalString(struct RevestHelper.DecimalStringParams memory)":"infinite","getLockType(enum IRevest.LockType)":"infinite","getName(address)":"infinite","getTicker(address)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/RevestHelper.sol\":\"RevestHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"contracts/interfaces/ILockManager.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ILockManager {\\n\\n    function createLock(uint fnftId, IRevest.LockParam memory lock) external returns (uint);\\n\\n    function getLock(uint lockId) external view returns (IRevest.Lock memory);\\n\\n    function fnftIdToLockId(uint fnftId) external view returns (uint);\\n\\n    function fnftIdToLock(uint fnftId) external view returns (IRevest.Lock memory);\\n\\n    function pointFNFTToLock(uint fnftId, uint lockId) external;\\n\\n    function lockTypes(uint tokenId) external view returns (IRevest.LockType);\\n\\n    function unlockFNFT(uint fnftId, address sender) external returns (bool);\\n\\n    function getLockMaturity(uint fnftId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7b3170ed345d9750b315197f48f8076c8731e21640f7a063563bc93a6c2d1c00\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/IRevest.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRevest {\\n    event FNFTTimeLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint endTime,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTValueLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address compareTo,\\n        address oracleDispatch,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTAddressLockMinted(\\n        address indexed asset,\\n        address indexed from,\\n        uint indexed fnftId,\\n        address trigger,\\n        uint[] quantities,\\n        FNFTConfig fnftConfig\\n    );\\n\\n    event FNFTWithdrawn(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed quantity\\n    );\\n\\n    event FNFTSplit(\\n        address indexed from,\\n        uint[] indexed newFNFTId,\\n        uint[] indexed proportions,\\n        uint quantity\\n    );\\n\\n    event FNFTUnlocked(\\n        address indexed from,\\n        uint indexed fnftId\\n    );\\n\\n    event FNFTMaturityExtended(\\n        address indexed from,\\n        uint indexed fnftId,\\n        uint indexed newExtendedTime\\n    );\\n\\n    event FNFTAddionalDeposited(\\n        address indexed from,\\n        uint indexed newFNFTId,\\n        uint indexed quantity,\\n        uint amount\\n    );\\n\\n    struct FNFTConfig {\\n        address asset; // The token being stored\\n        address pipeToContract; // Indicates if FNFT will pipe to another contract\\n        uint depositAmount; // How many tokens\\n        uint depositMul; // Deposit multiplier\\n        uint split; // Number of splits remaining\\n        uint depositStopTime; //\\n        bool maturityExtension; // Maturity extensions remaining\\n        bool isMulti; //\\n        bool nontransferrable; // False by default (transferrable) //\\n    }\\n\\n    // Refers to the global balance for an ERC20, encompassing possibly many FNFTs\\n    struct TokenTracker {\\n        uint lastBalance;\\n        uint lastMul;\\n    }\\n\\n    enum LockType {\\n        DoesNotExist,\\n        TimeLock,\\n        ValueLock,\\n        AddressLock\\n    }\\n\\n    struct LockParam {\\n        address addressLock;\\n        uint timeLockExpiry;\\n        LockType lockType;\\n        ValueLock valueLock;\\n    }\\n\\n    struct Lock {\\n        address addressLock;\\n        LockType lockType;\\n        ValueLock valueLock;\\n        uint timeLockExpiry;\\n        uint creationTime;\\n        bool unlocked;\\n    }\\n\\n    struct ValueLock {\\n        address asset;\\n        address compareTo;\\n        address oracle;\\n        uint unlockValue;\\n        bool unlockRisingEdge;\\n    }\\n\\n    function mintTimeLock(\\n        uint endTime,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintValueLock(\\n        address primaryAsset,\\n        address compareTo,\\n        uint unlockValue,\\n        bool unlockRisingEdge,\\n        address oracleDispatch,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function mintAddressLock(\\n        address trigger,\\n        bytes memory arguments,\\n        address[] memory recipients,\\n        uint[] memory quantities,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external payable returns (uint);\\n\\n    function withdrawFNFT(uint tokenUID, uint quantity) external;\\n\\n    function unlockFNFT(uint tokenUID) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external returns (uint[] memory newFNFTIds);\\n\\n    function depositAdditionalToFNFT(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external returns (uint);\\n\\n    function extendFNFTMaturity(\\n        uint fnftId,\\n        uint endTime\\n    ) external returns (uint);\\n\\n    function setFlatWeiFee(uint wethFee) external;\\n\\n    function setERC20Fee(uint erc20) external;\\n\\n    function getFlatWeiFee() external view returns (uint);\\n\\n    function getERC20Fee() external view returns (uint);\\n\\n\\n}\\n\",\"keccak256\":\"0x627b4d1fd778f1cca214e26eb5c596d174837f62284f2b3c3a351abb2a4ce79a\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/interfaces/ITokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IRevest.sol\\\";\\n\\ninterface ITokenVault {\\n\\n    function createFNFT(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig,\\n        uint quantity,\\n        address from\\n    ) external;\\n\\n    function withdrawToken(\\n        uint fnftId,\\n        uint quantity,\\n        address user\\n    ) external;\\n\\n    function depositToken(\\n        uint fnftId,\\n        uint amount,\\n        uint quantity\\n    ) external;\\n\\n    function cloneFNFTConfig(IRevest.FNFTConfig memory old) external returns (IRevest.FNFTConfig memory);\\n\\n    function mapFNFTToToken(\\n        uint fnftId,\\n        IRevest.FNFTConfig memory fnftConfig\\n    ) external;\\n\\n    function handleMultipleDeposits(\\n        uint fnftId,\\n        uint newFNFTId,\\n        uint amount\\n    ) external;\\n\\n    function splitFNFT(\\n        uint fnftId,\\n        uint[] memory newFNFTIds,\\n        uint[] memory proportions,\\n        uint quantity\\n    ) external;\\n\\n    function getFNFT(uint fnftId) external view returns (IRevest.FNFTConfig memory);\\n    function getFNFTCurrentValue(uint fnftId) external view returns (uint);\\n    function getNontransferable(uint fnftId) external view returns (bool);\\n    function getSplitsRemaining(uint fnftId) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xaf57460b4494ba71a094c4c89f095254c65796c1ddff0f41978c5f141472962d\",\"license\":\"GNU-GPL v3.0 or later\"},\"contracts/lib/RevestHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-GPL v3.0 or later\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ITokenVault.sol\\\";\\nimport \\\"../interfaces/ILockManager.sol\\\";\\nimport \\\"../interfaces/IRevest.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n\\nlibrary RevestHelper {\\n\\n \\n    function boolToString(bool arg) internal pure returns (string memory boolean) {\\n        boolean = arg ? \\\"true\\\" : \\\"false\\\";\\n    }\\n\\n    function getLockType(IRevest.LockType lock) internal pure returns (string memory lockType) {\\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Time\\\";\\n        } \\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Value\\\";\\n        }\\n        if(lock == IRevest.LockType.TimeLock) {\\n            lockType = \\\"Address\\\";\\n        }\\n    } \\n\\n    function getTicker(address asset) internal view returns (string memory ticker) {\\n        try IERC20Metadata(asset).symbol() returns (string memory tick) {\\n            ticker = tick;\\n        } catch {\\n            ticker = '???';\\n        }\\n    }\\n\\n    function getName(address asset) internal view returns (string memory ticker) {\\n        try IERC20Metadata(asset).name() returns (string memory tick) {\\n            ticker = tick;\\n        } catch {\\n            ticker = 'Unknown Token';\\n        }\\n    }\\n\\n    function amountToDecimal(uint amt, address asset) internal view returns (string memory decStr) {\\n        uint8 decimals;\\n        try IERC20Metadata(asset).decimals() returns (uint8 dec) {\\n            decimals = dec;\\n        } catch {\\n            decimals = 18;\\n        }\\n        decStr = decimalString(amt, decimals);\\n    }\\n\\n    function toString(uint _i) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint j = _i;\\n        uint len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint k = len;\\n        while (_i != 0) {\\n            k = k-1;\\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    function decimalString(uint256 number, uint8 decimals) internal pure returns(string memory){\\n        uint256 tenPowDecimals = 10 ** decimals;\\n\\n        uint256 temp = number;\\n        uint8 digits;\\n        uint8 numSigfigs;\\n        while (temp != 0) {\\n            if (numSigfigs > 0) {\\n                // count all digits preceding least significant figure\\n                numSigfigs++;\\n            } else if (temp % 10 != 0) {\\n                numSigfigs++;\\n            }\\n            digits++;\\n            temp /= 10;\\n        }\\n\\n        DecimalStringParams memory params;\\n        if((digits - numSigfigs) >= decimals) {\\n            // no decimals, ensure we preserve all trailing zeros\\n            params.sigfigs = number / tenPowDecimals;\\n            params.sigfigIndex = digits - decimals;\\n            params.bufferLength = params.sigfigIndex;\\n        } else {\\n            // chop all trailing zeros for numbers with decimals\\n            params.sigfigs = number / (10 ** (digits - numSigfigs));\\n            if(tenPowDecimals > number){\\n                // number is less tahn one\\n                // in this case, there may be leading zeros after the decimal place \\n                // that need to be added\\n\\n                // offset leading zeros by two to account for leading '0.'\\n                params.zerosStartIndex = 2;\\n                params.zerosEndIndex = decimals - digits + 2;\\n                params.sigfigIndex = numSigfigs + params.zerosEndIndex;\\n                params.bufferLength = params.sigfigIndex;\\n                params.isLessThanOne = true;\\n            } else {\\n                // In this case, there are digits before and\\n                // after the decimal place\\n                params.sigfigIndex = numSigfigs + 1;\\n                params.decimalIndex = digits - decimals + 1;\\n            }\\n        }\\n        params.bufferLength = params.sigfigIndex;\\n        return generateDecimalString(params);\\n    }\\n\\n    // With modifications, the below taken \\n    // from https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/NFTDescriptor.sol#L189-L231\\n\\n    struct DecimalStringParams {\\n        // significant figures of decimal\\n        uint256 sigfigs;\\n        // length of decimal string\\n        uint8 bufferLength;\\n        // ending index for significant figures (funtion works backwards when copying sigfigs)\\n        uint8 sigfigIndex;\\n        // index of decimal place (0 if no decimal)\\n        uint8 decimalIndex;\\n        // start index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosStartIndex;\\n        // end index for trailing/leading 0's for very small/large numbers\\n        uint8 zerosEndIndex;\\n        // true if decimal number is less than one\\n        bool isLessThanOne;\\n    }\\n\\n    function generateDecimalString(DecimalStringParams memory params) private pure returns (string memory) {\\n        bytes memory buffer = new bytes(params.bufferLength);\\n        if (params.isLessThanOne) {\\n            buffer[0] = '0';\\n            buffer[1] = '.';\\n        }\\n\\n        // add leading/trailing 0's\\n        for (uint256 zerosCursor = params.zerosStartIndex; zerosCursor < params.zerosEndIndex; zerosCursor++) {\\n            buffer[zerosCursor] = bytes1(uint8(48));\\n        }\\n        // add sigfigs\\n        while (params.sigfigs > 0) {\\n            if (params.decimalIndex > 0 && params.sigfigIndex == params.decimalIndex) {\\n                buffer[--params.sigfigIndex] = '.';\\n            }\\n            buffer[--params.sigfigIndex] = bytes1(uint8(uint256(48) + (params.sigfigs % 10)));\\n            params.sigfigs /= 10;\\n        }\\n        return string(buffer);\\n    }\\n}\",\"keccak256\":\"0xe9708bee1fa68c61aeca3780e52cb8eb741844388c508cda66195fabbb967cdb\",\"license\":\"GNU-GPL v3.0 or later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}